from PySide6.QtWidgets import (
    QWidget, QVBoxLayout, QLabel, QHBoxLayout, QTableWidget,
    QPushButton, QSpacerItem, QSizePolicy, QGraphicsOpacityEffect,
    QGraphicsDropShadowEffect, QHeaderView, QToolButton, QApplication,
    QStyle, QFrame, QScrollArea, QTableWidgetItem
)
from PySide6.QtCore import Qt, QTimer, QPropertyAnimation, QRect, QEasingCurve, QSequentialAnimationGroup
from PySide6.QtGui import QColor, QCursor, QFont, QPalette, QLinearGradient, QBrush
import random


# –£–ë–ò–†–ê–ï–ú —Ñ—É–Ω–∫—Ü–∏—é insert_action_icons - –æ–Ω–∞ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞
# def insert_action_icons(table: QTableWidget, row: int, col: int):


class AccountManagerTab(QWidget):
    def __init__(self):
        super().__init__()
        self.setObjectName("AccountManagerTab")

        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        layout = QVBoxLayout(self)
        layout.setContentsMargins(24, 24, 24, 24)
        layout.setSpacing(0)  # –£–ë–ò–†–ê–ï–ú –í–°–ï –û–¢–°–¢–£–ü–´

        # –°–ù–ê–ß–ê–õ–ê —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.main_content = QWidget()
        self.main_content.setObjectName("MainContent")
        self.main_content_layout = QVBoxLayout(self.main_content)
        self.main_content_layout.setContentsMargins(0, 0, 0, 0)
        self.main_content_layout.setSpacing(0)  # –£–ë–ò–†–ê–ï–ú –í–°–ï –û–¢–°–¢–£–ü–´

        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
        self._create_loading_animation(layout)

        # –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        self._create_header()
        self._create_stats_section()
        self._create_table_section()  # –¢–∞–±–ª–∏—Ü–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å—á–µ—Ç—á–∏–∫–æ–≤
        self._create_pagination()

        # –°–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ layout
        self.main_content.hide()
        layout.addWidget(self.main_content)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
        self._start_loading_sequence()

    def _create_loading_animation(self, layout):
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        self.loading_container = QWidget()
        self.loading_container.setObjectName("LoadingContainer")
        loading_layout = QVBoxLayout(self.loading_container)
        loading_layout.setContentsMargins(0, 20, 0, 20)  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã –∑–∞–≥—Ä—É–∑–∫–∏
        loading_layout.setSpacing(20)

        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        loading_text = QLabel("–ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")
        loading_text.setObjectName("LoadingText")
        loading_text.setAlignment(Qt.AlignCenter)
        loading_text.setStyleSheet("""
            QLabel#LoadingText {
                font-size: 18px;
                font-weight: 500;
                color: rgba(255, 255, 255, 0.8);
            }
        """)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä (–∏–º–∏—Ç–∞—Ü–∏—è)
        progress_container = QWidget()
        progress_container.setFixedSize(300, 4)
        progress_container.setStyleSheet("""
            QWidget {
                background: rgba(255, 255, 255, 0.1);
                border-radius: 2px;
            }
        """)

        self.progress_bar = QWidget(progress_container)
        self.progress_bar.setObjectName("ProgressBar")
        self.progress_bar.setGeometry(0, 0, 0, 4)
        self.progress_bar.setStyleSheet("""
            QWidget#ProgressBar {
                background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                    stop:0 #3B82F6, stop:1 #8B5CF6);
                border-radius: 2px;
            }
        """)

        loading_layout.addStretch()
        loading_layout.addWidget(loading_text, 0, Qt.AlignCenter)
        loading_layout.addWidget(progress_container, 0, Qt.AlignCenter)
        loading_layout.addStretch()

        layout.addWidget(self.loading_container)

    def _create_header(self):
        # –¢–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ —Ü–µ–Ω—Ç—Ä—É - –ë–ï–ó –∫–Ω–æ–ø–∫–∏
        title_container = QWidget()
        title_layout = QHBoxLayout(title_container)
        title_layout.setContentsMargins(0, 0, 0, 10)  # –ú–∞–ª–µ–Ω—å–∫–∏–π –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É

        title = QLabel("–ú–µ–Ω–µ–¥–∂–µ—Ä –ê–∫–∫–∞—É–Ω—Ç–æ–≤")
        title.setObjectName("MainTitle")
        title.setAlignment(Qt.AlignCenter)

        title_layout.addStretch()
        title_layout.addWidget(title)
        title_layout.addStretch()

        self.main_content_layout.addWidget(title_container)

    def _create_stats_section(self):
        stats_container = QWidget()
        stats_container.setObjectName("StatsContainer")
        stats_layout = QHBoxLayout(stats_container)
        stats_layout.setContentsMargins(0, 5, 0, 15)  # –ù–µ–±–æ–ª—å—à–∏–µ –æ—Ç—Å—Ç—É–ø—ã
        stats_layout.setSpacing(20)  # –ë–æ–ª—å—à–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –º–µ–∂–¥—É —Å—á–µ—Ç—á–∏–∫–∞–º–∏

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ - –†–ê–°–®–ò–†–Ø–ï–ú –ø–æ –≤—Å–µ–π —à–∏—Ä–∏–Ω–µ
        stats_data = [
            ("–í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤", "153", "#3B82F6"),
            ("–ú–µ—Ä—Ç–≤—ã—Ö", "144", "#EF4444"),
            ("–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ", "9", "#F59E0B"),
            ("–ì–æ—Ç–æ–≤—ã—Ö –∫ —Ä–∞–±–æ—Ç–µ", "0", "#10B981")
        ]

        self.stat_boxes = []
        for i, (title, value, color) in enumerate(stats_data):
            box = self._build_stat_box(title, value, color)
            self.stat_boxes.append(box)
            stats_layout.addWidget(box)

        # –£–ë–ò–†–ê–ï–ú addStretch() —á—Ç–æ–±—ã —Å—á–µ—Ç—á–∏–∫–∏ —Ä–∞—Å—Ç—è–Ω—É–ª–∏—Å—å –ø–æ –≤—Å–µ–π —à–∏—Ä–∏–Ω–µ
        self.main_content_layout.addWidget(stats_container)

    def _build_stat_box(self, title, value, color):
        box = QWidget()
        box.setObjectName("StatBox")
        # –†–ê–°–®–ò–†–Ø–ï–ú —Å—á–µ—Ç—á–∏–∫–∏ - —É–±–∏—Ä–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä
        box.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        box.setFixedHeight(90)  # –¢–æ–ª—å–∫–æ —Ñ–∏–∫—Å–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É

        # Layout
        layout = QHBoxLayout(box)
        layout.setContentsMargins(20, 20, 20, 20)  # –ë–æ–ª—å—à–µ –æ—Ç—Å—Ç—É–ø–æ–≤ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
        layout.setSpacing(15)

        # –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        indicator = QWidget()
        indicator.setObjectName("StatIndicator")
        indicator.setFixedSize(5, 50)  # –ß—É—Ç—å —à–∏—Ä–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        indicator.setStyleSheet(f"""
            QWidget#StatIndicator {{
                background: {color};
                border-radius: 3px;
            }}
        """)

        # –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - —Ç–µ–∫—Å—Ç
        text_container = QWidget()
        text_layout = QVBoxLayout(text_container)
        text_layout.setContentsMargins(0, 0, 0, 0)
        text_layout.setSpacing(5)

        # –ó–Ω–∞—á–µ–Ω–∏–µ
        value_label = QLabel(value)
        value_label.setObjectName("StatValue")
        value_label.setStyleSheet(f"""
            QLabel#StatValue {{
                font-size: 26px;
                font-weight: 700;
                color: {color};
            }}
        """)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel(title)
        title_label.setObjectName("StatTitle")
        title_label.setStyleSheet("""
            QLabel#StatTitle {
                font-size: 13px;
                font-weight: 500;
                color: rgba(255, 255, 255, 0.8);
            }
        """)

        text_layout.addWidget(value_label)
        text_layout.addWidget(title_label)
        text_layout.addStretch()

        layout.addWidget(indicator)
        layout.addWidget(text_container)

        return box

    def _create_table_section(self):
        # –ö–Ω–æ–ø–∫–∏ –º–∞—Å—Å–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –ü–ï–†–ï–î —Ç–∞–±–ª–∏—Ü–µ–π
        actions_container = QWidget()
        actions_container.setObjectName("ActionsContainer")
        actions_layout = QHBoxLayout(actions_container)
        actions_layout.setContentsMargins(0, 5, 0, 10)
        actions_layout.setSpacing(10)

        # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ" - —Ç–µ–ø–µ—Ä—å –æ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
        section_title = QLabel("üìã –°–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
        section_title.setObjectName("SectionTitle")
        section_title.setStyleSheet("""
            QLabel#SectionTitle {
                font-size: 16px;
                font-weight: 600;
                color: rgba(255, 255, 255, 0.9);
            }
        """)

        # –ö–Ω–æ–ø–∫–∏ –º–∞—Å—Å–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –ë–ï–ó "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ"
        delete_btn = QPushButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å")
        delete_btn.setObjectName("ActionButton")
        delete_btn.setFixedSize(100, 36)

        update_btn = QPushButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å")
        update_btn.setObjectName("ActionButton")
        update_btn.setFixedSize(110, 36)

        move_btn = QPushButton("üì¶ –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å")
        move_btn.setObjectName("ActionButton")
        move_btn.setFixedSize(130, 36)

        archive_btn = QPushButton("üìÅ –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å")
        archive_btn.setObjectName("ActionButton")
        archive_btn.setFixedSize(140, 36)

        # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∞
        add_btn = QPushButton("+ –î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç")
        add_btn.setObjectName("AddButton")
        add_btn.setFixedSize(160, 36)

        actions_layout.addWidget(section_title)
        actions_layout.addWidget(delete_btn)
        actions_layout.addWidget(update_btn)
        actions_layout.addWidget(move_btn)
        actions_layout.addWidget(archive_btn)
        actions_layout.addStretch()
        actions_layout.addWidget(add_btn)

        self.main_content_layout.addWidget(actions_container)

        # –¢–µ–ø–µ—Ä—å —Å–∞–º–∞ —Ç–∞–±–ª–∏—Ü–∞
        table_container = QWidget()
        table_container.setObjectName("TableContainer")
        table_layout = QVBoxLayout(table_container)
        table_layout.setContentsMargins(0, 0, 0, 0)

        # –¢–∞–±–ª–∏—Ü–∞ –° –ù–£–ú–ï–†–ê–¶–ò–ï–ô –ò –ß–ï–ö–ë–û–ö–°–ê–ú–ò - 8 –∫–æ–ª–æ–Ω–æ–∫
        self.table = QTableWidget(10, 8)  # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É –¥–ª—è —á–µ–∫–±–æ–∫—Å–æ–≤
        self.table.setObjectName("ModernTable")
        self.table.setHorizontalHeaderLabels([
            "",  # –ü—É—Å—Ç–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ - –¥–æ–±–∞–≤–∏–º —á–µ–∫–±–æ–∫—Å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
            "#",  # –ù—É–º–µ—Ä–∞—Ü–∏—è
            "–ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞",
            "üåç –ì–µ–æ",
            "üìÖ –î–Ω–µ–π —Å–æ–∑–¥–∞–Ω",
            "‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ–Ω–ª–∞–π–Ω",
            "üë§ –ò–º—è",
            "üíé –ü—Ä–µ–º–∏—É–º"
        ])
        self.table.verticalHeader().setVisible(False)
        self.table.setAlternatingRowColors(True)
        self.table.setShowGrid(False)
        self.table.setSelectionBehavior(QTableWidget.SelectRows)

        # –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω—ã–π —á–µ–∫–±–æ–∫—Å –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        self._create_header_checkbox()

        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É —Å—Ç—Ä–æ–∫
        self.table.verticalHeader().setDefaultSectionSize(60)

        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
        self._fill_demo_data()

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–æ–Ω–æ–∫
        header = self.table.horizontalHeader()
        header.setSectionResizeMode(0, QHeaderView.Fixed)  # –ß–µ–∫–±–æ–∫—Å—ã - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
        header.setSectionResizeMode(1, QHeaderView.Fixed)  # –ù–æ–º–µ—Ä - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
        header.setSectionResizeMode(2, QHeaderView.Stretch)  # –ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
        header.setSectionResizeMode(3, QHeaderView.Stretch)  # –ì–µ–æ
        header.setSectionResizeMode(4, QHeaderView.Stretch)  # –î–Ω–µ–π —Å–æ–∑–¥–∞–Ω
        header.setSectionResizeMode(5, QHeaderView.Stretch)  # –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ–Ω–ª–∞–π–Ω
        header.setSectionResizeMode(6, QHeaderView.Stretch)  # –ò–º—è
        header.setSectionResizeMode(7, QHeaderView.Stretch)  # –ü—Ä–µ–º–∏—É–º

        # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è —Å–ª—É–∂–µ–±–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
        self.table.setColumnWidth(0, 50)  # –ß–µ–∫–±–æ–∫—Å—ã
        self.table.setColumnWidth(1, 60)  # –ù–æ–º–µ—Ä–∞

        table_layout.addWidget(self.table)
        self.main_content_layout.addWidget(table_container)
        """–°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —á–µ–∫–±–æ–∫—Å –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ —Ç–∞–±–ª–∏—Ü—ã"""
        header_widget = QWidget()
        header_layout = QHBoxLayout(header_widget)
        header_layout.setContentsMargins(0, 0, 0, 0)
        header_layout.setSpacing(0)

        # –ì–ª–∞–≤–Ω—ã–π —á–µ–∫–±–æ–∫—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö
        self.master_checkbox = QPushButton()
        self.master_checkbox.setObjectName("MasterCheckbox")
        self.master_checkbox.setCheckable(True)
        self.master_checkbox.setFixedSize(24, 24)
        self.master_checkbox.setStyleSheet("""
            QPushButton#MasterCheckbox {
                background: rgba(255, 255, 255, 0.1);
                border: 2px solid rgba(255, 255, 255, 0.4);
                border-radius: 6px;
            }
            QPushButton#MasterCheckbox:checked {
                background: #3B82F6;
                border: 2px solid #3B82F6;
            }
            QPushButton#MasterCheckbox:hover {
                border: 2px solid #3B82F6;
                background: rgba(59, 130, 246, 0.3);
            }
        """)
        self.master_checkbox.clicked.connect(self._toggle_all_checkboxes)

        header_layout.addStretch()
        header_layout.addWidget(self.master_checkbox)
        header_layout.addStretch()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–∂–µ—Ç –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
        self.table.horizontalHeader().sectionResized.connect(
            lambda index, oldSize, newSize: self._update_header_checkbox_position()
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–¥–∂–µ—Ç –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
        QTimer.singleShot(100, lambda: self._place_header_checkbox(header_widget))

    def _place_header_checkbox(self, widget):
        """–†–∞–∑–º–µ—â–∞–µ–º —á–µ–∫–±–æ–∫—Å –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ"""
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
        header = self.table.horizontalHeader()
        x = header.sectionPosition(0)
        width = header.sectionSize(0)

        widget.setParent(header)
        widget.setGeometry(x, 0, width, header.height())
        widget.show()

    def _update_header_checkbox_position(self):
        """–û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —á–µ–∫–±–æ–∫—Å–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–æ–≤"""
        # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ –∫–æ–ª–æ–Ω–æ–∫
        pass

    def _fill_demo_data(self):
        demo_data = [
            ["1", "@telegram_user_1", "RU", "15", "5 –º–∏–Ω –Ω–∞–∑–∞–¥", "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö.", "‚úÖ"],
            ["2", "@john_smith_usa", "US", "32", "1 —á–∞—Å –Ω–∞–∑–∞–¥", "John Smith", "‚ùå"],
            ["3", "@emma_wilson_uk", "UK", "8", "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥", "Emma Wilson", "‚úÖ"],
            ["4", "@hans_mueller_de", "DE", "45", "3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥", "Hans Mueller", "‚ùå"],
            ["5", "@marie_dubois_fr", "FR", "22", "5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥", "Marie Dubois", "‚úÖ"],
            ["6", "@tanaka_hiroshi", "JP", "67", "1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥", "Tanaka Hiroshi", "‚ùå"],
            ["7", "@li_wei_china", "CN", "11", "2 –¥–Ω—è –Ω–∞–∑–∞–¥", "Li Wei", "‚úÖ"],
            ["8", "@raj_patel_india", "IN", "29", "3 –¥–Ω—è –Ω–∞–∑–∞–¥", "Raj Patel", "‚ùå"],
            ["9", "@carlos_silva_br", "BR", "88", "1 –Ω–µ–¥–µ–ª—è –Ω–∞–∑–∞–¥", "Carlos Silva", "‚úÖ"],
            ["10", "@sarah_johnson", "AU", "156", "2 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥", "Sarah Johnson", "‚ùå"],
        ]

        for row, data in enumerate(demo_data):
            # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ–∫–±–æ–∫—Å–∞
            checkbox_container = QWidget()
            checkbox_layout = QHBoxLayout(checkbox_container)
            checkbox_layout.setContentsMargins(0, 0, 0, 0)
            checkbox_layout.setSpacing(0)

            # –°–æ–∑–¥–∞–µ–º –û–î–ò–ù–ê–ö–û–í–´–ï —á–µ–∫–±–æ–∫—Å—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏
            checkbox = QPushButton()
            checkbox.setObjectName("RowCheckbox")
            checkbox.setCheckable(True)
            checkbox.setFixedSize(24, 24)  # –¢–∞–∫–æ–π –∂–µ —Ä–∞–∑–º–µ—Ä –∫–∞–∫ –≥–ª–∞–≤–Ω—ã–π
            checkbox.setProperty("row", row)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –¥–ª—è shift-–≤—ã–±–æ—Ä–∞
            checkbox.setStyleSheet("""
                QPushButton#RowCheckbox {
                    background: rgba(255, 255, 255, 0.1);
                    border: 2px solid rgba(255, 255, 255, 0.4);
                    border-radius: 6px;
                }
                QPushButton#RowCheckbox:checked {
                    background: #3B82F6;
                    border: 2px solid #3B82F6;
                }
                QPushButton#RowCheckbox:hover {
                    border: 2px solid #3B82F6;
                    background: rgba(59, 130, 246, 0.3);
                }
            """)
            checkbox.clicked.connect(lambda checked, r=row: self._handle_checkbox_click(r, checked))

            # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —á–µ–∫–±–æ–∫—Å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
            checkbox_layout.addStretch()
            checkbox_layout.addWidget(checkbox)
            checkbox_layout.addStretch()

            self.table.setCellWidget(row, 0, checkbox_container)

            # –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ (—Å–¥–≤–∏–≥–∞–µ–º –Ω–∞ +1)
            for col, value in enumerate(data, 1):  # –ù–∞—á–∏–Ω–∞–µ–º —Å –∫–æ–ª–æ–Ω–∫–∏ 1
                item = QTableWidgetItem(str(value))
                item.setTextAlignment(Qt.AlignCenter | Qt.AlignVCenter)

                # –°—Ç–∏–ª—å –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ –Ω–æ–º–µ—Ä–æ–≤ (—Ç–µ–ø–µ—Ä—å –∫–æ–ª–æ–Ω–∫–∞ 1)
                if col == 1:  # –ö–æ–ª–æ–Ω–∫–∞ –Ω–æ–º–µ—Ä–æ–≤
                    font = item.font()
                    font.setBold(True)
                    font.setPointSize(12)
                    item.setFont(font)
                    item.setForeground(QColor("#3B82F6"))  # –°–∏–Ω–∏–π —Ü–≤–µ—Ç –¥–ª—è –Ω–æ–º–µ—Ä–æ–≤

                # –¶–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞ - —Ç–µ–ø–µ—Ä—å –∫–æ–ª–æ–Ω–∫–∞ 7
                if col == 7:  # –ö–æ–ª–æ–Ω–∫–∞ –ø—Ä–µ–º–∏—É–º (—Å–¥–≤–∏–Ω—É–ª–∞—Å—å –Ω–∞ +1)
                    if value == "‚úÖ":
                        item.setForeground(QColor("#00FF00"))  # –Ø–†–ö–û-–ó–ï–õ–ï–ù–´–ô
                        # –î–µ–ª–∞–µ–º —à—Ä–∏—Ñ—Ç –û–ì–†–û–ú–ù–´–ú
                        font = item.font()
                        font.setBold(True)
                        font.setPointSize(18)  # –û–ß–ï–ù–¨ –ë–û–õ–¨–®–û–ô —Ä–∞–∑–º–µ—Ä
                        item.setFont(font)
                    else:
                        item.setForeground(QColor("#FF0000"))  # –Ø–†–ö–û-–ö–†–ê–°–ù–´–ô
                        # –î–µ–ª–∞–µ–º —à—Ä–∏—Ñ—Ç –û–ì–†–û–ú–ù–´–ú
                        font = item.font()
                        font.setBold(True)
                        font.setPointSize(18)  # –û–ß–ï–ù–¨ –ë–û–õ–¨–®–û–ô —Ä–∞–∑–º–µ—Ä
                        item.setFont(font)

                self.table.setItem(row, col, item)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è shift-–≤—ã–±–æ—Ä–∞
        self.last_clicked_row = None

    def _create_pagination(self):
        pagination_container = QWidget()
        pagination_container.setObjectName("PaginationContainer")
        pag_layout = QHBoxLayout(pagination_container)
        pag_layout.setContentsMargins(0, 0, 0, 0)  # –£–ë–ò–†–ê–ï–ú –í–°–ï –û–¢–°–¢–£–ü–´

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø–∏—Å—è—Ö
        info_label = QLabel("–ü–æ–∫–∞–∑–∞–Ω–æ 1-10 –∏–∑ 153 –∑–∞–ø–∏—Å–µ–π")
        info_label.setObjectName("PaginationInfo")

        pag_layout.addWidget(info_label)
        pag_layout.addStretch()

        # –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        self.prev_btn = QPushButton("‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∞—è")
        self.prev_btn.setObjectName("PaginationButton")
        self.prev_btn.setFixedSize(120, 36)

        page_label = QLabel("–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 –∏–∑ 16")
        page_label.setObjectName("PageLabel")

        self.next_btn = QPushButton("–°–ª–µ–¥—É—é—â–∞—è ‚Üí")
        self.next_btn.setObjectName("PaginationButton")
        self.next_btn.setFixedSize(120, 36)

        pag_layout.addWidget(self.prev_btn)
        pag_layout.addWidget(page_label)
        pag_layout.addWidget(self.next_btn)

        self.main_content_layout.addWidget(pagination_container)

    def _create_header_checkbox(self):
        """–°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —á–µ–∫–±–æ–∫—Å –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ —Ç–∞–±–ª–∏—Ü—ã"""
        header_widget = QWidget()
        header_layout = QHBoxLayout(header_widget)
        header_layout.setContentsMargins(0, 0, 0, 0)
        header_layout.setSpacing(0)

        # –ì–ª–∞–≤–Ω—ã–π —á–µ–∫–±–æ–∫—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö
        self.master_checkbox = QPushButton()
        self.master_checkbox.setObjectName("MasterCheckbox")
        self.master_checkbox.setCheckable(True)
        self.master_checkbox.setFixedSize(24, 24)
        self.master_checkbox.setStyleSheet("""
            QPushButton#MasterCheckbox {
                background: rgba(255, 255, 255, 0.1);
                border: 2px solid rgba(255, 255, 255, 0.4);
                border-radius: 6px;
            }
            QPushButton#MasterCheckbox:checked {
                background: #3B82F6;
                border: 2px solid #3B82F6;
            }
            QPushButton#MasterCheckbox:hover {
                border: 2px solid #3B82F6;
                background: rgba(59, 130, 246, 0.3);
            }
        """)
        self.master_checkbox.clicked.connect(self._toggle_all_checkboxes)

        header_layout.addStretch()
        header_layout.addWidget(self.master_checkbox)
        header_layout.addStretch()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–∂–µ—Ç –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
        self.table.horizontalHeader().sectionResized.connect(
            lambda index, oldSize, newSize: self._update_header_checkbox_position()
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–¥–∂–µ—Ç –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
        QTimer.singleShot(100, lambda: self._place_header_checkbox(header_widget))

    def _place_header_checkbox(self, widget):
        """–†–∞–∑–º–µ—â–∞–µ–º —á–µ–∫–±–æ–∫—Å –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ"""
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
        header = self.table.horizontalHeader()
        x = header.sectionPosition(0)
        width = header.sectionSize(0)

        widget.setParent(header)
        widget.setGeometry(x, 0, width, header.height())
        widget.show()

    def _update_header_checkbox_position(self):
        """–û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —á–µ–∫–±–æ–∫—Å–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–æ–≤"""
        # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ –∫–æ–ª–æ–Ω–æ–∫
        pass

    def _toggle_all_checkboxes(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –≤ —Å—Ç—Ä–æ–∫–∞—Ö"""
        master_checked = self.master_checkbox.isChecked()

        for row in range(self.table.rowCount()):
            checkbox_container = self.table.cellWidget(row, 0)
            if checkbox_container:
                # –ò—â–µ–º —á–µ–∫–±–æ–∫—Å –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
                checkbox = checkbox_container.findChild(QPushButton)
                if checkbox:
                    checkbox.setChecked(master_checked)

    def _handle_checkbox_click(self, row, checked):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —á–µ–∫–±–æ–∫—Å—É —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Shift-–≤—ã–±–æ—Ä–∞"""
        # –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        modifiers = QApplication.keyboardModifiers()

        if modifiers == Qt.ShiftModifier and self.last_clicked_row is not None:
            # Shift-–≤—ã–±–æ—Ä –¥–∏–∞–ø–∞–∑–æ–Ω–∞
            start_row = min(self.last_clicked_row, row)
            end_row = max(self.last_clicked_row, row)

            # –í—ã–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
            for r in range(start_row, end_row + 1):
                checkbox_container = self.table.cellWidget(r, 0)
                if checkbox_container:
                    # –ò—â–µ–º —á–µ–∫–±–æ–∫—Å –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
                    checkbox = checkbox_container.findChild(QPushButton)
                    if checkbox:
                        checkbox.setChecked(True)
        else:
            # –û–±—ã—á–Ω—ã–π –∫–ª–∏–∫ - –∑–∞–ø–æ–º–∏–Ω–∞–µ–º —Å—Ç—Ä–æ–∫—É
            self.last_clicked_row = row

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ —á–µ–∫–±–æ–∫—Å–∞
        self._update_master_checkbox()

    def _update_master_checkbox(self):
        """–û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ —á–µ–∫–±–æ–∫—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–æ–∫"""
        total_rows = self.table.rowCount()
        checked_rows = 0

        for row in range(total_rows):
            checkbox_container = self.table.cellWidget(row, 0)
            if checkbox_container:
                # –ò—â–µ–º —á–µ–∫–±–æ–∫—Å –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
                checkbox = checkbox_container.findChild(QPushButton)
                if checkbox and checkbox.isChecked():
                    checked_rows += 1

        # –ï—Å–ª–∏ –≤—Å–µ –≤—ã–±—Ä–∞–Ω—ã - —Å—Ç–∞–≤–∏–º –≥–∞–ª–æ—á–∫—É, –µ—Å–ª–∏ –Ω–∏–∫—Ç–æ - —É–±–∏—Ä–∞–µ–º
        if checked_rows == total_rows:
            self.master_checkbox.setChecked(True)
        elif checked_rows == 0:
            self.master_checkbox.setChecked(False)
        # –ï—Å–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ –≤—ã–±—Ä–∞–Ω—ã - –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å

    def _select_all_accounts(self):
        """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞/—Å–Ω—è—Ç–∏—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —á–µ–∫–±–æ–∫—Å—ã
        selected_count = 0
        total_count = self.table.rowCount()

        for row in range(total_count):
            checkbox = self.table.cellWidget(row, 0)
            if checkbox and checkbox.isChecked():
                selected_count += 1

        # –ï—Å–ª–∏ –≤—Å–µ –≤—ã–±—Ä–∞–Ω—ã - —Å–Ω–∏–º–∞–µ–º –≤—ã–±–æ—Ä, –∏–Ω–∞—á–µ –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ
        select_all = selected_count < total_count

        for row in range(total_count):
            checkbox = self.table.cellWidget(row, 0)
            if checkbox:
                checkbox.setChecked(select_all)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        sender = self.sender()
        if select_all:
            sender.setText("‚òëÔ∏è –°–Ω—è—Ç—å –≤—Å–µ")
        else:
            sender.setText("‚òëÔ∏è –í—ã–±—Ä–∞—Ç—å –≤—Å–µ")

    def _start_loading_sequence(self):
        # –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä–∞
        self.progress_animation = QPropertyAnimation(self.progress_bar, b"geometry")
        self.progress_animation.setDuration(2000)
        self.progress_animation.setStartValue(QRect(0, 0, 0, 4))
        self.progress_animation.setEndValue(QRect(0, 0, 300, 4))
        self.progress_animation.setEasingCurve(QEasingCurve.OutCubic)

        # –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        self.progress_animation.finished.connect(self._show_main_content)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        QTimer.singleShot(500, self.progress_animation.start)

    def _show_main_content(self):
        # –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        self.loading_container.hide()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        self.main_content.show()

        # –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        effect = QGraphicsOpacityEffect(self.main_content)
        self.main_content.setGraphicsEffect(effect)

        self.content_animation = QPropertyAnimation(effect, b"opacity")
        self.content_animation.setDuration(800)
        self.content_animation.setStartValue(0.0)
        self.content_animation.setEndValue(1.0)
        self.content_animation.setEasingCurve(QEasingCurve.OutCubic)
        self.content_animation.start()

        # –ù–ï –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫ - –æ–Ω–∏ –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞—é—Ç—Å—è –≤–∏–¥–∏–º—ã–º–∏
        # for i, box in enumerate(self.stat_boxes):
        #     QTimer.singleShot(i * 100 + 300, lambda b=box: self._animate_stat_box(b))

    def _animate_stat_box(self, box):
        # –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ë–ï–ó –∏–∑–º–µ–Ω–µ–Ω–∏—è graphicsEffect
        # –ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º box –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        box.show()

        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
        box.setProperty("scale", 0.8)

        # –ê–Ω–∏–º–∞—Ü–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
        self.scale_animation = QPropertyAnimation(box, b"geometry")
        current_geo = box.geometry()

        # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è (—á—É—Ç—å –º–µ–Ω—å—à–µ)
        start_geo = QRect(
            current_geo.x() + 10,
            current_geo.y() + 5,
            current_geo.width() - 20,
            current_geo.height() - 10
        )

        self.scale_animation.setDuration(300)
        self.scale_animation.setStartValue(start_geo)
        self.scale_animation.setEndValue(current_geo)
        self.scale_animation.setEasingCurve(QEasingCurve.OutBack)
        self.scale_animation.start()