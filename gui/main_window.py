# desktop-Traffer/gui/main_window.py
from PySide6.QtWidgets import (
    QMainWindow, QWidget, QHBoxLayout, QVBoxLayout,
    QPushButton, QLabel, QFrame, QStackedWidget, QSizePolicy
)
from PySide6.QtCore import Qt, QPropertyAnimation, QRect, QEasingCurve, QTimer
from PySide6.QtGui import QFont, QIcon
from gui.account_manager import AccountManagerTab
from gui.inviter_manager import InviterManagerTab
from log_config import logger


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("desktop-Traffer")
        self.resize(1400, 900)
        self.setMinimumSize(1200, 800)

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)

        # –û—Å–Ω–æ–≤–Ω–æ–π layout - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π
        main_layout = QHBoxLayout(central_widget)
        main_layout.setContentsMargins(0, 0, 0, 0)
        main_layout.setSpacing(0)

        # –°–æ–∑–¥–∞–µ–º —Å–∞–π–¥–±–∞—Ä –∏ –æ—Å–Ω–æ–≤–Ω—É—é –æ–±–ª–∞—Å—Ç—å
        self._create_sidebar()
        self._create_main_area()

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ layout
        main_layout.addWidget(self.sidebar)
        main_layout.addWidget(self.main_area)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤—É—é –≤–∫–ª–∞–¥–∫—É –∞–∫—Ç–∏–≤–Ω–æ–π
        self._switch_to_accounts()

        logger.debug("MainWindow with sidebar initialized")

        # –í–ê–ñ–ù–û: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ü–û–°–õ–ï –ø–æ–ª–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ–∫–Ω–∞
        QTimer.singleShot(100, self._init_notifications)

    def _init_notifications(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–∫–Ω–∞"""
        try:
            from gui.notifications import init_notification_manager
            self.notification_manager = init_notification_manager(self)
            logger.debug("‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            QTimer.singleShot(500, self.show_app_ready_notification)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")

    def show_app_ready_notification(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        try:
            from gui.notifications import show_success
            show_success(
                "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ",
                "desktop-Traffer —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
            )
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

    def show_navigation_info(self, section_name: str):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ä–∞–∑–¥–µ–ª–æ–≤"""
        try:
            from gui.notifications import show_info

            if section_name == "accounts":
                show_info(
                    "–ú–µ–Ω–µ–¥–∂–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
                    "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Telegram –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏"
                )
            elif section_name == "inviter":
                show_info(
                    "–ò–Ω–≤–∞–π—Ç–µ—Ä",
                    "–ú–∞—Å—Å–æ–≤—ã–µ –∏–Ω–≤–∞–π—Ç—ã –≤ —á–∞—Ç—ã –∏ –∫–∞–Ω–∞–ª—ã"
                )
            elif section_name == "modules":
                show_info(
                    "–ú–æ–¥—É–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
                    "–†–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
                )
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

    def _create_sidebar(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ª–µ–≤–æ–≥–æ —Å–∞–π–¥–±–∞—Ä–∞"""
        self.sidebar = QFrame()
        self.sidebar.setObjectName("Sidebar")
        self.sidebar.setFixedWidth(280)
        self.sidebar.setStyleSheet("""
            QFrame#Sidebar {
                background: rgba(255, 255, 255, 0.03);
                border-right: 1px solid rgba(255, 255, 255, 0.1);
            }
        """)

        sidebar_layout = QVBoxLayout(self.sidebar)
        sidebar_layout.setContentsMargins(0, 0, 0, 0)
        sidebar_layout.setSpacing(0)

        # –õ–æ–≥–æ—Ç–∏–ø/–∑–∞–≥–æ–ª–æ–≤–æ–∫
        header = self._create_sidebar_header()
        sidebar_layout.addWidget(header)

        # –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        nav_section = self._create_navigation()
        sidebar_layout.addWidget(nav_section)

        # –†–∞—Å—Ç—è–≥–∏–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
        sidebar_layout.addStretch()

        # –§—É—Ç–µ—Ä —Å –≤–µ—Ä—Å–∏–µ–π
        footer = self._create_sidebar_footer()
        sidebar_layout.addWidget(footer)

    def _create_sidebar_header(self):
        """–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∞–π–¥–±–∞—Ä–∞"""
        header = QWidget()
        header.setObjectName("SidebarHeader")
        header.setFixedHeight(80)
        header.setStyleSheet("""
            QWidget#SidebarHeader {
                background: rgba(59, 130, 246, 0.1);
                border-bottom: 1px solid rgba(59, 130, 246, 0.2);
            }
        """)

        layout = QVBoxLayout(header)
        layout.setContentsMargins(20, 15, 20, 15)
        layout.setSpacing(5)

        # –õ–æ–≥–æ—Ç–∏–ø
        logo = QLabel("üì± TeleCRM")
        logo.setObjectName("Logo")
        logo.setStyleSheet("""
            QLabel#Logo {
                font-size: 20px;
                font-weight: 700;
                color: #3B82F6;
            }
        """)

        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle = QLabel("Telegram Automation")
        subtitle.setObjectName("Subtitle")
        subtitle.setStyleSheet("""
            QLabel#Subtitle {
                font-size: 12px;
                color: rgba(255, 255, 255, 0.6);
                font-weight: 400;
            }
        """)

        layout.addWidget(logo)
        layout.addWidget(subtitle)

        return header

    def _create_navigation(self):
        """–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏"""
        nav_widget = QWidget()
        layout = QVBoxLayout(nav_widget)
        layout.setContentsMargins(15, 20, 15, 0)
        layout.setSpacing(8)

        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        nav_buttons = [
            ("üë•", "–ú–µ–Ω–µ–¥–∂–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–æ–≤", "accounts", True),
            ("üì®", "–ò–Ω–≤–∞–π—Ç–µ—Ä", "inviter", False),  # –ù–û–í–ê–Ø –ö–ù–û–ü–ö–ê
            ("üè≠", "–ú–æ–¥—É–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏", "modules", False),
            ("üìä", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "analytics", False),
            ("‚öôÔ∏è", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "settings", False),
            ("üìã", "–õ–æ–≥–∏", "logs", False),
        ]

        self.nav_buttons = {}
        for icon, text, key, is_active in nav_buttons:
            btn = self._create_nav_button(icon, text, key, is_active)
            self.nav_buttons[key] = btn
            layout.addWidget(btn)

        return nav_widget

    def _create_nav_button(self, icon, text, key, is_active=False):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        btn = QPushButton()
        btn.setObjectName("NavButton")
        btn.setFixedHeight(50)
        btn.setCursor(Qt.PointingHandCursor)

        # –°–æ–∑–¥–∞–µ–º layout –¥–ª—è –∏–∫–æ–Ω–∫–∏ –∏ —Ç–µ–∫—Å—Ç–∞
        btn_widget = QWidget()
        btn_layout = QHBoxLayout(btn_widget)
        btn_layout.setContentsMargins(15, 0, 15, 0)
        btn_layout.setSpacing(12)

        # –ò–∫–æ–Ω–∫–∞
        icon_label = QLabel(icon)
        icon_label.setStyleSheet("font-size: 18px;")
        icon_label.setFixedWidth(24)

        # –¢–µ–∫—Å—Ç
        text_label = QLabel(text)
        text_label.setStyleSheet("""
            font-size: 14px;
            font-weight: 500;
            color: rgba(255, 255, 255, 0.8);
        """)

        btn_layout.addWidget(icon_label)
        btn_layout.addWidget(text_label)
        btn_layout.addStretch()

        # –°—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏
        if is_active:
            btn.setStyleSheet("""
                QPushButton#NavButton {
                    background: rgba(59, 130, 246, 0.15);
                    border: none;
                    border-radius: 8px;
                    border-left: 3px solid #3B82F6;
                }
            """)
        else:
            btn.setStyleSheet("""
                QPushButton#NavButton {
                    background: transparent;
                    border: none;
                    border-radius: 8px;
                }
                QPushButton#NavButton:hover {
                    background: rgba(255, 255, 255, 0.05);
                }
                QPushButton#NavButton:pressed {
                    background: rgba(255, 255, 255, 0.1);
                }
            """)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–∂–µ—Ç –∫–∞–∫ layout –∫–Ω–æ–ø–∫–∏
        btn_layout_main = QHBoxLayout(btn)
        btn_layout_main.setContentsMargins(0, 0, 0, 0)
        btn_layout_main.addWidget(btn_widget)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        if key == "accounts":
            btn.clicked.connect(self._switch_to_accounts)
        elif key == "modules":
            btn.clicked.connect(self._switch_to_modules)
        elif key == "inviter":
            btn.clicked.connect(self._switch_to_inviter)
        # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

        return btn

    def _create_sidebar_footer(self):
        """–§—É—Ç–µ—Ä —Å–∞–π–¥–±–∞—Ä–∞"""
        footer = QWidget()
        footer.setFixedHeight(60)
        footer.setStyleSheet("""
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        """)

        layout = QVBoxLayout(footer)
        layout.setContentsMargins(20, 15, 20, 15)

        version_label = QLabel("v0.1.0 Beta")
        version_label.setStyleSheet("""
            font-size: 11px;
            color: rgba(255, 255, 255, 0.4);
            font-weight: 400;
        """)
        version_label.setAlignment(Qt.AlignCenter)

        layout.addWidget(version_label)

        return footer

    def _create_main_area(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–∞–±–æ—á–µ–π –æ–±–ª–∞—Å—Ç–∏"""
        self.main_area = QFrame()
        self.main_area.setObjectName("MainArea")
        self.main_area.setStyleSheet("""
            QFrame#MainArea {
                background: transparent;
            }
        """)

        # StackedWidget –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏
        self.stacked_widget = QStackedWidget()

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        self.account_tab = AccountManagerTab()
        self.stacked_widget.addWidget(self.account_tab)

        self.inviter_tab = InviterManagerTab()
        self.stacked_widget.addWidget(self.inviter_tab)

        # –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
        self.modules_tab = self._create_placeholder("üè≠ –ú–æ–¥—É–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏", "–ó–¥–µ—Å—å –±—É–¥—É—Ç –º–æ–¥—É–ª–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏")
        self.stacked_widget.addWidget(self.modules_tab)

        # Layout –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
        main_area_layout = QVBoxLayout(self.main_area)
        main_area_layout.setContentsMargins(0, 0, 0, 0)
        main_area_layout.addWidget(self.stacked_widget)

    def _create_placeholder(self, title, description):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤"""
        placeholder = QWidget()
        layout = QVBoxLayout(placeholder)
        layout.setAlignment(Qt.AlignCenter)

        title_label = QLabel(title)
        title_label.setStyleSheet("""
            font-size: 24px;
            font-weight: 600;
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 10px;
        """)
        title_label.setAlignment(Qt.AlignCenter)

        desc_label = QLabel(description)
        desc_label.setStyleSheet("""
            font-size: 16px;
            color: rgba(255, 255, 255, 0.5);
        """)
        desc_label.setAlignment(Qt.AlignCenter)

        layout.addWidget(title_label)
        layout.addWidget(desc_label)

        return placeholder

    def _switch_to_accounts(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
        self.stacked_widget.setCurrentIndex(0)
        self._update_nav_buttons("accounts")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–µ—Ä–µ—Ö–æ–¥–µ
        if not hasattr(self, '_accounts_visited'):
            self._accounts_visited = True
            QTimer.singleShot(300, lambda: self.show_navigation_info("accounts"))

    def _switch_to_inviter(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∏–Ω–≤–∞–π—Ç–µ—Ä"""
        self.stacked_widget.setCurrentIndex(1)
        self._update_nav_buttons("inviter")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
        if hasattr(self.inviter_tab, 'start_animation'):
            QTimer.singleShot(100, self.inviter_tab.start_animation)

        QTimer.singleShot(300, lambda: self.show_navigation_info("inviter"))

    def _switch_to_modules(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –º–æ–¥—É–ª–∏"""
        self.stacked_widget.setCurrentIndex(2)
        self._update_nav_buttons("modules")
        QTimer.singleShot(300, lambda: self.show_navigation_info("modules"))

    def _update_nav_buttons(self, active_key):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫"""
        for key, btn in self.nav_buttons.items():
            if key == active_key:
                btn.setStyleSheet("""
                    QPushButton#NavButton {
                        background: rgba(59, 130, 246, 0.15);
                        border: none;
                        border-radius: 8px;
                        border-left: 3px solid #3B82F6;
                    }
                """)
            else:
                btn.setStyleSheet("""
                    QPushButton#NavButton {
                        background: transparent;
                        border: none;
                        border-radius: 8px;
                    }
                    QPushButton#NavButton:hover {
                        background: rgba(255, 255, 255, 0.05);
                    }
                    QPushButton#NavButton:pressed {
                        background: rgba(255, 255, 255, 0.1);
                    }
                """)

    # –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    def test_notifications(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —Ç–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        try:
            from gui.notifications import show_success, show_error, show_warning, show_info

            show_info("–¢–µ—Å—Ç 1", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
            QTimer.singleShot(1000, lambda: show_success("–¢–µ—Å—Ç 2", "–£—Å–ø–µ—à–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ"))
            QTimer.singleShot(2000, lambda: show_warning("–¢–µ—Å—Ç 3", "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"))
            QTimer.singleShot(3000, lambda: show_error("–¢–µ—Å—Ç 4", "–û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã"))
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")

    def _clear_notifications(self):
        """–û—á–∏—â–∞–µ—Ç –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        try:
            if hasattr(self, 'notification_manager'):
                self.notification_manager.clear_all()
                from gui.notifications import show_info
                show_info("–°–∏—Å—Ç–µ–º–∞", "–í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –æ–∫–Ω–∞
    def resizeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞"""
        super().resizeEvent(event)
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤—è—Ç –ø–æ–∑–∏—Ü–∏—é —á–µ—Ä–µ–∑ eventFilter

    def moveEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –æ–∫–Ω–∞"""
        super().moveEvent(event)
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤—è—Ç –ø–æ–∑–∏—Ü–∏—é —á–µ—Ä–µ–∑ eventFilter