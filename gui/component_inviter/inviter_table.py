# gui/component_inviter/inviter_table.py
"""
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ—Ñ–∏–ª–µ–π –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ —Å –¥–≤—É—Ö—ç—Ç–∞–∂–Ω—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏
"""

from gui.dialogs.inviter_dialogs import (
    show_users_base_dialog,
    show_chats_base_dialog,
    show_extended_settings_dialog
)

from PySide6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QScrollArea, QFrame,
    QLabel, QPushButton, QComboBox, QSpinBox, QCheckBox,
    QProgressBar, QSizePolicy, QGraphicsOpacityEffect
)
from PySide6.QtCore import Qt, QTimer, QPropertyAnimation, QEasingCurve, Signal
from PySide6.QtGui import QFont, QColor
from loguru import logger


class InviterProfileRow(QWidget):
    """–î–≤—É—Ö—ç—Ç–∞–∂–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏–Ω–≤–∞–π—Ç–µ—Ä–∞"""

    # –°–∏–≥–Ω–∞–ª—ã
    profile_started = Signal(str)  # profile_name
    profile_stopped = Signal(str)  # profile_name
    profile_deleted = Signal(str)  # profile_name
    settings_changed = Signal(str, dict)  # profile_name, settings

    def __init__(self, profile_data):
        super().__init__()
        self.profile_data = profile_data
        self.profile_name = profile_data.get('name', '–ü—Ä–æ—Ñ–∏–ª—å')
        self.is_running = profile_data.get('is_running', False)

        self.users_list = profile_data.get('users_list', [])
        self.chats_list = profile_data.get('chats_list', [])
        self.extended_settings = profile_data.get('extended_settings', {})

        self.setObjectName("InviterProfileRow")
        self.setFixedHeight(140)  # –î–≤—É—Ö—ç—Ç–∞–∂–Ω–∞—è –≤—ã—Å–æ—Ç–∞

        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(15, 10, 15, 10)
        main_layout.setSpacing(8)

        # –ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂ - –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self._create_first_floor(main_layout)

        # –í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂ - —Å—á–µ—Ç—á–∏–∫–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å
        self._create_second_floor(main_layout)

        # –°—Ç–∏–ª–∏
        self._apply_styles()

        self.users_btn.clicked.connect(self._on_users_settings)
        self.chats_btn.clicked.connect(self._on_chats_settings)
        self.settings_btn.clicked.connect(self._on_extended_settings)

    def _create_first_floor(self, main_layout):
        """–°–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–≤—ã–π —ç—Ç–∞–∂ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
        first_floor = QWidget()
        layout = QHBoxLayout(first_floor)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(10)

        # 1. –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ –∏ –∫–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
        status_widget = self._create_status_widget()
        layout.addWidget(status_widget)

        # 2. –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        name_widget = self._create_name_widget()
        layout.addWidget(name_widget)

        # 3. –¢–∏–ø –∏–Ω–≤–∞–π—Ç–∞
        invite_type = self._create_invite_type_widget()
        layout.addWidget(invite_type)

        # 4. –ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users_base = self._create_users_base_widget()
        layout.addWidget(users_base)

        # 5. –ë–∞–∑–∞ —á–∞—Ç–æ–≤
        chats_base = self._create_chats_base_widget()
        layout.addWidget(chats_base)

        # 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Ç–æ–∫–æ–≤
        threads_settings = self._create_threads_settings()
        layout.addWidget(threads_settings)

        # 7. –õ–∏–º–∏—Ç—ã
        limits_settings = self._create_limits_settings()
        layout.addWidget(limits_settings)

        # 8. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
        security_settings = self._create_security_settings()
        layout.addWidget(security_settings)

        # 9. –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        control_buttons = self._create_control_buttons()
        layout.addWidget(control_buttons)

        main_layout.addWidget(first_floor)

    def _create_second_floor(self, main_layout):
        """–°–æ–∑–¥–∞–µ—Ç –≤—Ç–æ—Ä–æ–π —ç—Ç–∞–∂ —Å–æ —Å—á–µ—Ç—á–∏–∫–∞–º–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º"""
        second_floor = QWidget()
        layout = QHBoxLayout(second_floor)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(15)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä –æ–±—â–∏–π
        progress_widget = self._create_progress_widget()
        layout.addWidget(progress_widget)

        # –°—á–µ—Ç—á–∏–∫–∏
        counters_widget = self._create_counters_widget()
        layout.addWidget(counters_widget)

        # –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
        status_widget = self._create_last_status_widget()
        layout.addWidget(status_widget)

        main_layout.addWidget(second_floor)

    def _create_status_widget(self):
        """–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ –∏ –∫–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞"""
        widget = QWidget()
        widget.setFixedWidth(80)
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(4)

        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞
        self.status_indicator = QLabel("‚óè")
        self.status_indicator.setAlignment(Qt.AlignCenter)
        self.status_indicator.setStyleSheet(f"""
            QLabel {{
                font-size: 16px;
                color: {'#10B981' if self.is_running else '#6B7280'};
                font-weight: bold;
            }}
        """)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        self.start_stop_btn = QPushButton("‚ñ∂Ô∏è" if not self.is_running else "‚è∏Ô∏è")
        self.start_stop_btn.setFixedSize(30, 30)
        self.start_stop_btn.clicked.connect(self._toggle_profile)

        layout.addWidget(self.status_indicator)
        layout.addWidget(self.start_stop_btn)

        return widget

    def _create_name_widget(self):
        """–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"""
        widget = QWidget()
        widget.setFixedWidth(120)
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)

        name_label = QLabel("–ü—Ä–æ—Ñ–∏–ª—å:")
        name_label.setStyleSheet("font-size: 11px; color: rgba(255,255,255,0.6);")

        self.name_value = QLabel(self.profile_name)
        self.name_value.setStyleSheet("font-size: 13px; font-weight: 600; color: #FFFFFF;")

        layout.addWidget(name_label)
        layout.addWidget(self.name_value)

        return widget

    def _create_invite_type_widget(self):
        """–¢–∏–ø –∏–Ω–≤–∞–π—Ç–∞"""
        widget = QWidget()
        widget.setFixedWidth(100)
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)

        type_label = QLabel("–¢–∏–ø:")
        type_label.setStyleSheet("font-size: 11px; color: rgba(255,255,255,0.6);")

        self.invite_type_combo = QComboBox()
        self.invite_type_combo.addItems(["–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π", "–ß–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É"])
        self.invite_type_combo.setFixedHeight(25)

        layout.addWidget(type_label)
        layout.addWidget(self.invite_type_combo)

        return widget

    def _create_users_base_widget(self):
        """–ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        widget = QWidget()
        widget.setFixedWidth(90)
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)

        users_label = QLabel("–ë–∞–∑–∞ —é–∑–µ—Ä–æ–≤:")
        users_label.setStyleSheet("font-size: 11px; color: rgba(255,255,255,0.6);")

        # ‚Üê –û–ë–ù–û–í–ò–¢–ï –≠–¢–ò –°–¢–†–û–ö–ò
        users_count = len(self.users_list)
        button_text = f"üìù {users_count} —é–∑–µ—Ä–æ–≤" if users_count > 0 else "üìù –ù–∞—Å—Ç—Ä–æ–∏—Ç—å"

        self.users_btn = QPushButton(button_text)
        self.users_btn.setFixedHeight(25)
        self.users_btn.setStyleSheet("""
            QPushButton {
                background: rgba(59, 130, 246, 0.2);
                border: 1px solid rgba(59, 130, 246, 0.5);
                border-radius: 4px;
                color: #FFFFFF;
                font-size: 10px;
            }
            QPushButton:hover {
                background: rgba(59, 130, 246, 0.3);
            }
        """)

        layout.addWidget(users_label)
        layout.addWidget(self.users_btn)

        return widget

    def _create_chats_base_widget(self):
        """–ë–∞–∑–∞ —á–∞—Ç–æ–≤"""
        widget = QWidget()
        widget.setFixedWidth(90)
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)

        chats_label = QLabel("–ë–∞–∑–∞ —á–∞—Ç–æ–≤:")
        chats_label.setStyleSheet("font-size: 11px; color: rgba(255,255,255,0.6);")

        # ‚Üê –û–ë–ù–û–í–ò–¢–ï –≠–¢–ò –°–¢–†–û–ö–ò
        chats_count = len(self.chats_list)
        button_text = f"üìù {chats_count} —á–∞—Ç–æ–≤" if chats_count > 0 else "üìù –ù–∞—Å—Ç—Ä–æ–∏—Ç—å"

        self.chats_btn = QPushButton(button_text)
        self.chats_btn.setFixedHeight(25)
        self.chats_btn.setStyleSheet("""
            QPushButton {
                background: rgba(16, 185, 129, 0.2);
                border: 1px solid rgba(16, 185, 129, 0.5);
                border-radius: 4px;
                color: #FFFFFF;
                font-size: 10px;
            }
            QPushButton:hover {
                background: rgba(16, 185, 129, 0.3);
            }
        """)

        layout.addWidget(chats_label)
        layout.addWidget(self.chats_btn)

        return widget

    def _create_threads_settings(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Ç–æ–∫–æ–≤"""
        widget = QWidget()
        widget.setFixedWidth(100)
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)

        threads_label = QLabel("–ü–æ—Ç–æ–∫–æ–≤ –Ω–∞ —á–∞—Ç:")
        threads_label.setStyleSheet("font-size: 11px; color: rgba(255,255,255,0.6);")

        self.threads_spin = QSpinBox()
        self.threads_spin.setRange(1, 10)
        self.threads_spin.setValue(2)
        self.threads_spin.setFixedHeight(25)

        layout.addWidget(threads_label)
        layout.addWidget(self.threads_spin)

        return widget

    def _create_limits_settings(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏–º–∏—Ç–æ–≤"""
        widget = QWidget()
        widget.setFixedWidth(120)
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(2)

        # –õ–∏–º–∏—Ç –Ω–∞ —á–∞—Ç
        chat_limit_layout.addWidget(chat_limit_label)
        chat_limit_layout.addWidget(self.chat_limit_spin)

        # –õ–∏–º–∏—Ç –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç
        acc_limit_layout = QHBoxLayout()
        acc_limit_layout.setSpacing(5)

        acc_limit_label = QLabel("–ê–∫–∫:")
        acc_limit_label.setStyleSheet("font-size: 10px; color: rgba(255,255,255,0.6);")

        self.acc_limit_spin = QSpinBox()
        self.acc_limit_spin.setRange(1, 1000)
        self.acc_limit_spin.setValue(100)
        self.acc_limit_spin.setFixedSize(50, 20)

        acc_limit_layout.addWidget(acc_limit_label)
        acc_limit_layout.addWidget(self.acc_limit_spin)

        layout.addLayout(chat_limit_layout)
        layout.addLayout(acc_limit_layout)

        return widget

    def _create_security_settings(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
        widget = QWidget()
        widget.setFixedWidth(140)
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(2)

        # –°–ø–∞–º–±–ª–æ–∫ –ª–∏–º–∏—Ç
        spam_layout = QHBoxLayout()
        spam_layout.setSpacing(5)

        spam_label = QLabel("–°–ø–∞–º:")
        spam_label.setStyleSheet("font-size: 10px; color: rgba(255,255,255,0.6);")

        self.spam_limit_spin = QSpinBox()
        self.spam_limit_spin.setRange(1, 50)
        self.spam_limit_spin.setValue(3)
        self.spam_limit_spin.setFixedSize(40, 20)

        spam_layout.addWidget(spam_label)
        spam_layout.addWidget(self.spam_limit_spin)

        # –°–ø–∏—Å–∞–Ω–∏—è –ª–∏–º–∏—Ç
        writeoff_layout = QHBoxLayout()
        writeoff_layout.setSpacing(5)

        writeoff_label = QLabel("–°–ø–∏—Å–∞–Ω:")
        writeoff_label.setStyleSheet("font-size: 10px; color: rgba(255,255,255,0.6);")

        self.writeoff_limit_spin = QSpinBox()
        self.writeoff_limit_spin.setRange(1, 20)
        self.writeoff_limit_spin.setValue(2)
        self.writeoff_limit_spin.setFixedSize(40, 20)

        writeoff_layout.addWidget(writeoff_label)
        writeoff_layout.addWidget(self.writeoff_limit_spin)

        layout.addLayout(spam_layout)
        layout.addLayout(writeoff_layout)

        return widget

    def _create_control_buttons(self):
        """–ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–º"""
        widget = QWidget()
        widget.setFixedWidth(80)
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(4)

        # –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.settings_btn = QPushButton("‚öôÔ∏è")
        self.settings_btn.setFixedSize(30, 25)
        self.settings_btn.setToolTip("–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        self.settings_btn.setStyleSheet("""
            QPushButton {
                background: rgba(156, 163, 175, 0.2);
                border: 1px solid rgba(156, 163, 175, 0.5);
                border-radius: 4px;
                color: #FFFFFF;
                font-size: 12px;
            }
            QPushButton:hover {
                background: rgba(156, 163, 175, 0.3);
            }
        """)

        # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        self.delete_btn = QPushButton("üóëÔ∏è")
        self.delete_btn.setFixedSize(30, 25)
        self.delete_btn.setToolTip("–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
        self.delete_btn.setStyleSheet("""
            QPushButton {
                background: rgba(239, 68, 68, 0.2);
                border: 1px solid rgba(239, 68, 68, 0.5);
                border-radius: 4px;
                color: #FFFFFF;
                font-size: 12px;
            }
            QPushButton:hover {
                background: rgba(239, 68, 68, 0.3);
            }
        """)
        self.delete_btn.clicked.connect(self._delete_profile)

        layout.addWidget(self.settings_btn)
        layout.addWidget(self.delete_btn)

        return widget

    def _create_progress_widget(self):
        """–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä"""
        widget = QWidget()
        widget.setFixedWidth(200)
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(2)

        progress_label = QLabel("–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å:")
        progress_label.setStyleSheet("font-size: 11px; color: rgba(255,255,255,0.6);")

        self.progress_bar = QProgressBar()
        self.progress_bar.setFixedHeight(20)
        self.progress_bar.setRange(0, 100)
        self.progress_bar.setValue(0)
        self.progress_bar.setStyleSheet("""
            QProgressBar {
                border: 1px solid rgba(255, 255, 255, 0.2);
                border-radius: 8px;
                background: rgba(255, 255, 255, 0.1);
                text-align: center;
                color: #FFFFFF;
                font-size: 10px;
            }
            QProgressBar::chunk {
                background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                    stop:0 #3B82F6, stop:1 #8B5CF6);
                border-radius: 8px;
            }
        """)

        layout.addWidget(progress_label)
        layout.addWidget(self.progress_bar)

        return widget

    def _create_counters_widget(self):
        """–í–∏–¥–∂–µ—Ç —Å–æ —Å—á–µ—Ç—á–∏–∫–∞–º–∏"""
        widget = QWidget()
        layout = QHBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(15)

        # –£—Å–ø–µ—à–Ω—ã–µ –∏–Ω–≤–∞–π—Ç—ã
        success_widget = self._create_counter("–£—Å–ø–µ—à–Ω–æ:", "0", "#10B981")
        layout.addWidget(success_widget)

        # –û—à–∏–±–∫–∏
        errors_widget = self._create_counter("–û—à–∏–±–∫–∏:", "0", "#EF4444")
        layout.addWidget(errors_widget)

        # –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        total_widget = self._create_counter("–í—Å–µ–≥–æ:", "0", "#3B82F6")
        layout.addWidget(total_widget)

        return widget

    def _create_counter(self, label_text, value, color):
        """–°–æ–∑–¥–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫"""
        widget = QWidget()
        widget.setFixedWidth(80)
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(2)

        label = QLabel(label_text)
        label.setStyleSheet("font-size: 10px; color: rgba(255,255,255,0.6);")
        label.setAlignment(Qt.AlignCenter)

        value_label = QLabel(value)
        value_label.setStyleSheet(f"""
            font-size: 14px; 
            font-weight: 600; 
            color: {color};
        """)
        value_label.setAlignment(Qt.AlignCenter)

        layout.addWidget(label)
        layout.addWidget(value_label)

        return widget

    def _create_last_status_widget(self):
        """–°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
        widget = QWidget()
        layout = QVBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(2)

        status_label = QLabel("–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        status_label.setStyleSheet("font-size: 11px; color: rgba(255,255,255,0.6);")

        self.last_action_label = QLabel("–û–∂–∏–¥–∞–Ω–∏–µ...")
        self.last_action_label.setStyleSheet("""
            font-size: 12px; 
            color: rgba(255,255,255,0.8);
            background: rgba(255, 255, 255, 0.05);
            border-radius: 4px;
            padding: 4px 8px;
        """)

        layout.addWidget(status_label)
        layout.addWidget(self.last_action_label)

        return widget

    def _apply_styles(self):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å—Ç–∏–ª–∏ –∫ —Å—Ç—Ä–æ–∫–µ –ø—Ä–æ—Ñ–∏–ª—è"""
        self.setStyleSheet("""
            QWidget#InviterProfileRow {
                background: rgba(255, 255, 255, 0.03);
                border: 1px solid rgba(255, 255, 255, 0.08);
                border-radius: 12px;
                margin: 2px 0;
            }
            QWidget#InviterProfileRow:hover {
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid rgba(59, 130, 246, 0.3);
            }
            QSpinBox {
                background: rgba(255, 255, 255, 0.1);
                border: 1px solid rgba(255, 255, 255, 0.2);
                border-radius: 4px;
                color: #FFFFFF;
                font-size: 11px;
                padding: 2px;
            }
            QSpinBox:focus {
                border-color: #3B82F6;
            }
            QComboBox {
                background: rgba(255, 255, 255, 0.1);
                border: 1px solid rgba(255, 255, 255, 0.2);
                border-radius: 4px;
                color: #FFFFFF;
                font-size: 11px;
                padding: 2px 4px;
            }
            QComboBox:focus {
                border-color: #3B82F6;
            }
            QComboBox QAbstractItemView {
                background: rgba(30, 30, 30, 0.95);
                border: 1px solid rgba(255, 255, 255, 0.1);
                selection-background-color: rgba(59, 130, 246, 0.3);
                color: #FFFFFF;
            }
        """)

    def _toggle_profile(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"""
        self.is_running = not self.is_running

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        self.status_indicator.setStyleSheet(f"""
            QLabel {{
                font-size: 16px;
                color: {'#10B981' if self.is_running else '#6B7280'};
                font-weight: bold;
            }}
        """)

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
        self.start_stop_btn.setText("‚è∏Ô∏è" if self.is_running else "‚ñ∂Ô∏è")

        # –≠–º–∏—Ç–∏–º —Å–∏–≥–Ω–∞–ª
        if self.is_running:
            self.profile_started.emit(self.profile_name)
            self.last_action_label.setText("–ó–∞–ø—É—â–µ–Ω...")
        else:
            self.profile_stopped.emit(self.profile_name)
            self.last_action_label.setText("–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    def _delete_profile(self):
        """–£–¥–∞–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å"""
        self.profile_deleted.emit(self.profile_name)

    def update_progress(self, value):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä"""
        self.progress_bar.setValue(value)

    def update_counters(self, success, errors, total):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—á–µ—Ç—á–∏–∫–∏"""
        # –ù–∞–π–¥–µ–º –≤–∏–¥–∂–µ—Ç—ã —Å—á–µ—Ç—á–∏–∫–æ–≤ –∏ –æ–±–Ω–æ–≤–∏–º –∏—Ö
        pass  # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤

    def update_last_action(self, action_text):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
        self.last_action_label.setText(action_text)


class InviterTableWidget(QWidget):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –∏–Ω–≤–∞–π—Ç–µ—Ä–∞"""

    def __init__(self):
        super().__init__()
        self.setObjectName("InviterTableWidget")

        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        layout = QVBoxLayout(self)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(0)

        # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–æ–ª–ª –æ–±–ª–∞—Å—Ç—å
        self._create_scroll_area(layout)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        self._load_test_profiles()

        # –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        effect = QGraphicsOpacityEffect()
        effect.setOpacity(0.0)
        self.setGraphicsEffect(effect)

    def _create_scroll_area(self, layout):
        """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–æ–ª–ª–∏—Ä—É–µ–º—É—é –æ–±–ª–∞—Å—Ç—å"""
        self.scroll_area = QScrollArea()
        self.scroll_area.setObjectName("InviterScroll")
        self.scroll_area.setWidgetResizable(True)
        self.scroll_area.setVerticalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        self.scroll_area.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π
        self.profiles_container = QWidget()
        self.profiles_layout = QVBoxLayout(self.profiles_container)
        self.profiles_layout.setContentsMargins(10, 10, 10, 10)
        self.profiles_layout.setSpacing(8)

        self.scroll_area.setWidget(self.profiles_container)
        layout.addWidget(self.scroll_area)

        # –°—Ç–∏–ª–∏ —Å–∫—Ä–æ–ª–ª –±–∞—Ä–∞
        self.scroll_area.setStyleSheet("""
            QScrollArea#InviterScroll {
                background: transparent;
                border: none;
            }
            QScrollBar:vertical {
                background: rgba(255, 255, 255, 0.05);
                width: 8px;
                border-radius: 4px;
                margin: 0;
            }
            QScrollBar::handle:vertical {
                background: rgba(255, 255, 255, 0.2);
                border-radius: 4px;
                min-height: 20px;
            }
            QScrollBar::handle:vertical:hover {
                background: rgba(59, 130, 246, 0.6);
            }
            QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
                height: 0px;
            }
        """)

    def _load_test_profiles(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏"""
        test_profiles = [
            {
                'name': '–ü—Ä–æ—Ñ–∏–ª—å #1',
                'is_running': False,
                'invite_type': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
                'threads': 2,
                'chat_limit': 50,
                'acc_limit': 100
            },
            {
                'name': '–ü—Ä–æ—Ñ–∏–ª—å #2',
                'is_running': True,
                'invite_type': '–ß–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É',
                'threads': 3,
                'chat_limit': 75,
                'acc_limit': 150
            },
            {
                'name': '–ü—Ä–æ—Ñ–∏–ª—å #3',
                'is_running': False,
                'invite_type': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
                'threads': 1,
                'chat_limit': 30,
                'acc_limit': 80
            }
        ]

        self.profile_rows = []
        for profile_data in test_profiles:
            profile_row = InviterProfileRow(profile_data)

            # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
            profile_row.profile_started.connect(self._on_profile_started)
            profile_row.profile_stopped.connect(self._on_profile_stopped)
            profile_row.profile_deleted.connect(self._on_profile_deleted)

            self.profile_rows.append(profile_row)
            self.profiles_layout.addWidget(profile_row)

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ç—è–∂–∫—É –≤ –∫–æ–Ω—Ü–µ
        self.profiles_layout.addStretch()

    def _on_profile_started(self, profile_name):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è"""
        logger.info(f"üöÄ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–ø—É—â–µ–Ω: {profile_name}")
        # TODO: –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–≥–∏–∫—É –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è

    def _on_profile_stopped(self, profile_name):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è"""
        logger.info(f"‚è∏Ô∏è –ü—Ä–æ—Ñ–∏–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {profile_name}")
        # TODO: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è

    def _on_profile_deleted(self, profile_name):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
        logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è: {profile_name}")
        # TODO: –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å

    def add_profile(self, profile_data):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å"""
        profile_row = InviterProfileRow(profile_data)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
        profile_row.profile_started.connect(self._on_profile_started)
        profile_row.profile_stopped.connect(self._on_profile_stopped)
        profile_row.profile_deleted.connect(self._on_profile_deleted)

        self.profile_rows.append(profile_row)

        # –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ —Ä–∞—Å—Ç—è–∂–∫–æ–π
        self.profiles_layout.insertWidget(len(self.profile_rows) - 1, profile_row)

    def remove_profile(self, profile_name):
        """–£–¥–∞–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å"""
        for i, profile_row in enumerate(self.profile_rows):
            if profile_row.profile_name == profile_name:
                profile_row.deleteLater()
                self.profile_rows.pop(i)
                break

    def start_all_profiles(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏"""
        for profile_row in self.profile_rows:
            if not profile_row.is_running:
                profile_row._toggle_profile()

    def stop_all_profiles(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏"""
        for profile_row in self.profile_rows:
            if profile_row.is_running:
                profile_row._toggle_profile()

    def refresh_data(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–µ–π"""
        logger.info("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–µ–π –∏–Ω–≤–∞–π—Ç–µ—Ä–∞...")
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

    def animate_appearance(self):
        """–ê–Ω–∏–º–∏—Ä—É–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã"""
        effect = self.graphicsEffect()
        if effect:
            self.opacity_animation = QPropertyAnimation(effect, b"opacity")
            self.opacity_animation.setDuration(800)
            self.opacity_animation.setStartValue(0.0)
            self.opacity_animation.setEndValue(1.0)
            self.opacity_animation.setEasingCurve(QEasingCurve.OutCubic)
            self.opacity_animation.start()
            _layout = QHBoxLayout()
        chat_limit_layout.setSpacing(5)

        chat_limit_label = QLabel("–ß–∞—Ç:")
        chat_limit_label.setStyleSheet("font-size: 10px; color: rgba(255,255,255,0.6);")

        self.chat_limit_spin = QSpinBox()
        self.chat_limit_spin.setRange(1, 1000)
        self.chat_limit_spin.setValue(50)
        self.chat_limit_spin.setFixedSize(50, 20)

        chat_limit

    def _on_users_settings(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        try:
            current_users = getattr(self, 'users_list', [])
            users = show_users_base_dialog(self, current_users)
            if users != current_users:
                self.users_list = users
                users_count = len(users)
                button_text = f"üìù {users_count} —é–∑–µ—Ä–æ–≤" if users_count > 0 else "üìù –ù–∞—Å—Ç—Ä–æ–∏—Ç—å"
                self.users_btn.setText(button_text)
                logger.info(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –±–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è {self.profile_name}: {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")

    def _on_chats_settings(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã —á–∞—Ç–æ–≤"""
        try:
            current_chats = getattr(self, 'chats_list', [])
            chats = show_chats_base_dialog(self, current_chats)
            if chats != current_chats:
                self.chats_list = chats
                chats_count = len(chats)
                button_text = f"üìù {chats_count} —á–∞—Ç–æ–≤" if chats_count > 0 else "üìù –ù–∞—Å—Ç—Ä–æ–∏—Ç—å"
                self.chats_btn.setText(button_text)
                logger.info(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –±–∞–∑–∞ —á–∞—Ç–æ–≤ –¥–ª—è {self.profile_name}: {len(chats)} —á–∞—Ç–æ–≤")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–æ–≤: {e}")

    def _on_extended_settings(self):
        """–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è"""
        try:
            current_settings = getattr(self, 'extended_settings', {})
            settings = show_extended_settings_dialog(self, current_settings)
            if settings != current_settings:
                self.extended_settings = settings
                logger.info(f"‚öôÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è {self.profile_name}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: {e}")