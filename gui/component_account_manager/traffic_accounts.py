# gui/component_account_manager/traffic_accounts.py - –°–¢–ê–ë–ò–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø

"""
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ - —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è
"""

from PySide6.QtWidgets import QWidget, QVBoxLayout
from gui.component_account_manager.account_stats import AccountStatsWidget
from gui.component_account_manager.account_table import AccountTableWidget
from gui.component_account_manager.loading_animation import LoadingAnimationWidget
from src.accounts.manager import get_traffic_stats, get_table_data
from loguru import logger


class TrafficAccountsTab(QWidget):
    """–í–∫–ª–∞–¥–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ —Ç—Ä–∞—Ñ–∏–∫–∞"""

    def __init__(self):
        super().__init__()
        self.setObjectName("TrafficAccountsTab")

        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        layout = QVBoxLayout(self)
        layout.setContentsMargins(0, 15, 0, 0)
        layout.setSpacing(0)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.main_content = QWidget()
        self.main_content.setObjectName("MainContent")
        self.main_content_layout = QVBoxLayout(self.main_content)
        self.main_content_layout.setContentsMargins(0, 0, 0, 0)
        self.main_content_layout.setSpacing(15)

        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        self._create_components()

        # –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        self.loading_widget = LoadingAnimationWidget("–ó–∞–≥—Ä—É–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Ç—Ä–∞—Ñ–∏–∫–∞...")

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ layout
        layout.addWidget(self.loading_widget)
        layout.addWidget(self.main_content)

        # –°–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        self.main_content.hide()
        self.loading_widget.start_animation(self._show_main_content)

    def _create_components(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤–∫–ª–∞–¥–∫–∏"""

        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ AccountManager
        traffic_stats = get_traffic_stats()
        logger.debug(f"üìä –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç—Ä–∞—Ñ–∏–∫–∞, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {traffic_stats}")

        self.stats_widget = AccountStatsWidget(traffic_stats)
        self.main_content_layout.addWidget(self.stats_widget)

        # –¢–∞–±–ª–∏—Ü–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        table_data = get_table_data("traffic", limit=50)
        logger.debug(f"üìã –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ç—Ä–∞—Ñ–∏–∫–∞, –¥–∞–Ω–Ω—ã—Ö: {len(table_data)} —Å—Ç—Ä–æ–∫")

        table_config = {
            'title': 'üöÄ –ê–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è —Ç—Ä–∞—Ñ–∏–∫–∞',
            'add_button_text': '+ –î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç',
            'demo_data': table_data
        }

        self.table_widget = AccountTableWidget(table_config)
        self.main_content_layout.addWidget(self.table_widget)

    def _show_main_content(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏"""
        self.loading_widget.hide()
        self.main_content.show()

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        self.stats_widget.animate_appearance()
        self.table_widget.animate_appearance()

    def refresh_data(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Ç—Ä–∞—Ñ–∏–∫–∞"""
        try:
            logger.info("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞—Ñ–∏–∫–∞...")

            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            new_stats = get_traffic_stats()
            logger.debug(f"üìä –ù–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {new_stats}")

            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            for i, (title, value, color) in enumerate(new_stats):
                if i < len(self.stats_widget.stat_boxes):
                    self.stats_widget.update_stat(i, value)
                    logger.debug(f"   üìä –û–±–Ω–æ–≤–ª–µ–Ω —ç–ª–µ–º–µ–Ω—Ç {i}: {title} = {value}")

            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
            new_data = get_table_data("traffic", limit=50)
            logger.debug(f"üìã –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: {len(new_data)} —Å—Ç—Ä–æ–∫")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
            if hasattr(self.table_widget, 'update_table_data'):
                self.table_widget.update_table_data(new_data)
                logger.info("‚úÖ –î–∞–Ω–Ω—ã–µ —Ç—Ä–∞—Ñ–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ update_table_data")
            else:
                # Fallback –º–µ—Ç–æ–¥
                self.table_widget.config['demo_data'] = new_data
                if hasattr(self.table_widget, '_fill_table_data'):
                    self.table_widget._fill_table_data()
                logger.info("‚úÖ –î–∞–Ω–Ω—ã–µ —Ç—Ä–∞—Ñ–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ fallback")

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞—Ñ–∏–∫–∞: {e}")
            # –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ refresh_data - –ø—É—Å—Ç—å –≤—ã–∑—ã–≤–∞—é—â–∏–π –∫–æ–¥ —Ä–µ—à–∞–µ—Ç