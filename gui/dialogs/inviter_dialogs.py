# gui/dialogs/inviter_dialogs.py - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
"""
–î–∏–∞–ª–æ–≥–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ - –ü–û–õ–ù–ê–Ø –í–ï–†–°–ò–Ø
"""

from PySide6.QtWidgets import (
    QDialog, QVBoxLayout, QHBoxLayout, QLabel, QPushButton,
    QTextEdit, QLineEdit, QSpinBox, QCheckBox, QComboBox,
    QFrame, QScrollArea, QGroupBox, QGridLayout, QGraphicsOpacityEffect,
    QGraphicsDropShadowEffect, QApplication, QWidget
)
from PySide6.QtCore import Qt, Signal, QPropertyAnimation, QEasingCurve, QRect,  QTimer
from PySide6.QtGui import QFont, QColor
from typing import List, Dict
from loguru import logger

from gui.dialogs.main_admins_dialog import show_main_admins_dialog
from gui.dialogs.bot_token_dialog import show_bot_token_dialog, load_bot_token_from_profile



class UsersBaseDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""

    def __init__(self, parent=None, current_users: List[str] = None):
        super().__init__(parent)
        self.current_users = current_users or []
        self.setWindowTitle("–ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        self.setModal(True)
        self.setWindowFlags(Qt.FramelessWindowHint | Qt.Dialog)
        self.setAttribute(Qt.WA_TranslucentBackground)
        self.setFixedSize(1400, 1200)
        self.init_ui()
        QTimer.singleShot(0, self._center_on_parent)


    def init_ui(self):
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(20, 20, 20, 20)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.content_container = QFrame()
        self.content_container.setObjectName("DialogContainer")
        content_layout = QVBoxLayout(self.content_container)
        content_layout.setContentsMargins(30, 30, 30, 30)
        content_layout.setSpacing(20)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–∫–æ–Ω–∫–æ–π
        header_layout = QHBoxLayout()
        header_layout.setSpacing(15)

        # –ò–∫–æ–Ω–∫–∞
        icon_label = QLabel("üìù")
        icon_label.setObjectName("DialogIcon")
        icon_label.setFixedSize(48, 48)
        icon_label.setAlignment(Qt.AlignCenter)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("–ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        title_label.setObjectName("DialogTitle")
        title_label.setWordWrap(True)

        header_layout.addWidget(icon_label)
        header_layout.addWidget(title_label, 1)

        # –û–ø–∏—Å–∞–Ω–∏–µ
        desc = QLabel("–í–≤–µ–¥–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∞ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É):")
        desc.setObjectName("DialogDescription")
        desc.setWordWrap(True)

        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
        self.users_text = QTextEdit()
        self.users_text.setObjectName("UsersTextEdit")
        self.users_text.setPlaceholderText("@username1\n@username2\n@username3\n–∏–ª–∏ –±–µ–∑ @:\nusername1\nusername2")
        self.users_text.setPlainText('\n'.join(self.current_users))

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        info_label = QLabel("üí° –ú–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–ª—è—Ç—å –∫–∞–∫ —Å @, —Ç–∞–∫ –∏ –±–µ–∑ –Ω–µ–≥–æ")
        info_label.setObjectName("InfoLabel")

        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = self._create_buttons()

        # –°–±–æ—Ä–∫–∞
        content_layout.addLayout(header_layout)
        content_layout.addWidget(desc)
        content_layout.addWidget(self.users_text, 1)
        content_layout.addWidget(info_label)
        content_layout.addLayout(buttons_layout)

        main_layout.addWidget(self.content_container)

        # –°—Ç–∏–ª–∏
        self._apply_styles()

        # –¢–µ–Ω—å
        shadow = QGraphicsDropShadowEffect()
        shadow.setBlurRadius(30)
        shadow.setXOffset(0)
        shadow.setYOffset(10)
        shadow.setColor(QColor(0, 0, 0, 120))
        self.content_container.setGraphicsEffect(shadow)

    def _create_buttons(self):
        """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–∏–∞–ª–æ–≥–∞"""
        layout = QHBoxLayout()
        layout.setSpacing(12)

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∏—Ç—å")
        cancel_btn.setObjectName("CancelButton")
        cancel_btn.setFixedSize(120, 44)
        cancel_btn.clicked.connect(self.reject)

        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        save_btn = QPushButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        save_btn.setObjectName("SaveButton")
        save_btn.setFixedSize(120, 44)
        save_btn.clicked.connect(self.accept)

        layout.addStretch()
        layout.addWidget(cancel_btn)
        layout.addWidget(save_btn)

        return layout

    def showEvent(self, event):
        super().showEvent(event)
        self._center_on_parent()

    def _center_on_parent(self):
        """–¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥ –Ω–∞–¥ top-level –æ–∫–Ω–æ–º —Ä–æ–¥–∏—Ç–µ–ª—è, –∏–ª–∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É —ç–∫—Ä–∞–Ω–∞."""
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å, –±–µ—Ä—ë–º –µ–≥–æ top-level –æ–∫–Ω–æ (—á—Ç–æ–±—ã geometry –±—ã–ª –≤–∞–ª–∏–¥–Ω—ã–º)
        parent = self.parent()
        if parent:
            parent = parent.window()
        # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫, –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ–º —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å
        if isinstance(parent, QWidget):
            target_rect = parent.frameGeometry()
        else:
            target_rect = QApplication.primaryScreen().geometry()
        # –¶–µ–Ω—Ç—Ä —ç—Ç–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        center_point = target_rect.center()
        # –°–¥–≤–∏–≥–∞–µ–º –ª–µ–≤—ã–π-–≤–µ—Ä—Ö–Ω–∏–π —É–≥–æ–ª –¥–∏–∞–ª–æ–≥–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –µ–≥–æ —Ü–µ–Ω—Ç—Ä —Å–æ–≤–ø–∞–ª —Å —Ü–µ–Ω—Ç—Ä–æ–º target
        self.move(center_point.x() - self.width() // 2,
                  center_point.y() - self.height() // 2)

    def _apply_styles(self):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å—Ç–∏–ª–∏ –∫ –¥–∏–∞–ª–æ–≥—É"""
        self.setStyleSheet("""
            QFrame#DialogContainer {
                background: rgba(20, 20, 20, 0.95);
                border: 2px solid rgba(255, 255, 255, 0.1);
                border-radius: 16px;
                backdrop-filter: blur(20px);
            }

            QLabel#DialogIcon {
                font-size: 32px;
                background: rgba(59, 130, 246, 0.1);
                border-radius: 24px;
                border: 2px solid rgba(59, 130, 246, 0.3);
            }

            QLabel#DialogTitle {
                font-size: 20px;
                font-weight: 700;
                color: #FFFFFF;
                margin: 0;
            }

            QLabel#DialogDescription {
                font-size: 14px;
                color: rgba(255, 255, 255, 0.8);
                line-height: 1.4;
                margin: 0;
            }

            QTextEdit#UsersTextEdit {
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 8px;
                padding: 12px;
                font-family: 'Consolas', monospace;
                font-size: 13px;
                color: rgba(255, 255, 255, 0.9);
                selection-background-color: rgba(59, 130, 246, 0.3);
            }

            QTextEdit#UsersTextEdit:focus {
                border-color: #3B82F6;
                background: rgba(255, 255, 255, 0.08);
            }

            QLabel#InfoLabel {
                font-size: 12px;
                color: rgba(59, 130, 246, 0.8);
                background: rgba(59, 130, 246, 0.05);
                border: 1px solid rgba(59, 130, 246, 0.2);
                border-radius: 6px;
                padding: 8px;
                margin: 0;
            }

            QPushButton#CancelButton {
                background: rgba(255, 255, 255, 0.06);
                border: 1px solid rgba(255, 255, 255, 0.15);
                border-radius: 8px;
                color: rgba(255, 255, 255, 0.9);
                font-size: 14px;
                font-weight: 500;
            }

            QPushButton#CancelButton:hover {
                background: rgba(255, 255, 255, 0.1);
                border-color: rgba(255, 255, 255, 0.3);
                color: #FFFFFF;
            }

            QPushButton#SaveButton {
                background: #10B981;
                border: 1px solid #10B981;
                border-radius: 8px;
                color: #FFFFFF;
                font-size: 14px;
                font-weight: 600;
            }

            QPushButton#SaveButton:hover {
                background: #059669;
                border-color: #059669;
            }
        """)

    def get_users(self) -> List[str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        text = self.users_text.toPlainText()
        users = []
        for line in text.split('\n'):
            line = line.strip()
            if line:
                # –£–±–∏—Ä–∞–µ–º @ –µ—Å–ª–∏ –µ—Å—Ç—å
                if line.startswith('@'):
                    line = line[1:]
                if line:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —á—Ç–æ-—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
                    users.append(line)
        return users


class ChatsBaseDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã —á–∞—Ç–æ–≤"""

    def __init__(self, parent=None, current_chats: List[str] = None):
        super().__init__(parent)
        self.current_chats = current_chats or []
        self.setWindowTitle("–ë–∞–∑–∞ —á–∞—Ç–æ–≤")
        self.setModal(True)
        self.setWindowFlags(Qt.FramelessWindowHint | Qt.Dialog)
        self.setAttribute(Qt.WA_TranslucentBackground)
        self.setFixedSize(1400, 1200)
        self.init_ui()
        QTimer.singleShot(0, self._center_on_parent)

    def init_ui(self):
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(20, 20, 20, 20)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.content_container = QFrame()
        self.content_container.setObjectName("DialogContainer")
        content_layout = QVBoxLayout(self.content_container)
        content_layout.setContentsMargins(30, 30, 30, 30)
        content_layout.setSpacing(20)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–∫–æ–Ω–∫–æ–π
        header_layout = QHBoxLayout()
        header_layout.setSpacing(15)

        # –ò–∫–æ–Ω–∫–∞
        icon_label = QLabel("üí¨")
        icon_label.setObjectName("DialogIcon")
        icon_label.setFixedSize(48, 48)
        icon_label.setAlignment(Qt.AlignCenter)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("–ë–∞–∑–∞ —á–∞—Ç–æ–≤")
        title_label.setObjectName("DialogTitle")
        title_label.setWordWrap(True)

        header_layout.addWidget(icon_label)
        header_layout.addWidget(title_label, 1)

        # –û–ø–∏—Å–∞–Ω–∏–µ
        desc = QLabel("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —á–∞—Ç—ã/–∫–∞–Ω–∞–ª—ã –¥–ª—è –∏–Ω–≤–∞–π—Ç–∞ (–ø–æ –æ–¥–Ω–æ–π –Ω–∞ —Å—Ç—Ä–æ–∫—É):")
        desc.setObjectName("DialogDescription")
        desc.setWordWrap(True)

        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
        self.chats_text = QTextEdit()
        self.chats_text.setObjectName("ChatsTextEdit")
        self.chats_text.setPlaceholderText(
            "https://t.me/chat1\nt.me/channel2\n@chatusername\nhttps://t.me/joinchat/ABC123")
        self.chats_text.setPlainText('\n'.join(self.current_chats))

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        info_label = QLabel("üí° –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: –ø–æ–ª–Ω—ã–µ —Å—Å—ã–ª–∫–∏, –∫–æ—Ä–æ—Ç–∫–∏–µ —Å—Å—ã–ª–∫–∏, @username, invite —Å—Å—ã–ª–∫–∏")
        info_label.setObjectName("InfoLabel")

        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = self._create_buttons()

        # –°–±–æ—Ä–∫–∞
        content_layout.addLayout(header_layout)
        content_layout.addWidget(desc)
        content_layout.addWidget(self.chats_text, 1)
        content_layout.addWidget(info_label)
        content_layout.addLayout(buttons_layout)

        main_layout.addWidget(self.content_container)

        # –°—Ç–∏–ª–∏
        self._apply_styles()

        # –¢–µ–Ω—å
        shadow = QGraphicsDropShadowEffect()
        shadow.setBlurRadius(30)
        shadow.setXOffset(0)
        shadow.setYOffset(10)
        shadow.setColor(QColor(0, 0, 0, 120))
        self.content_container.setGraphicsEffect(shadow)

    def _create_buttons(self):
        """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–∏–∞–ª–æ–≥–∞"""
        layout = QHBoxLayout()
        layout.setSpacing(12)

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∏—Ç—å")
        cancel_btn.setObjectName("CancelButton")
        cancel_btn.setFixedSize(120, 44)
        cancel_btn.clicked.connect(self.reject)

        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        save_btn = QPushButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        save_btn.setObjectName("SaveButton")
        save_btn.setFixedSize(120, 44)
        save_btn.clicked.connect(self.accept)

        layout.addStretch()
        layout.addWidget(cancel_btn)
        layout.addWidget(save_btn)

        return layout

    def _center_on_parent(self):
        """–¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥ –Ω–∞–¥ top-level –æ–∫–Ω–æ–º —Ä–æ–¥–∏—Ç–µ–ª—è, –∏–ª–∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É —ç–∫—Ä–∞–Ω–∞."""
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å, –±–µ—Ä—ë–º –µ–≥–æ top-level –æ–∫–Ω–æ (—á—Ç–æ–±—ã geometry –±—ã–ª –≤–∞–ª–∏–¥–Ω—ã–º)
        parent = self.parent()
        if parent:
            parent = parent.window()
        # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫, –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ–º —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å
        if isinstance(parent, QWidget):
            target_rect = parent.frameGeometry()
        else:
            target_rect = QApplication.primaryScreen().geometry()
        # –¶–µ–Ω—Ç—Ä —ç—Ç–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        center_point = target_rect.center()
        # –°–¥–≤–∏–≥–∞–µ–º –ª–µ–≤—ã–π-–≤–µ—Ä—Ö–Ω–∏–π —É–≥–æ–ª –¥–∏–∞–ª–æ–≥–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –µ–≥–æ —Ü–µ–Ω—Ç—Ä —Å–æ–≤–ø–∞–ª —Å —Ü–µ–Ω—Ç—Ä–æ–º target
        self.move(center_point.x() - self.width() // 2,
                  center_point.y() - self.height() // 2)

    def showEvent(self, event):
        super().showEvent(event)
        self._center_on_parent()

    def _apply_styles(self):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å—Ç–∏–ª–∏ –∫ –¥–∏–∞–ª–æ–≥—É"""
        self.setStyleSheet("""
            QFrame#DialogContainer {
                background: rgba(20, 20, 20, 0.95);
                border: 2px solid rgba(255, 255, 255, 0.1);
                border-radius: 16px;
                backdrop-filter: blur(20px);
            }

            QLabel#DialogIcon {
                font-size: 32px;
                background: rgba(16, 185, 129, 0.1);
                border-radius: 24px;
                border: 2px solid rgba(16, 185, 129, 0.3);
            }

            QLabel#DialogTitle {
                font-size: 20px;
                font-weight: 700;
                color: #FFFFFF;
                margin: 0;
            }

            QLabel#DialogDescription {
                font-size: 14px;
                color: rgba(255, 255, 255, 0.8);
                line-height: 1.4;
                margin: 0;
            }

            QTextEdit#ChatsTextEdit {
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 8px;
                padding: 12px;
                font-family: 'Consolas', monospace;
                font-size: 13px;
                color: rgba(255, 255, 255, 0.9);
                selection-background-color: rgba(16, 185, 129, 0.3);
            }

            QTextEdit#ChatsTextEdit:focus {
                border-color: #10B981;
                background: rgba(255, 255, 255, 0.08);
            }

            QLabel#InfoLabel {
                font-size: 12px;
                color: rgba(16, 185, 129, 0.8);
                background: rgba(16, 185, 129, 0.05);
                border: 1px solid rgba(16, 185, 129, 0.2);
                border-radius: 6px;
                padding: 8px;
                margin: 0;
            }

            QPushButton#CancelButton {
                background: rgba(255, 255, 255, 0.06);
                border: 1px solid rgba(255, 255, 255, 0.15);
                border-radius: 8px;
                color: rgba(255, 255, 255, 0.9);
                font-size: 14px;
                font-weight: 500;
            }

            QPushButton#CancelButton:hover {
                background: rgba(255, 255, 255, 0.1);
                border-color: rgba(255, 255, 255, 0.3);
                color: #FFFFFF;
            }

            QPushButton#SaveButton {
                background: #10B981;
                border: 1px solid #10B981;
                border-radius: 8px;
                color: #FFFFFF;
                font-size: 14px;
                font-weight: 600;
            }

            QPushButton#SaveButton:hover {
                background: #059669;
                border-color: #059669;
            }
        """)

    def get_chats(self) -> List[str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤"""
        text = self.chats_text.toPlainText()
        chats = []
        for line in text.split('\n'):
            line = line.strip()
            if line:
                chats.append(line)
        return chats


class ExtendedSettingsDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è"""

    def __init__(self, parent=None, current_settings: Dict = None):
        super().__init__(parent)
        self.current_settings = current_settings or {}
        self.setWindowTitle("–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        self.setModal(True)
        self.setWindowFlags(Qt.FramelessWindowHint | Qt.Dialog)
        self.setAttribute(Qt.WA_TranslucentBackground)
        self.setFixedSize(1100, 900)
        self.init_ui()
        QTimer.singleShot(0, self._center_on_parent)

    def init_ui(self):
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(20, 20, 20, 20)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.content_container = QFrame()
        self.content_container.setObjectName("DialogContainer")
        content_layout = QVBoxLayout(self.content_container)
        content_layout.setContentsMargins(30, 30, 30, 30)
        content_layout.setSpacing(20)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–∫–æ–Ω–∫–æ–π
        header_layout = QHBoxLayout()
        header_layout.setSpacing(15)

        # –ò–∫–æ–Ω–∫–∞
        icon_label = QLabel("‚öôÔ∏è")
        icon_label.setObjectName("DialogIcon")
        icon_label.setFixedSize(48, 48)
        icon_label.setAlignment(Qt.AlignCenter)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è")
        title_label.setObjectName("DialogTitle")
        title_label.setWordWrap(True)

        header_layout.addWidget(icon_label)
        header_layout.addWidget(title_label, 1)

        # –°–∫—Ä–æ–ª–ª –æ–±–ª–∞—Å—Ç—å
        scroll = QScrollArea()
        scroll.setObjectName("SettingsScroll")
        scroll_widget = QWidget()
        scroll_layout = QVBoxLayout(scroll_widget)

        # –ì—Ä—É–ø–ø—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
        main_group = self._create_main_settings_group()
        acc_sec_group = self._create_account_security_group()
        chat_sec_group = self._create_chat_security_group()

        scroll_layout.addWidget(main_group)
        scroll_layout.addWidget(acc_sec_group)
        scroll_layout.addWidget(chat_sec_group)

        scroll.setWidget(scroll_widget)
        scroll.setWidgetResizable(True)


        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = self._create_buttons()

        # –°–±–æ—Ä–∫–∞
        content_layout.addLayout(header_layout)
        content_layout.addWidget(scroll, 1)
        content_layout.addLayout(buttons_layout)

        main_layout.addWidget(self.content_container)

        # –°—Ç–∏–ª–∏
        self._apply_styles()

        # –¢–µ–Ω—å
        shadow = QGraphicsDropShadowEffect()
        shadow.setBlurRadius(30)
        shadow.setXOffset(0)
        shadow.setYOffset(10)
        shadow.setColor(QColor(0, 0, 0, 120))
        self.content_container.setGraphicsEffect(shadow)

    def showEvent(self, event):
        super().showEvent(event)
        self._center_on_parent()

    def _create_main_settings_group(self) -> QGroupBox:
        group = QGroupBox("–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞–±–æ—Ç—ã")
        layout = QGridLayout(group)
        layout.setSpacing(10)

        # 1) –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ –≤ –æ–¥–Ω–æ–º —á–∞—Ç–µ
        layout.addWidget(QLabel("–ü–æ—Ç–æ–∫–æ–≤ –Ω–∞ –∫–∞–∂–¥—ã–π —á–∞—Ç:"), 0, 0)
        self.threads_per_chat = QSpinBox()
        self.threads_per_chat.setRange(1, 50)
        self.threads_per_chat.setValue(self.current_settings.get('threads_per_chat', 2))
        layout.addWidget(self.threads_per_chat, 0, 1)

        # 2) –ú–∞–∫—Å–∏–º—É–º —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –≤ –æ–¥–Ω–æ–º —á–∞—Ç–µ
        layout.addWidget(QLabel("–ú–∞–∫—Å–∏–º—É–º —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –Ω–∞ —á–∞—Ç:"), 1, 0)
        self.success_per_chat = QSpinBox()
        self.success_per_chat.setRange(0, 10000)
        self.success_per_chat.setValue(self.current_settings.get('success_per_chat', 0))
        layout.addWidget(self.success_per_chat, 1, 1)

        # 3) –ú–∞–∫—Å–∏–º—É–º —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π —Å –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
        layout.addWidget(QLabel("–ú–∞–∫—Å–∏–º—É–º —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π —Å –∞–∫–∫–∞—É–Ω—Ç–∞:"), 2, 0)
        self.success_per_account = QSpinBox()
        self.success_per_account.setRange(0, 10000)
        self.success_per_account.setValue(self.current_settings.get('success_per_account', 0))
        layout.addWidget(self.success_per_account, 2, 1)

        # 4) –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
        layout.addWidget(QLabel("–ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞, —Å–µ–∫:"), 3, 0)
        self.delay_after_start = QSpinBox()
        self.delay_after_start.setRange(0, 3600)
        self.delay_after_start.setValue(self.current_settings.get('delay_after_start', 0))
        layout.addWidget(self.delay_after_start, 3, 1)

        # 5) –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
        layout.addWidget(QLabel("–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º–∏, —Å–µ–∫:"), 4, 0)
        self.delay_between = QSpinBox()
        self.delay_between.setRange(0, 3600)
        self.delay_between.setValue(self.current_settings.get('delay_between', 0))
        layout.addWidget(self.delay_between, 4, 1)

        return group


    def _create_account_security_group(self) -> QGroupBox:
        group = QGroupBox("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç–∞")
        layout = QGridLayout(group)
        layout.setSpacing(10)

        # 1) –û—à–∏–±–æ–∫ ¬´—Å–ø–∞–º–±–ª–æ–∫–∞¬ª –ø–æ–¥—Ä—è–¥ ‚Äì –¥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
        layout.addWidget(QLabel("–ú–∞–∫—Å–∏–º—É–º –æ—à–∏–±–æ–∫ —Å–ø–∞–º–±–ª–æ–∫–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç:"), 0, 0)
        self.acc_spam_limit = QSpinBox()
        self.acc_spam_limit.setRange(0, 100)
        self.acc_spam_limit.setValue(self.current_settings.get('acc_spam_limit', 3))
        layout.addWidget(self.acc_spam_limit, 0, 1)

        # 2) –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∏—Å–∞–Ω–∏–π –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
        layout.addWidget(QLabel("–ú–∞–∫—Å–∏–º—É–º —Å–ø–∏—Å–∞–Ω–∏–π –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç:"), 1, 0)
        self.acc_writeoff_limit = QSpinBox()
        self.acc_writeoff_limit.setRange(0, 100)
        self.acc_writeoff_limit.setValue(self.current_settings.get('acc_writeoff_limit', 2))
        layout.addWidget(self.acc_writeoff_limit, 1, 1)

        # 3) –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –¥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
        layout.addWidget(QLabel("–ú–∞–∫—Å–∏–º—É–º –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç:"), 2, 0)
        self.acc_block_invite_limit = QSpinBox()
        self.acc_block_invite_limit.setRange(0, 100)
        self.acc_block_invite_limit.setValue(self.current_settings.get('acc_block_invite_limit', 5))
        layout.addWidget(self.acc_block_invite_limit, 2, 1)

        return group


    def _create_chat_security_group(self) -> QGroupBox:
        group = QGroupBox("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞")
        layout = QGridLayout(group)
        layout.setSpacing(10)

        # 1) –°–∫–æ–ª—å–∫–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ–¥—Ä—è–¥ –±—Ä–æ—Å–∏–ª–∏ ¬´—Å–ø–∞–º–±–ª–æ–∫¬ª ‚Äì –¥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —á–∞—Ç–∞
        layout.addWidget(QLabel("–ú–∞–∫—Å–∏–º—É–º –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å–æ —Å–ø–∞–º–±–ª–æ–∫–æ–º –ø–æ–¥—Ä—è–¥:"), 0, 0)
        self.chat_spam_accounts = QSpinBox()
        self.chat_spam_accounts.setRange(0, 100)
        self.chat_spam_accounts.setValue(self.current_settings.get('chat_spam_accounts', 3))
        layout.addWidget(self.chat_spam_accounts, 0, 1)

        # 2) –°–∫–æ–ª—å–∫–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ–¥—Ä—è–¥ —Å–ø–∏—Å–∞–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ ‚Äì –¥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —á–∞—Ç–∞
        layout.addWidget(QLabel("–ú–∞–∫—Å–∏–º—É–º –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å–æ —Å–ø–∏—Å–∞–Ω–∏—è–º–∏ –ø–æ–¥—Ä—è–¥:"), 1, 0)
        self.chat_writeoff_accounts = QSpinBox()
        self.chat_writeoff_accounts.setRange(0, 100)
        self.chat_writeoff_accounts.setValue(self.current_settings.get('chat_writeoff_accounts', 2))
        layout.addWidget(self.chat_writeoff_accounts, 1, 1)

        # 3) –°–∫–æ–ª—å–∫–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ–¥—Ä—è–¥ –ø–æ–ª—É—á–∏–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –æ—à–∏–±–∫—É ‚Äì –¥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —á–∞—Ç–∞
        layout.addWidget(QLabel("–ú–∞–∫—Å–∏–º—É–º –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –æ—à–∏–±–∫–æ–π –ø–æ–¥—Ä—è–¥:"), 2, 0)
        self.chat_unknown_error_accounts = QSpinBox()
        self.chat_unknown_error_accounts.setRange(0, 100)
        self.chat_unknown_error_accounts.setValue(self.current_settings.get('chat_unknown_error_accounts', 1))
        layout.addWidget(self.chat_unknown_error_accounts, 2, 1)

        # 4) –°–∫–æ–ª—å–∫–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ–¥—Ä—è–¥ –∑–∞–º–æ—Ä–æ–∑–∏–ª–∏ ‚Äì –¥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —á–∞—Ç–∞
        layout.addWidget(QLabel("–ú–∞–∫—Å–∏–º—É–º –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å –∑–∞–º–æ—Ä–æ–∑–∫–æ–π –ø–æ–¥—Ä—è–¥:"), 3, 0)
        self.chat_freeze_accounts = QSpinBox()
        self.chat_freeze_accounts.setRange(0, 100)
        self.chat_freeze_accounts.setValue(self.current_settings.get('chat_freeze_accounts', 1))
        layout.addWidget(self.chat_freeze_accounts, 3, 1)

        return group

    def _create_buttons(self):
        """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–∏–∞–ª–æ–≥–∞"""
        layout = QHBoxLayout()
        layout.setSpacing(12)

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∏—Ç—å")
        cancel_btn.setObjectName("CancelButton")
        cancel_btn.setFixedSize(120, 44)
        cancel_btn.clicked.connect(self.reject)

        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        save_btn = QPushButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        save_btn.setObjectName("SaveButton")
        save_btn.setFixedSize(120, 44)
        save_btn.clicked.connect(self.accept)

        layout.addStretch()
        layout.addWidget(cancel_btn)
        layout.addWidget(save_btn)

        return layout

    def _center_on_parent(self):
        """–¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥ –Ω–∞–¥ top-level –æ–∫–Ω–æ–º —Ä–æ–¥–∏—Ç–µ–ª—è, –∏–ª–∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É —ç–∫—Ä–∞–Ω–∞."""
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å, –±–µ—Ä—ë–º –µ–≥–æ top-level –æ–∫–Ω–æ (—á—Ç–æ–±—ã geometry –±—ã–ª –≤–∞–ª–∏–¥–Ω—ã–º)
        parent = self.parent()
        if parent:
            parent = parent.window()
        # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫, –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ–º —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å
        if isinstance(parent, QWidget):
            target_rect = parent.frameGeometry()
        else:
            target_rect = QApplication.primaryScreen().geometry()
        # –¶–µ–Ω—Ç—Ä —ç—Ç–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        center_point = target_rect.center()
        # –°–¥–≤–∏–≥–∞–µ–º –ª–µ–≤—ã–π-–≤–µ—Ä—Ö–Ω–∏–π —É–≥–æ–ª –¥–∏–∞–ª–æ–≥–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –µ–≥–æ —Ü–µ–Ω—Ç—Ä —Å–æ–≤–ø–∞–ª —Å —Ü–µ–Ω—Ç—Ä–æ–º target
        self.move(center_point.x() - self.width() // 2,
                  center_point.y() - self.height() // 2)

    def _apply_styles(self):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å—Ç–∏–ª–∏ –∫ –¥–∏–∞–ª–æ–≥—É"""
        self.setStyleSheet("""
            QFrame#DialogContainer {
                background: rgba(20, 20, 20, 0.95);
                border: 2px solid rgba(255, 255, 255, 0.1);
                border-radius: 16px;
                backdrop-filter: blur(20px);
            }

            QLabel#DialogIcon {
                font-size: 32px;
                background: rgba(156, 163, 175, 0.1);
                border-radius: 24px;
                border: 2px solid rgba(156, 163, 175, 0.3);
            }

            QLabel#DialogTitle {
                font-size: 20px;
                font-weight: 700;
                color: #FFFFFF;
                margin: 0;
            }

            QScrollArea#SettingsScroll {
                background: transparent;
                border: none;
            }
            
            QGroupBox {
                background: rgba(40, 40, 40, 0.9);
                border: 1px solid rgba(255, 255, 255, 0.15);
                border-radius: 8px;
                margin-top: 16px;
                padding: 12px;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                subcontrol-position: top left;
                padding: 0 8px;
                color: #FFFFFF;
                background: rgba(20, 20, 20, 0.95);
                font-weight: 600;
            }
            
            
            QGroupBox#SettingsGroup {
                background: rgba(30, 30, 30, 0.8);
                border: 1px solid rgba(255, 255, 255, 0.15);
                border-radius: 8px;
                padding: 16px;
                margin-top: 20px;
                font-size: 15px;
                font-weight: 600;
                color: #FFFFFF;
            }


            QSpinBox#SettingsSpinBox {
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 6px;
                padding: 8px;
                font-size: 13px;
                color: rgba(255, 255, 255, 0.9);
            }

            QSpinBox#SettingsSpinBox:focus {
                border-color: #9CA3AF;
                background: rgba(255, 255, 255, 0.08);
            }

            QCheckBox#SettingsCheckBox {
                color: rgba(255, 255, 255, 0.9);
                font-size: 13px;
                font-weight: 500;
                spacing: 8px;
            }

            QCheckBox#SettingsCheckBox::indicator {
                width: 18px;
                height: 18px;
            }

            QCheckBox#SettingsCheckBox::indicator:unchecked {
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid rgba(255, 255, 255, 0.2);
                border-radius: 4px;
            }

            QCheckBox#SettingsCheckBox::indicator:checked {
                background: #9CA3AF;
                border: 1px solid #9CA3AF;
                border-radius: 4px;
            }

            QPushButton#CancelButton {
                background: rgba(255, 255, 255, 0.06);
                border: 1px solid rgba(255, 255, 255, 0.15);
                border-radius: 8px;
                color: rgba(255, 255, 255, 0.9);
                font-size: 14px;
                font-weight: 500;
            }

            QPushButton#CancelButton:hover {
                background: rgba(255, 255, 255, 0.1);
                border-color: rgba(255, 255, 255, 0.3);
                color: #FFFFFF;
            }

            QPushButton#SaveButton {
                background: #9CA3AF;
                border: 1px solid #9CA3AF;
                border-radius: 8px;
                color: #FFFFFF;
                font-size: 14px;
                font-weight: 600;
            }

            QPushButton#SaveButton:hover {
                background: #6B7280;
                border-color: #6B7280;
            }
        """)

    def get_settings(self) -> Dict:
        return {
            # –≥–ª–∞–≤–Ω—ã–µ
            'threads_per_chat': self.threads_per_chat.value(),
            'success_per_chat': self.success_per_chat.value(),
            'success_per_account': self.success_per_account.value(),
            'delay_after_start': self.delay_after_start.value(),
            'delay_between': self.delay_between.value(),

            # –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            'acc_spam_limit': self.acc_spam_limit.value(),
            'acc_writeoff_limit': self.acc_writeoff_limit.value(),
            'acc_block_invite_limit': self.acc_block_invite_limit.value(),

            # –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —á–∞—Ç–∞
            'chat_spam_accounts': self.chat_spam_accounts.value(),
            'chat_writeoff_accounts': self.chat_writeoff_accounts.value(),
            'chat_unknown_error_accounts': self.chat_unknown_error_accounts.value(),
            'chat_freeze_accounts': self.chat_freeze_accounts.value(),
        }


class CreateProfileDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∏–Ω–≤–∞–π—Ç–µ—Ä–∞"""

    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–Ω–≤–∞–π—Ç–µ—Ä–∞")
        self.setModal(True)
        self.setWindowFlags(Qt.FramelessWindowHint | Qt.Dialog)
        self.setAttribute(Qt.WA_TranslucentBackground)
        self.setFixedSize(400, 200)
        self.init_ui()

    def init_ui(self):
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(20, 20, 20, 20)

        container = QFrame()
        container.setObjectName("DialogContainer")
        layout = QVBoxLayout(container)
        layout.setContentsMargins(20, 20, 20, 20)
        layout.setSpacing(12)

        label = QLabel("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è:")
        label.setStyleSheet("font-size:16px; color:#FFF; font-weight:bold;")
        self.name_input = QLineEdit()
        self.name_input.setPlaceholderText("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è")
        self.name_input.setFixedHeight(30)

        buttons = QHBoxLayout()
        buttons.addStretch()
        cancel = QPushButton("–û—Ç–º–µ–Ω–∏—Ç—å")
        cancel.setFixedSize(100, 32)
        cancel.clicked.connect(self.reject)
        create = QPushButton("–°–æ–∑–¥–∞—Ç—å")
        create.setFixedSize(100, 32)
        create.clicked.connect(self.accept)
        buttons.addWidget(cancel)
        buttons.addWidget(create)

        layout.addWidget(label)
        layout.addWidget(self.name_input)
        layout.addLayout(buttons)
        main_layout.addWidget(container)

        container.setStyleSheet(
            "QFrame#DialogContainer { background: rgba(20,20,20,0.95); border-radius:8px; }"
        )

    def _create_basic_settings_group(self) -> QGroupBox:
        """–°–æ–∑–¥–∞–µ—Ç –≥—Ä—É–ø–ø—É –æ—Å–Ω–æ–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        group = QGroupBox("–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        group.setObjectName("SettingsGroup")
        layout = QGridLayout(group)
        layout.setSpacing(10)

        # –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        layout.addWidget(QLabel("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è:"), 0, 0)
        self.profile_name = QLineEdit()
        self.profile_name.setObjectName("SettingsInput")
        self.profile_name.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è")
        layout.addWidget(self.profile_name, 0, 1)

        # –¢–∏–ø –∏–Ω–≤–∞–π—Ç–∞
        layout.addWidget(QLabel("–¢–∏–ø –∏–Ω–≤–∞–π—Ç–∞:"), 1, 0)
        self.invite_type = QComboBox()
        self.invite_type.setObjectName("SettingsCombo")
        self.invite_type.addItems(["–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π", "–ß–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É"])
        layout.addWidget(self.invite_type, 1, 1)

        return group

    def _create_work_settings_group(self) -> QGroupBox:
        """–°–æ–∑–¥–∞–µ—Ç –≥—Ä—É–ø–ø—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞–±–æ—Ç—ã"""
        group = QGroupBox("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–±–æ—Ç—ã")
        group.setObjectName("SettingsGroup")
        layout = QGridLayout(group)
        layout.setSpacing(10)

        # –ü–æ—Ç–æ–∫–æ–≤ –Ω–∞ —á–∞—Ç
        layout.addWidget(QLabel("–ü–æ—Ç–æ–∫–æ–≤ –Ω–∞ —á–∞—Ç:"), 0, 0)
        self.threads_per_chat = QSpinBox()
        self.threads_per_chat.setObjectName("SettingsSpinBox")
        self.threads_per_chat.setRange(1, 10)
        self.threads_per_chat.setValue(2)
        layout.addWidget(self.threads_per_chat, 0, 1)

        # –õ–∏–º–∏—Ç –∏–Ω–≤–∞–π—Ç–æ–≤ –Ω–∞ —á–∞—Ç
        layout.addWidget(QLabel("–õ–∏–º–∏—Ç –Ω–∞ —á–∞—Ç:"), 1, 0)
        self.chat_limit = QSpinBox()
        self.chat_limit.setObjectName("SettingsSpinBox")
        self.chat_limit.setRange(1, 1000)
        self.chat_limit.setValue(50)
        layout.addWidget(self.chat_limit, 1, 1)

        # –õ–∏–º–∏—Ç –∏–Ω–≤–∞–π—Ç–æ–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç
        layout.addWidget(QLabel("–õ–∏–º–∏—Ç –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç:"), 2, 0)
        self.account_limit = QSpinBox()
        self.account_limit.setObjectName("SettingsSpinBox")
        self.account_limit.setRange(1, 1000)
        self.account_limit.setValue(100)
        layout.addWidget(self.account_limit, 2, 1)

        # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∏–Ω–≤–∞–π—Ç–∞–º–∏
        layout.addWidget(QLabel("–ó–∞–¥–µ—Ä–∂–∫–∞ (—Å–µ–∫):"), 3, 0)
        self.invite_delay = QSpinBox()
        self.invite_delay.setObjectName("SettingsSpinBox")
        self.invite_delay.setRange(1, 300)
        self.invite_delay.setValue(30)
        layout.addWidget(self.invite_delay, 3, 1)

        return group

    def _create_security_settings_group(self) -> QGroupBox:
        """–°–æ–∑–¥–∞–µ—Ç –≥—Ä—É–ø–ø—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
        group = QGroupBox("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        group.setObjectName("SettingsGroup")
        layout = QGridLayout(group)
        layout.setSpacing(10)

        # –û—à–∏–±–æ–∫ —Å–ø–∞–º–±–ª–æ–∫–∞ –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        layout.addWidget(QLabel("–°–ø–∞–º–±–ª–æ–∫–æ–≤ –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:"), 0, 0)
        self.spam_errors = QSpinBox()
        self.spam_errors.setObjectName("SettingsSpinBox")
        self.spam_errors.setRange(1, 50)
        self.spam_errors.setValue(3)
        layout.addWidget(self.spam_errors, 0, 1)

        # –°–ø–∏—Å–∞–Ω–∏–π –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        layout.addWidget(QLabel("–°–ø–∏—Å–∞–Ω–∏–π –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:"), 1, 0)
        self.writeoff_limit = QSpinBox()
        self.writeoff_limit.setObjectName("SettingsSpinBox")
        self.writeoff_limit.setRange(1, 20)
        self.writeoff_limit.setValue(2)
        layout.addWidget(self.writeoff_limit, 1, 1)

        return group

    def showEvent(self, event):
        super().showEvent(event)
        self._center_on_parent()

    def _create_buttons(self):
        """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–∏–∞–ª–æ–≥–∞"""
        layout = QHBoxLayout()
        layout.setSpacing(12)

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∏—Ç—å")
        cancel_btn.setObjectName("CancelButton")
        cancel_btn.setFixedSize(120, 44)
        cancel_btn.clicked.connect(self.reject)

        # –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è
        create_btn = QPushButton("–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
        create_btn.setObjectName("CreateButton")
        create_btn.setFixedSize(150, 44)
        create_btn.clicked.connect(self.accept)

        layout.addStretch()
        layout.addWidget(cancel_btn)
        layout.addWidget(create_btn)

        return layout

    def _center_on_parent(self):
        """–¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥ –Ω–∞–¥ top-level –æ–∫–Ω–æ–º —Ä–æ–¥–∏—Ç–µ–ª—è, –∏–ª–∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É —ç–∫—Ä–∞–Ω–∞."""
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å, –±–µ—Ä—ë–º –µ–≥–æ top-level –æ–∫–Ω–æ (—á—Ç–æ–±—ã geometry –±—ã–ª –≤–∞–ª–∏–¥–Ω—ã–º)
        parent = self.parent()
        if parent:
            parent = parent.window()
        # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫, –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ–º —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å
        if isinstance(parent, QWidget):
            target_rect = parent.frameGeometry()
        else:
            target_rect = QApplication.primaryScreen().geometry()
        # –¶–µ–Ω—Ç—Ä —ç—Ç–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        center_point = target_rect.center()
        # –°–¥–≤–∏–≥–∞–µ–º –ª–µ–≤—ã–π-–≤–µ—Ä—Ö–Ω–∏–π —É–≥–æ–ª –¥–∏–∞–ª–æ–≥–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –µ–≥–æ —Ü–µ–Ω—Ç—Ä —Å–æ–≤–ø–∞–ª —Å —Ü–µ–Ω—Ç—Ä–æ–º target
        self.move(center_point.x() - self.width() // 2,
                  center_point.y() - self.height() // 2)

    def _apply_styles(self):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å—Ç–∏–ª–∏ –∫ –¥–∏–∞–ª–æ–≥—É"""
        self.setStyleSheet("""
            QFrame#DialogContainer {
                background: rgba(20, 20, 20, 0.95);
                border: 2px solid rgba(255, 255, 255, 0.1);
                border-radius: 16px;
                backdrop-filter: blur(20px);
            }

            QLabel#DialogIcon {
                font-size: 32px;
                background: rgba(16, 185, 129, 0.1);
                border-radius: 24px;
                border: 2px solid rgba(16, 185, 129, 0.3);
            }

            QLabel#DialogTitle {
                font-size: 20px;
                font-weight: 700;
                color: #FFFFFF;
                margin: 0;
            }

            QScrollArea#SettingsScroll {
                background: transparent;
                border: none;
            }

            QGroupBox#SettingsGroup {
                font-size: 14px;
                font-weight: 600;
                color: rgba(255, 255, 255, 0.9);
                border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 8px;
                padding-top: 10px;
                margin-top: 10px;
            }

            QGroupBox#SettingsGroup::title {
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 5px 0 5px;
            }

            QLineEdit#SettingsInput {
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 6px;
                padding: 8px 12px;
                font-size: 13px;
                color: rgba(255, 255, 255, 0.9);
                selection-background-color: rgba(16, 185, 129, 0.3);
            }

            QLineEdit#SettingsInput:focus {
                border-color: #10B981;
                background: rgba(255, 255, 255, 0.08);
            }

            QComboBox#SettingsCombo {
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 6px;
                padding: 8px 12px;
                font-size: 13px;
                color: rgba(255, 255, 255, 0.9);
                selection-background-color: rgba(16, 185, 129, 0.3);
            }

            QComboBox#SettingsCombo:focus {
                border-color: #10B981;
                background: rgba(255, 255, 255, 0.08);
            }

            QComboBox#SettingsCombo QAbstractItemView {
                background: rgba(30, 30, 30, 0.95);
                border: 1px solid rgba(255, 255, 255, 0.1);
                selection-background-color: rgba(16, 185, 129, 0.3);
                color: #FFFFFF;
            }

            QSpinBox#SettingsSpinBox {
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 6px;
                padding: 8px;
                font-size: 13px;
                color: rgba(255, 255, 255, 0.9);
            }

            QSpinBox#SettingsSpinBox:focus {
                border-color: #10B981;
                background: rgba(255, 255, 255, 0.08);
            }

            QPushButton#CancelButton {
                background: rgba(255, 255, 255, 0.06);
                border: 1px solid rgba(255, 255, 255, 0.15);
                border-radius: 8px;
                color: rgba(255, 255, 255, 0.9);
                font-size: 14px;
                font-weight: 500;
            }

            QPushButton#CancelButton:hover {
                background: rgba(255, 255, 255, 0.1);
                border-color: rgba(255, 255, 255, 0.3);
                color: #FFFFFF;
            }

            QPushButton#CreateButton {
                background: #10B981;
                border: 1px solid #10B981;
                border-radius: 8px;
                color: #FFFFFF;
                font-size: 14px;
                font-weight: 600;
            }

            QPushButton#CreateButton:hover {
                background: #059669;
                border-color: #059669;
            }
        """)

    def get_profile_data(self) -> Dict:
        name = self.name_input.text().strip() or "–ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å"
        return {
            'name': name,
            'invite_type': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
            'threads_per_chat': 2,
            'chat_limit': 50,
            'account_limit': 100,
            'invite_delay': 30,
            'spam_errors': 3,
            'writeoff_limit': 2,
            'is_running': False,
            'users_list': [],
            'chats_list': [],
            'extended_settings': {}
        }


# –£–¥–æ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–∏–∞–ª–æ–≥–æ–≤
def show_users_base_dialog(parent, current_users: List[str] = None) -> List[str]:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    dialog = UsersBaseDialog(parent, current_users)
    if dialog.exec() == QDialog.Accepted:
        return dialog.get_users()
    return current_users or []


def show_chats_base_dialog(parent, current_chats: List[str] = None) -> List[str]:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã —á–∞—Ç–æ–≤"""
    dialog = ChatsBaseDialog(parent, current_chats)
    if dialog.exec() == QDialog.Accepted:
        return dialog.get_chats()
    return current_chats or []


def show_create_profile_dialog(parent) -> Dict:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
    dialog = CreateProfileDialog(parent)
    if dialog.exec() == QDialog.Accepted:
        return dialog.get_profile_data()
    return {}


def show_extended_settings_dialog(parent, current_settings: Dict = None) -> Dict:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    dialog = ExtendedSettingsDialog(parent, current_settings)
    if dialog.exec() == QDialog.Accepted:
        return dialog.get_settings()
    return None  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º None –µ—Å–ª–∏ –æ—Ç–º–µ–Ω–∏–ª–∏


def show_main_admins_setup_dialog(parent, profile_name: str) -> Dict[str, any]:
    """
    –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π –¥–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω-–ª–æ–≥–∏–∫–∏
    –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—ã–±–æ—Ä –≥–ª–∞–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤ –∏ –≤–≤–æ–¥ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞

    Args:
        parent: –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç
        profile_name: –ò–º—è –ø—Ä–æ—Ñ–∏–ª—è

    Returns:
        Dict: –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –≥–ª–∞–≤–Ω—ã–º–∏ –∞–¥–º–∏–Ω–∞–º–∏ –∏ —Ç–æ–∫–µ–Ω–æ–º
    """
    try:
        result = {
            'main_admins': [],
            'bot_token': '',
            'success': False
        }

        # –®–∞–≥ 1: –í—ã–±–æ—Ä –≥–ª–∞–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤
        logger.info(f"üëë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è: {profile_name}")

        selected_admins = show_main_admins_dialog(parent, profile_name)

        if not selected_admins:
            logger.info("‚ùå –í—ã–±–æ—Ä –≥–ª–∞–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤ –æ—Ç–º–µ–Ω–µ–Ω")
            return result

        result['main_admins'] = selected_admins

        # –®–∞–≥ 2: –í–≤–æ–¥ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
        logger.info(f"ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è: {profile_name}")

        current_token = load_bot_token_from_profile(profile_name)
        bot_token = show_bot_token_dialog(parent, profile_name, current_token)

        if not bot_token:
            logger.info("‚ùå –í–≤–æ–¥ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω")
            return result

        result['bot_token'] = bot_token
        result['success'] = True

        logger.info(f"‚úÖ –ê–¥–º–∏–Ω-–ª–æ–≥–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è {profile_name}: {len(selected_admins)} –∞–¥–º–∏–Ω–æ–≤, —Ç–æ–∫–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

        return result

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω-–ª–æ–≥–∏–∫–∏: {e}")
        return {'main_admins': [], 'bot_token': '', 'success': False}


def validate_admin_inviter_setup(profile_name: str) -> Dict[str, any]:
    """
    –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –∞–¥–º–∏–Ω-–∏–Ω–≤–∞–π—Ç–µ—Ä–∞

    Args:
        profile_name: –ò–º—è –ø—Ä–æ—Ñ–∏–ª—è

    Returns:
        Dict: –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    """
    try:
        from paths import get_main_admins_list, load_bot_token, validate_profile_structure

        # –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        validation = validate_profile_structure(profile_name)

        if validation['errors']:
            return {
                'ready': False,
                'errors': validation['errors'],
                'message': '–û—à–∏–±–∫–∏ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ø—Ä–æ—Ñ–∏–ª—è'
            }

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤
        main_admins = get_main_admins_list(profile_name)
        if not main_admins:
            return {
                'ready': False,
                'errors': ['–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –≥–ª–∞–≤–Ω—ã–µ –∞–¥–º–∏–Ω—ã'],
                'message': '–ù–∞–∑–Ω–∞—á—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞'
            }

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
        bot_token = load_bot_token(profile_name)
        if not bot_token:
            return {
                'ready': False,
                'errors': ['–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞'],
                'message': '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∞–º–∏'
            }

        # –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã
        return {
            'ready': True,
            'errors': [],
            'warnings': validation['warnings'],
            'info': validation['info'],
            'message': f'–ü—Ä–æ—Ñ–∏–ª—å –≥–æ—Ç–æ–≤: {len(main_admins)} –∞–¥–º–∏–Ω–æ–≤, —Ç–æ–∫–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
            'main_admins_count': len(main_admins),
            'has_bot_token': True
        }

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è {profile_name}: {e}")
        return {
            'ready': False,
            'errors': [f'–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}'],
            'message': '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ—Ñ–∏–ª—è'
        }


# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

def get_profile_admin_info(profile_name: str) -> Dict[str, any]:
    """
    –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–¥–º–∏–Ω-–Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è

    Args:
        profile_name: –ò–º—è –ø—Ä–æ—Ñ–∏–ª—è

    Returns:
        Dict: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–∞—Ö –∏ –±–æ—Ç–µ
    """
    try:
        from paths import get_main_admins_list, load_bot_token

        main_admins = get_main_admins_list(profile_name)
        bot_token = load_bot_token(profile_name)

        return {
            'profile_name': profile_name,
            'main_admins': main_admins,
            'main_admins_count': len(main_admins),
            'has_bot_token': bool(bot_token),
            'bot_token_length': len(bot_token) if bot_token else 0,
            'ready_for_admin_invite': len(main_admins) > 0 and bool(bot_token)
        }

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–¥–º–∏–Ω–∞—Ö: {e}")
        return {
            'profile_name': profile_name,
            'main_admins': [],
            'main_admins_count': 0,
            'has_bot_token': False,
            'bot_token_length': 0,
            'ready_for_admin_invite': False,
            'error': str(e)
        }