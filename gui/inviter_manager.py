# gui/inviter_manager.py - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
"""
–ì–ª–∞–≤–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ - –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –∏–Ω–≤–∞–π—Ç–æ–≤
"""

from PySide6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QLabel, QPushButton, QFrame,
    QScrollArea, QSizePolicy
)
from PySide6.QtCore import Qt, QTimer
from gui.component_inviter.inviter_table import InviterTableWidget
from gui.component_inviter.inviter_stats import InviterStatsWidget
from gui.dialogs.inviter_dialogs import show_create_profile_dialog
from loguru import logger


class InviterManagerTab(QWidget):
    """–ì–ª–∞–≤–Ω—ã–π –≤–∏–¥–∂–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–Ω–≤–∞–π—Ç–µ—Ä–∞"""

    def __init__(self):
        super().__init__()
        self.setObjectName("InviterManagerTab")

        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        layout = QVBoxLayout(self)
        layout.setContentsMargins(20, 20, 20, 20)
        layout.setSpacing(15)

        # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        self._create_header(layout)

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω–≤–∞–π—Ç–µ—Ä–∞
        self._create_stats_section(layout)

        # –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π
        self._create_profiles_section(layout)

        logger.debug("InviterManager initialized")

    def _create_header(self, layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–µ–∫—Ü–∏–∏"""
        header_container = QWidget()
        header_layout = QHBoxLayout(header_container)
        header_layout.setContentsMargins(0, 0, 0, 10)

        # –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏
        breadcrumb = QLabel("–ì–ª–∞–≤–Ω–∞—è / –ò–Ω–≤–∞–π—Ç–µ—Ä")
        breadcrumb.setObjectName("Breadcrumb")
        breadcrumb.setStyleSheet("""
            QLabel#Breadcrumb {
                font-size: 14px;
                color: rgba(255, 255, 255, 0.6);
                font-weight: 400;
            }
        """)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        control_buttons = self._create_control_buttons()

        header_layout.addWidget(breadcrumb)
        header_layout.addStretch()
        header_layout.addLayout(control_buttons)

        layout.addWidget(header_container)

    def _create_control_buttons(self):
        """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω–≤–∞–π—Ç–µ—Ä–æ–º"""
        buttons_layout = QHBoxLayout()
        buttons_layout.setSpacing(10)

        # –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        self.create_profile_btn = QPushButton("+ –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
        self.create_profile_btn.setObjectName("CreateProfileButton")
        self.create_profile_btn.setFixedSize(150, 40)
        self.create_profile_btn.setStyleSheet("""
            QPushButton#CreateProfileButton {
                background: #10B981;
                border: 1px solid #059669;
                border-radius: 8px;
                color: #FFFFFF;
                font-size: 14px;
                font-weight: 600;
            }
            QPushButton#CreateProfileButton:hover {
                background: #059669;
                border-color: #047857;
            }
            QPushButton#CreateProfileButton:pressed {
                background: #047857;
            }
        """)

        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ü–û–°–õ–ï —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏
        self.create_profile_btn.clicked.connect(self._on_create_profile)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö
        self.start_all_btn = QPushButton("‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ")
        self.start_all_btn.setObjectName("StartAllButton")
        self.start_all_btn.setFixedSize(140, 40)
        self.start_all_btn.setStyleSheet("""
            QPushButton#StartAllButton {
                background: #3B82F6;
                border: 1px solid #2563EB;
                border-radius: 8px;
                color: #FFFFFF;
                font-size: 14px;
                font-weight: 600;
            }
            QPushButton#StartAllButton:hover {
                background: #2563EB;
                border-color: #1D4ED8;
            }
        """)
        self.start_all_btn.clicked.connect(self._on_start_all_profiles)

        # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö
        self.stop_all_btn = QPushButton("‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ")
        self.stop_all_btn.setObjectName("StopAllButton")
        self.stop_all_btn.setFixedSize(150, 40)
        self.stop_all_btn.setStyleSheet("""
            QPushButton#StopAllButton {
                background: #EF4444;
                border: 1px solid #DC2626;
                border-radius: 8px;
                color: #FFFFFF;
                font-size: 14px;
                font-weight: 600;
            }
            QPushButton#StopAllButton:hover {
                background: #DC2626;
                border-color: #B91C1C;
            }
        """)
        self.stop_all_btn.clicked.connect(self._on_stop_all_profiles)

        buttons_layout.addWidget(self.create_profile_btn)
        buttons_layout.addWidget(self.start_all_btn)
        buttons_layout.addWidget(self.stop_all_btn)

        return buttons_layout

    def _on_create_profile(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è"""
        try:
            from gui.notifications import show_success, show_error

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
            profile_data = show_create_profile_dialog(self)

            if profile_data:
                # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ —Ç–∞–±–ª–∏—Ü—É
                self.profiles_table.add_profile(profile_data)

                show_success(
                    "–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω",
                    f"–ü—Ä–æ—Ñ–∏–ª—å '{profile_data['name']}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω"
                )

                logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å: {profile_data['name']}")

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {e}")
            from gui.notifications import show_error
            show_error("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: {e}")

    def _on_start_all_profiles(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏"""
        try:
            if hasattr(self, 'profiles_table'):
                self.profiles_table.start_all_profiles()

                from gui.notifications import show_success
                show_success(
                    "–ü—Ä–æ—Ñ–∏–ª–∏ –∑–∞–ø—É—â–µ–Ω—ã",
                    "–í—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ –∑–∞–ø—É—â–µ–Ω—ã"
                )
                logger.info("üöÄ –í—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ –∑–∞–ø—É—â–µ–Ω—ã")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π: {e}")

    def _on_stop_all_profiles(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏"""
        try:
            if hasattr(self, 'profiles_table'):
                self.profiles_table.stop_all_profiles()

                from gui.notifications import show_warning
                show_warning(
                    "–ü—Ä–æ—Ñ–∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã",
                    "–í—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
                )
                logger.info("‚è∏Ô∏è –í—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π: {e}")

    def _create_stats_section(self, layout):
        """–°–æ–∑–¥–∞–µ—Ç —Å–µ–∫—Ü–∏—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        # –ó–∞–≥–ª—É—à–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–ø–æ—Ç–æ–º –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é)
        mock_stats = [
            ("–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π", "3", "#10B981", "active"),
            ("–í—Å–µ–≥–æ –∏–Ω–≤–∞–π—Ç–æ–≤", "1,247", "#3B82F6", "total_invites"),
            ("–£—Å–ø–µ—à–Ω—ã—Ö –∏–Ω–≤–∞–π—Ç–æ–≤", "923", "#059669", "success_invites"),
            ("–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö", "12", "#EF4444", "blocked"),
            ("–í –æ–∂–∏–¥–∞–Ω–∏–∏", "45", "#F59E0B", "pending")
        ]

        self.stats_widget = InviterStatsWidget(mock_stats)
        layout.addWidget(self.stats_widget)

    def _create_profiles_section(self, layout):
        """–°–æ–∑–¥–∞–µ—Ç —Å–µ–∫—Ü–∏—é —Å —Ç–∞–±–ª–∏—Ü–µ–π –ø—Ä–æ—Ñ–∏–ª–µ–π"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
        section_header = QWidget()
        section_layout = QHBoxLayout(section_header)
        section_layout.setContentsMargins(0, 0, 0, 0)

        section_title = QLabel("üì® –ü—Ä–æ—Ñ–∏–ª–∏ –∏–Ω–≤–∞–π—Ç–µ—Ä–∞")
        section_title.setObjectName("SectionTitle")
        section_title.setStyleSheet("""
            QLabel#SectionTitle {
                font-size: 18px;
                font-weight: 600;
                color: rgba(255, 255, 255, 0.9);
                margin: 10px 0;
            }
        """)

        section_layout.addWidget(section_title)
        section_layout.addStretch()

        layout.addWidget(section_header)

        # –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π
        self.profiles_table = InviterTableWidget()
        layout.addWidget(self.profiles_table)

    def refresh_data(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–Ω–≤–∞–π—Ç–µ—Ä–∞"""
        try:
            logger.info("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–Ω–≤–∞–π—Ç–µ—Ä–∞...")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            if hasattr(self, 'stats_widget'):
                # TODO: –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                pass

            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª–µ–π
            if hasattr(self, 'profiles_table'):
                self.profiles_table.refresh_data()

            logger.info("‚úÖ –î–∞–Ω–Ω—ã–µ –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–Ω–≤–∞–π—Ç–µ—Ä–∞: {e}")

    def start_animation(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è"""
        # –ê–Ω–∏–º–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        if hasattr(self, 'stats_widget'):
            QTimer.singleShot(100, self.stats_widget.animate_appearance)

        # –ê–Ω–∏–º–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã
        if hasattr(self, 'profiles_table'):
            QTimer.singleShot(300, self.profiles_table.animate_appearance)