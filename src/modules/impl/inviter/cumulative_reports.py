# src/modules/impl/inviter/cumulative_reports.py
"""
–°–∏—Å—Ç–µ–º–∞ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤:
- –°—É—Ç–æ—á–Ω—ã–µ –æ—Ç—á–µ—Ç—ã (–æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å)
- –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç (–Ω–∞–∫–∞–ø–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è)
"""

import json
import threading
from datetime import datetime, date
from pathlib import Path
from loguru import logger
from typing import Dict, Set, List
from collections import defaultdict


class CumulativeReportsManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ (—Å—É—Ç–æ—á–Ω—ã–µ + –∏—Ç–æ–≥–æ–≤—ã–π)"""

    def __init__(self, profile_name: str, profile_folder: Path):
        self.profile_name = profile_name
        self.profile_folder = profile_folder
        self.lock = threading.Lock()

        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
        self.daily_folder = profile_folder / "–û—Ç—á–µ—Ç_–∑–∞_—Å—É—Ç–∫–∏"
        self.total_folder = profile_folder / "–ò—Ç–æ–≥"
        self.daily_folder.mkdir(exist_ok=True)
        self.total_folder.mkdir(exist_ok=True)

        # –§–∞–π–ª—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        self.daily_data_file = self.daily_folder / ".daily_data.json"
        self.total_data_file = self.total_folder / ".total_data.json"

        # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–º–µ–Ω—ã –¥–Ω—è
        self.current_date = date.today()

        # –°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç–∏
        self.daily_data = {
            "date": self.current_date.strftime("%d_%m_%Y"),
            "total_invites": 0,
            "chats": {}  # chat_link -> {"count": int, "users": [username1, username2, ...]}
        }

        self.total_data = {
            "profile_name": profile_name,
            "total_invites": 0,
            "first_invite_date": None,
            "last_invite_date": None,
            "chats": {}  # chat_link -> {"count": int, "users": [username1, username2, ...]}
        }

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        self._load_existing_data()

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã
        self._generate_daily_report()
        self._generate_total_report()

        logger.success(f"[{self.profile_name}] üìä –°–∏—Å—Ç–µ–º–∞ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –≥–æ—Ç–æ–≤–∞")
        logger.info(f"[{self.profile_name}] üìÖ –°—É—Ç–æ—á–Ω—ã–π –æ—Ç—á–µ—Ç: {self.daily_folder}")
        logger.info(f"[{self.profile_name}] üìà –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç: {self.total_folder}")

    def _load_existing_data(self):
        """üî• –£–°–ò–õ–ï–ù–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê: –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å –ø–æ–ª–Ω–æ–π –∑–∞—â–∏—Ç–æ–π"""
        try:
            logger.info(f"[{self.profile_name}] üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ...")

            # 1. –ó–ê–ì–†–£–ó–ö–ê –ò–¢–û–ì–û–í–´–• –î–ê–ù–ù–´–•
            total_loaded = False
            if self.total_data_file.exists():
                try:
                    with open(self.total_data_file, 'r', encoding='utf-8') as f:
                        saved_total = json.load(f)

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
                    if self._validate_total_data(saved_total):
                        self.total_data.update(saved_total)
                        total_loaded = True
                        logger.success(
                            f"[{self.profile_name}] üìà –ó–∞–≥—Ä—É–∂–µ–Ω—ã –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {self.total_data['total_invites']} –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π")
                    else:
                        logger.warning(f"[{self.profile_name}] ‚ö†Ô∏è –ò—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ–º —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞")

                except (json.JSONDecodeError, UnicodeDecodeError, IOError) as e:
                    logger.error(f"[{self.profile_name}] ‚ùå –ü–æ–≤—Ä–µ–∂–¥–µ–Ω —Ñ–∞–π–ª –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
                    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                    backup_file = self.total_data_file.with_suffix('.json.backup')
                    try:
                        import shutil
                        shutil.copy2(self.total_data_file, backup_file)
                        logger.info(f"[{self.profile_name}] üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_file}")
                    except Exception:
                        pass

            if not total_loaded:
                logger.info(f"[{self.profile_name}] üÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ)")
                # –î–∞–Ω–Ω—ã–µ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤ __init__

            # 2. –ó–ê–ì–†–£–ó–ö–ê –°–£–¢–û–ß–ù–´–• –î–ê–ù–ù–´–•
            daily_loaded = False
            if self.daily_data_file.exists():
                try:
                    with open(self.daily_data_file, 'r', encoding='utf-8') as f:
                        saved_daily = json.load(f)

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
                    if self._validate_daily_data(saved_daily):
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–º–µ–Ω–∏–ª—Å—è –ª–∏ –¥–µ–Ω—å
                        saved_date = saved_daily.get("date", "")
                        current_date_str = self.current_date.strftime("%d_%m_%Y")

                        if saved_date == current_date_str:
                            # –¢–æ—Ç –∂–µ –¥–µ–Ω—å - –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                            self.daily_data.update(saved_daily)
                            daily_loaded = True
                            logger.success(
                                f"[{self.profile_name}] üìÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Å—É—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {self.daily_data['total_invites']} –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è")
                        else:
                            # –ù–æ–≤—ã–π –¥–µ–Ω—å - –∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ
                            if saved_date:
                                logger.info(
                                    f"[{self.profile_name}] üåÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–º–µ–Ω–∞ –¥–Ω—è: {saved_date} ‚Üí {current_date_str}")
                                self._archive_previous_day(saved_daily)
                            logger.info(f"[{self.profile_name}] üÜï –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π –¥–µ–Ω—å —Å —á–∏—Å—Ç–æ–π —Å—É—Ç–æ—á–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π")
                    else:
                        logger.warning(f"[{self.profile_name}] ‚ö†Ô∏è –°—É—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ–º –¥–µ–Ω—å –∑–∞–Ω–æ–≤–æ")

                except (json.JSONDecodeError, UnicodeDecodeError, IOError) as e:
                    logger.error(f"[{self.profile_name}] ‚ùå –ü–æ–≤—Ä–µ–∂–¥–µ–Ω —Ñ–∞–π–ª —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
                    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                    backup_file = self.daily_data_file.with_suffix('.json.backup')
                    try:
                        import shutil
                        shutil.copy2(self.daily_data_file, backup_file)
                        logger.info(f"[{self.profile_name}] üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_file}")
                    except Exception:
                        pass

            if not daily_loaded:
                logger.info(
                    f"[{self.profile_name}] üÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Å—É—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –¥–Ω—è –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ)")
                # –î–∞–Ω–Ω—ã–µ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤ __init__

            # 3. –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –°–û–ó–î–ê–ù–ò–ï –ù–ê–ß–ê–õ–¨–ù–´–• JSON –§–ê–ô–õ–û–í
            self._ensure_json_files_exist()

            logger.success(f"[{self.profile_name}] ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")

        except Exception as e:
            logger.error(f"[{self.profile_name}] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
            logger.info(f"[{self.profile_name}] üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É —Å –Ω—É–ª—è...")
            # –í —Å–ª—É—á–∞–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ - —Ä–∞–±–æ—Ç–∞–µ–º —Å —á–∏—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            # –û–Ω–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤ __init__

    def _validate_total_data(self, data: Dict) -> bool:
        """üî• –ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        try:
            required_keys = ["profile_name", "total_invites", "chats"]

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–π
            for key in required_keys:
                if key not in data:
                    logger.warning(f"[{self.profile_name}] ‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á '{key}' –≤ –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                    return False

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
            if not isinstance(data["total_invites"], int) or data["total_invites"] < 0:
                logger.warning(f"[{self.profile_name}] ‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π total_invites –≤ –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                return False

            if not isinstance(data["chats"], dict):
                logger.warning(f"[{self.profile_name}] ‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ chats –≤ –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                return False

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —á–∞—Ç–æ–≤
            for chat_link, chat_data in data["chats"].items():
                if not isinstance(chat_data, dict):
                    continue
                if "count" not in chat_data or "users" not in chat_data:
                    logger.warning(
                        f"[{self.profile_name}] ‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —á–∞—Ç–∞ {chat_link} –≤ –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                    return False
                if not isinstance(chat_data["count"], int) or not isinstance(chat_data["users"], list):
                    logger.warning(
                        f"[{self.profile_name}] ‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–∞ {chat_link} –≤ –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                    return False

            return True

        except Exception as e:
            logger.error(f"[{self.profile_name}] ‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False

    def _validate_daily_data(self, data: Dict) -> bool:
        """üî• –ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        try:
            required_keys = ["date", "total_invites", "chats"]

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–π
            for key in required_keys:
                if key not in data:
                    logger.warning(f"[{self.profile_name}] ‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á '{key}' –≤ —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                    return False

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
            if not isinstance(data["total_invites"], int) or data["total_invites"] < 0:
                logger.warning(f"[{self.profile_name}] ‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π total_invites –≤ —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                return False

            if not isinstance(data["chats"], dict):
                logger.warning(f"[{self.profile_name}] ‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ chats –≤ —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                return False

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
            if not isinstance(data["date"], str) or len(data["date"]) != 10:
                logger.warning(f"[{self.profile_name}] ‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –≤ —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                return False

            return True

        except Exception as e:
            logger.error(f"[{self.profile_name}] ‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False

    def _ensure_json_files_exist(self):
        """üî• –ù–û–í–û–ï: –£–±–µ–∂–¥–∞–µ—Ç—Å—è —á—Ç–æ JSON —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            if not self.total_data_file.exists() or self.total_data_file.stat().st_size == 0:
                logger.info(f"[{self.profile_name}] üìÑ –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
                self._save_total_data_to_json()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            if not self.daily_data_file.exists() or self.daily_data_file.stat().st_size == 0:
                logger.info(f"[{self.profile_name}] üìÑ –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
                self._save_daily_data_to_json()

        except Exception as e:
            logger.error(f"[{self.profile_name}] ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è JSON —Ñ–∞–π–ª–æ–≤: {e}")

    def _archive_previous_day(self, old_daily_data: Dict):
        """–ê—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–Ω—è"""
        try:
            old_date = old_daily_data.get("date", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            archive_file = self.daily_folder / f"–ó–∞_—Å—É—Ç–∫–∏_{old_date}.txt"

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –¥–ª—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–Ω—è
            lines = []
            lines.append(f"üìÖ –û–¢–ß–ï–¢ –ó–ê –°–£–¢–ö–ò - {old_date.replace('_', '.')}")
            lines.append("=" * 50)
            lines.append(f"üìã –ü—Ä–æ—Ñ–∏–ª—å: {self.profile_name}")
            lines.append(f"‚úÖ –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –∑–∞ —Å—É—Ç–∫–∏: {old_daily_data.get('total_invites', 0)}")
            lines.append("")

            chats_data = old_daily_data.get('chats', {})
            if chats_data:
                lines.append("üì± –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ß–ê–¢–ê–ú:")
                lines.append("")

                for chat_link, chat_info in chats_data.items():
                    chat_display = chat_link.replace('https://t.me/', '').replace('http://t.me/', '')
                    count = chat_info.get('count', 0)
                    users = chat_info.get('users', [])

                    lines.append(f"üîó –ß–ê–¢: {chat_display}")
                    lines.append(f"üìä –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

                    if users:
                        lines.append("üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:")
                        for username in users:
                            lines.append(f"   @{username}")

                    lines.append("")
                    lines.append("-" * 40)
                    lines.append("")
            else:
                lines.append("‚ùå –ó–∞ —ç—Ç–∏ —Å—É—Ç–∫–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—Ä—Ö–∏–≤–Ω—ã–π —Ñ–∞–π–ª
            with open(archive_file, 'w', encoding='utf-8') as f:
                f.write('\n'.join(lines))

            logger.info(f"[{self.profile_name}] üì¶ –î–∞–Ω–Ω—ã–µ –∑–∞ {old_date} –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω—ã: {archive_file}")

        except Exception as e:
            logger.error(f"[{self.profile_name}] ‚ùå –û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        """–ê—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–Ω—è"""
        try:
            old_date = old_daily_data.get("date", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            archive_file = self.daily_folder / f"–ó–∞_—Å—É—Ç–∫–∏_{old_date}.txt"

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –¥–ª—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–Ω—è
            lines = []
            lines.append(f"üìÖ –û–¢–ß–ï–¢ –ó–ê –°–£–¢–ö–ò - {old_date.replace('_', '.')}")
            lines.append("=" * 50)
            lines.append(f"üìã –ü—Ä–æ—Ñ–∏–ª—å: {self.profile_name}")
            lines.append(f"‚úÖ –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –∑–∞ —Å—É—Ç–∫–∏: {old_daily_data.get('total_invites', 0)}")
            lines.append("")

            chats_data = old_daily_data.get('chats', {})
            if chats_data:
                lines.append("üì± –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ß–ê–¢–ê–ú:")
                lines.append("")

                for chat_link, chat_info in chats_data.items():
                    chat_display = chat_link.replace('https://t.me/', '').replace('http://t.me/', '')
                    count = chat_info.get('count', 0)
                    users = chat_info.get('users', [])

                    lines.append(f"üîó –ß–ê–¢: {chat_display}")
                    lines.append(f"üìä –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

                    if users:
                        lines.append("üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:")
                        for username in users:
                            lines.append(f"   @{username}")

                    lines.append("")
                    lines.append("-" * 40)
                    lines.append("")
            else:
                lines.append("‚ùå –ó–∞ —ç—Ç–∏ —Å—É—Ç–∫–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—Ä—Ö–∏–≤–Ω—ã–π —Ñ–∞–π–ª
            with open(archive_file, 'w', encoding='utf-8') as f:
                f.write('\n'.join(lines))

            logger.info(f"[{self.profile_name}] üì¶ –î–∞–Ω–Ω—ã–µ –∑–∞ {old_date} –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω—ã: {archive_file}")

        except Exception as e:
            logger.error(f"[{self.profile_name}] ‚ùå –û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

    def log_successful_invite(self, username: str, chat_link: str):
        """
        üî• –£–°–ò–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –û–ë–ê –æ—Ç—á–µ—Ç–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å—é
        """
        with self.lock:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–µ–Ω—É –¥–Ω—è
                self._check_day_change()

                username_clean = username.lstrip('@')
                current_time = datetime.now()

                logger.debug(
                    f"[{self.profile_name}] üìä –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: @{username_clean} ‚Üí {chat_link}")

                # –û–ë–ù–û–í–õ–Ø–ï–ú –°–£–¢–û–ß–ù–´–ï –î–ê–ù–ù–´–ï
                self._update_daily_data(username_clean, chat_link)

                # –û–ë–ù–û–í–õ–Ø–ï–ú –ò–¢–û–ì–û–í–´–ï –î–ê–ù–ù–´–ï
                self._update_total_data(username_clean, chat_link, current_time)

                # üî• –ö–†–ò–¢–ò–ß–ù–û: –°–û–•–†–ê–ù–Ø–ï–ú –í JSON –ù–ï–ú–ï–î–õ–ï–ù–ù–û (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –æ—à–∏–±–æ–∫)
                save_success = False
                retry_count = 3

                for attempt in range(retry_count):
                    try:
                        self._save_data_to_json()
                        save_success = True
                        break
                    except Exception as save_error:
                        logger.warning(
                            f"[{self.profile_name}] ‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{retry_count} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: {save_error}")
                        if attempt < retry_count - 1:
                            import time
                            time.sleep(0.1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º

                if not save_success:
                    logger.error(
                        f"[{self.profile_name}] ‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –°–û–•–†–ê–ù–ò–¢–¨ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ {retry_count} –ø–æ–ø—ã—Ç–æ–∫!")
                    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É, –Ω–æ –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ—Ç–µ—Ä—è–Ω—ã –ø—Ä–∏ —Å–±–æ–µ

                # –ì–ï–ù–ï–†–ò–†–£–ï–ú TXT –û–¢–ß–ï–¢–´ (–¥–∞–∂–µ –µ—Å–ª–∏ JSON –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è)
                try:
                    self._generate_daily_report()
                    self._generate_total_report()
                except Exception as report_error:
                    logger.error(f"[{self.profile_name}] ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ TXT –æ—Ç—á–µ—Ç–æ–≤: {report_error}")

                # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                stats = self.get_stats_summary()
                logger.debug(
                    f"[{self.profile_name}] ‚úÖ –ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: —Å–µ–≥–æ–¥–Ω—è {stats['daily_total']}, –≤—Å–µ–≥–æ {stats['total_invites']}")

            except Exception as e:
                logger.error(f"[{self.profile_name}] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
                # –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–æ –¥–∞–Ω–Ω—ã–µ —ç—Ç–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ—Ç–µ—Ä—è–Ω—ã

    def _check_day_change(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–º–µ–Ω—É –¥–Ω—è –∏ –∞—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"""
        today = date.today()

        if today != self.current_date:
            logger.info(f"[{self.profile_name}] üåÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–º–µ–Ω–∞ –¥–Ω—è: {self.current_date} ‚Üí {today}")

            # –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤—á–µ—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è
            old_daily_data = self.daily_data.copy()
            self._archive_previous_day(old_daily_data)

            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—É—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            self.current_date = today
            self.daily_data = {
                "date": today.strftime("%d_%m_%Y"),
                "total_invites": 0,
                "chats": {}
            }

            logger.info(f"[{self.profile_name}] üîÑ –°—É—Ç–æ—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–±—Ä–æ—à–µ–Ω–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –¥–Ω—è")

    def _update_daily_data(self, username: str, chat_link: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"""
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±—â–∏–π —Å—á–µ—Ç—á–∏–∫
        self.daily_data["total_invites"] += 1

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —á–∞—Ç—É
        if chat_link not in self.daily_data["chats"]:
            self.daily_data["chats"][chat_link] = {
                "count": 0,
                "users": []
            }

        chat_data = self.daily_data["chats"][chat_link]
        chat_data["count"] += 1

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç –≤ —ç—Ç–æ–º —á–∞—Ç–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        if username not in chat_data["users"]:
            chat_data["users"].append(username)

    def _update_total_data(self, username: str, chat_link: str, current_time: datetime):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±—â–∏–π —Å—á–µ—Ç—á–∏–∫
        self.total_data["total_invites"] += 1

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—ã
        current_date_str = current_time.strftime("%Y-%m-%d %H:%M:%S")
        if not self.total_data["first_invite_date"]:
            self.total_data["first_invite_date"] = current_date_str
        self.total_data["last_invite_date"] = current_date_str

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —á–∞—Ç—É
        if chat_link not in self.total_data["chats"]:
            self.total_data["chats"][chat_link] = {
                "count": 0,
                "users": []
            }

        chat_data = self.total_data["chats"][chat_link]
        chat_data["count"] += 1

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç –≤ —ç—Ç–æ–º —á–∞—Ç–µ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
        if username not in chat_data["users"]:
            chat_data["users"].append(username)

    def _save_data_to_json(self):
        """üî• –£–°–ò–õ–ï–ù–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï: –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ JSON —Ñ–∞–π–ª—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –æ—à–∏–±–æ–∫"""
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–∞ —Ñ–∞–π–ª–∞ –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –ª—É—á—à–µ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        self._save_daily_data_to_json()
        self._save_total_data_to_json()

    def _save_daily_data_to_json(self):
        """üî• –ù–û–í–û–ï: –ù–∞–¥–µ–∂–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        try:
            # –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            temp_file = self.daily_data_file.with_suffix('.json.tmp')

            with open(temp_file, 'w', encoding='utf-8') as f:
                json.dump(self.daily_data, f, ensure_ascii=False, indent=2)
                f.flush()  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–ø–∏—Å—å

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø–∏—Å–∞–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            if temp_file.exists() and temp_file.stat().st_size > 0:
                # –ê—Ç–æ–º–∞—Ä–Ω–æ –∑–∞–º–µ–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
                if self.daily_data_file.exists():
                    backup_file = self.daily_data_file.with_suffix('.json.bak')
                    import shutil
                    shutil.move(self.daily_data_file, backup_file)

                import shutil
                shutil.move(temp_file, self.daily_data_file)

                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –±—ç–∫–∞–ø –µ—Å–ª–∏ –≤—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
                backup_file = self.daily_data_file.with_suffix('.json.bak')
                if backup_file.exists():
                    backup_file.unlink()

            else:
                raise IOError("–í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è")

        except Exception as e:
            logger.error(f"[{self.profile_name}] ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
            # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ
            temp_file = self.daily_data_file.with_suffix('.json.tmp')
            if temp_file.exists():
                try:
                    temp_file.unlink()
                except:
                    pass

    def _save_total_data_to_json(self):
        """üî• –ù–û–í–û–ï: –ù–∞–¥–µ–∂–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        try:
            # –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            temp_file = self.total_data_file.with_suffix('.json.tmp')

            with open(temp_file, 'w', encoding='utf-8') as f:
                json.dump(self.total_data, f, ensure_ascii=False, indent=2)
                f.flush()  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–ø–∏—Å—å

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø–∏—Å–∞–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            if temp_file.exists() and temp_file.stat().st_size > 0:
                # –ê—Ç–æ–º–∞—Ä–Ω–æ –∑–∞–º–µ–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
                if self.total_data_file.exists():
                    backup_file = self.total_data_file.with_suffix('.json.bak')
                    import shutil
                    shutil.move(self.total_data_file, backup_file)

                import shutil
                shutil.move(temp_file, self.total_data_file)

                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –±—ç–∫–∞–ø –µ—Å–ª–∏ –≤—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
                backup_file = self.total_data_file.with_suffix('.json.bak')
                if backup_file.exists():
                    backup_file.unlink()

            else:
                raise IOError("–í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è")

        except Exception as e:
            logger.error(f"[{self.profile_name}] ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
            # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ
            temp_file = self.total_data_file.with_suffix('.json.tmp')
            if temp_file.exists():
                try:
                    temp_file.unlink()
                except:
                    pass

    def _generate_daily_report(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—É—Ç–æ—á–Ω—ã–π TXT –æ—Ç—á–µ—Ç"""
        try:
            date_str = self.daily_data["date"]
            report_file = self.daily_folder / f"–ó–∞_—Å—É—Ç–∫–∏_{date_str}.txt"

            lines = []
            lines.append(f"üìÖ –û–¢–ß–ï–¢ –ó–ê –°–£–¢–ö–ò - {date_str.replace('_', '.')}")
            lines.append("=" * 50)
            lines.append(f"üìã –ü—Ä–æ—Ñ–∏–ª—å: {self.profile_name}")
            lines.append(f"‚úÖ –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –∑–∞ —Å—É—Ç–∫–∏: {self.daily_data['total_invites']}")
            lines.append(f"üïê –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {datetime.now().strftime('%H:%M:%S')}")
            lines.append("")

            if self.daily_data["chats"]:
                lines.append("üì± –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ß–ê–¢–ê–ú:")
                lines.append("")

                # –°–æ—Ä—Ç–∏—Ä—É–µ–º —á–∞—Ç—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π (—É–±—ã–≤–∞–Ω–∏–µ)
                sorted_chats = sorted(
                    self.daily_data["chats"].items(),
                    key=lambda x: x[1]["count"],
                    reverse=True
                )

                for chat_link, chat_info in sorted_chats:
                    chat_display = chat_link.replace('https://t.me/', '').replace('http://t.me/', '')
                    count = chat_info["count"]
                    users = chat_info["users"]

                    lines.append(f"üîó –ß–ê–¢: {chat_display}")
                    lines.append(f"üìä –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

                    if users:
                        lines.append("üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:")
                        for username in users:
                            lines.append(f"   @{username}")

                    lines.append("")
                    lines.append("-" * 40)
                    lines.append("")
            else:
                lines.append("‚ùå –ó–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏")

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
            with open(report_file, 'w', encoding='utf-8') as f:
                f.write('\n'.join(lines))

        except Exception as e:
            logger.error(f"[{self.profile_name}] ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—É—Ç–æ—á–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")

    def _generate_total_report(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π TXT –æ—Ç—á–µ—Ç"""
        try:
            report_file = self.total_folder / "–ò—Ç–æ–≥.txt"

            lines = []
            lines.append(f"üìà –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ü–†–û–§–ò–õ–Ø")
            lines.append("=" * 60)
            lines.append(f"üìã –ü—Ä–æ—Ñ–∏–ª—å: {self.profile_name}")
            lines.append(f"‚úÖ –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: {self.total_data['total_invites']}")

            if self.total_data["first_invite_date"]:
                lines.append(f"üéØ –ü–µ—Ä–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: {self.total_data['first_invite_date']}")
            if self.total_data["last_invite_date"]:
                lines.append(f"üïê –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: {self.total_data['last_invite_date']}")

            lines.append(f"üîÑ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            lines.append("")

            if self.total_data["chats"]:
                lines.append("üì± –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ß–ê–¢–ê–ú –ó–ê –í–°–ï –í–†–ï–ú–Ø:")
                lines.append("")

                # –°–æ—Ä—Ç–∏—Ä—É–µ–º —á–∞—Ç—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π (—É–±—ã–≤–∞–Ω–∏–µ)
                sorted_chats = sorted(
                    self.total_data["chats"].items(),
                    key=lambda x: x[1]["count"],
                    reverse=True
                )

                for chat_link, chat_info in sorted_chats:
                    chat_display = chat_link.replace('https://t.me/', '').replace('http://t.me/', '')
                    count = chat_info["count"]
                    users = chat_info["users"]

                    lines.append(f"üîó –ß–ê–¢: {chat_display}")
                    lines.append(f"üìä –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

                    if users:
                        lines.append(f"üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò ({len(users)} —á–µ–ª.):")
                        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
                        display_users = users[:100]  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 100
                        for username in display_users:
                            lines.append(f"   @{username}")

                        if len(users) > 100:
                            lines.append(f"   ... –∏ –µ—â–µ {len(users) - 100} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

                    lines.append("")
                    lines.append("-" * 50)
                    lines.append("")
            else:
                lines.append("‚ùå –ü–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏")

            lines.append("")
            lines.append("=" * 60)
            lines.append("üìä –≠—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–µ—Ç—Å—è –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è")

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
            with open(report_file, 'w', encoding='utf-8') as f:
                f.write('\n'.join(lines))

        except Exception as e:
            logger.error(f"[{self.profile_name}] ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")

    def get_stats_summary(self) -> Dict:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
        return {
            "daily_total": self.daily_data["total_invites"],
            "daily_chats": len(self.daily_data["chats"]),
            "total_invites": self.total_data["total_invites"],
            "total_chats": len(self.total_data["chats"])
        }

    def force_save_and_verify(self) -> bool:
        """üî• –ù–û–í–û–ï: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ (–¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã)"""
        with self.lock:
            try:
                logger.info(f"[{self.profile_name}] üíæ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
                self._save_data_to_json()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –∏ —á–∏—Ç–∞—é—Ç—Å—è
                total_ok = False
                daily_ok = False

                if self.total_data_file.exists():
                    try:
                        with open(self.total_data_file, 'r', encoding='utf-8') as f:
                            test_data = json.load(f)
                        if self._validate_total_data(test_data):
                            total_ok = True
                    except Exception as e:
                        logger.error(f"[{self.profile_name}] ‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")

                if self.daily_data_file.exists():
                    try:
                        with open(self.daily_data_file, 'r', encoding='utf-8') as f:
                            test_data = json.load(f)
                        if self._validate_daily_data(test_data):
                            daily_ok = True
                    except Exception as e:
                        logger.error(f"[{self.profile_name}] ‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—Ç–æ—á–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")

                if total_ok and daily_ok:
                    logger.success(f"[{self.profile_name}] ‚úÖ –ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
                    return True
                else:
                    logger.error(
                        f"[{self.profile_name}] ‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º: –∏—Ç–æ–≥–æ–≤—ã–µ={total_ok}, —Å—É—Ç–æ—á–Ω—ã–µ={daily_ok}")
                    return False

            except Exception as e:
                logger.error(f"[{self.profile_name}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
                return False

    def get_data_integrity_report(self) -> Dict:
        """üî• –ù–û–í–û–ï: –û—Ç—á–µ—Ç –æ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
        report = {
            "total_file_exists": self.total_data_file.exists(),
            "daily_file_exists": self.daily_data_file.exists(),
            "total_file_size": 0,
            "daily_file_size": 0,
            "total_data_valid": False,
            "daily_data_valid": False,
            "memory_total_invites": self.total_data["total_invites"],
            "memory_daily_invites": self.daily_data["total_invites"]
        }

        try:
            if report["total_file_exists"]:
                report["total_file_size"] = self.total_data_file.stat().st_size
                with open(self.total_data_file, 'r', encoding='utf-8') as f:
                    test_data = json.load(f)
                report["total_data_valid"] = self._validate_total_data(test_data)
        except:
            pass

        try:
            if report["daily_file_exists"]:
                report["daily_file_size"] = self.daily_data_file.stat().st_size
                with open(self.daily_data_file, 'r', encoding='utf-8') as f:
                    test_data = json.load(f)
                report["daily_data_valid"] = self._validate_daily_data(test_data)
        except:
            pass

        return report