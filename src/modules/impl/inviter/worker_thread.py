import traceback
import threading
import asyncio
import queue
import time
from typing import Optional
from datetime import datetime
from loguru import logger
from pathlib import Path
from dataclasses import dataclass

from src.entities.moduls.inviter import InviteUser, UserStatus
from .utils import check_chat_limits, check_account_limits, ensure_username_for_account
from src.entities.moduls.inviter import *

# –ò–º–ø–æ—Ä—Ç—ã Telethon
from telethon.tl.functions.users import GetFullUserRequest
from telethon.tl.functions.messages import GetCommonChatsRequest
from telethon.errors import (
    UsernameInvalidError, UsernameNotOccupiedError, PeerFloodError, FloodWaitError,
    UserPrivacyRestrictedError, UserDeactivatedBanError, UserDeactivatedError,
    AuthKeyUnregisteredError, SessionRevokedError
)
from telethon.tl.types import ChatAdminRights
from telethon.tl.functions.channels import EditAdminRequest


class ChatWorkerThread(threading.Thread):
    """–ü–æ—Ç–æ–∫ –¥–ª—è –æ–¥–Ω–æ–≥–æ —á–∞—Ç–∞ - —É–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ—Ç–æ–∫–∞–º–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–º–µ–Ω–æ–π –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""

    def __init__(self, chat_id: int, chat_link: str, parent):
        super().__init__(name=f"Chat-{chat_id}")
        self.chat_id = chat_id
        self.chat_link = chat_link
        self.parent = parent
        self.chat_success = 0
        self.chat_total = 0
        self.chat_accounts_used = set()  # –ù–û–í–û–ï!
        self.active_threads = []
        self.threads_lock = threading.Lock()
        self.stop_chat_flag = threading.Event()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞
        if chat_link not in parent.chat_stats:
            parent.chat_stats[chat_link] = {"success": 0, "total": 0}

    def run(self):
        """üî• –û–ë–ù–û–í–õ–ï–ù–û: –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —á–∞—Ç–∞ —Å –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ú –æ—Ç–∑—ã–≤–æ–º –ø—Ä–∞–≤ –ø—Ä–∏ –ª—é–±–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —á–∞—Ç–∞
        if self.chat_link not in self.parent.ready_chats:
            logger.error(f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] –ß–∞—Ç –Ω–µ –≥–æ—Ç–æ–≤")
            return

        module_name = f"admin_inviter_{self.parent.profile_name}"
        chat_finish_reason = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞"

        try:
            # ================================================================
            # –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ –†–ê–ë–û–¢–´ –ß–ê–¢–ê
            # ================================================================
            while not self.parent.stop_flag.is_set() and not self.stop_chat_flag.is_set():

                # üö´ –ü–†–û–í–ï–†–ö–ê: –ß–∞—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å–∏—Å—Ç–µ–º–æ–π –∑–∞—â–∏—Ç—ã
                if self.parent.chat_protection_manager.is_chat_blocked(self.chat_link):
                    chat_finish_reason = "—á–∞—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å–∏—Å—Ç–µ–º–æ–π –∑–∞—â–∏—Ç—ã"
                    logger.error(
                        f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                        f"‚ùå –ß–ê–¢ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù —Å–∏—Å—Ç–µ–º–æ–π –∑–∞—â–∏—Ç—ã - –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É"
                    )
                    break

                # üéØ –ü–†–û–í–ï–†–ö–ê: –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —á–∞—Ç–∞
                if not check_chat_limits(self.parent, self.chat_success):
                    chat_finish_reason = "–¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —á–∞—Ç–∞"
                    logger.success(
                        f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —á–∞—Ç–∞")
                    break

                # üë• –ü–†–û–í–ï–†–ö–ê: –ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
                if self.parent.user_queue.empty():
                    chat_finish_reason = "–∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
                    logger.info(
                        f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                    break

                # üîÑ –£–ü–†–ê–í–õ–ï–ù–ò–ï WORKER –ü–û–¢–û–ö–ê–ú–ò
                with self.threads_lock:
                    self.active_threads = [t for t in self.active_threads if t.is_alive()]
                    active_count = len(self.active_threads)

                needed = self.parent.config.threads_per_chat - active_count
                if needed > 0:
                    # üí∞ –ü–†–û–í–ï–†–ö–ê: –ï—Å—Ç—å –ª–∏ –∞–∫–∫–∞—É–Ω—Ç—ã
                    if not self.parent.check_accounts_availability():
                        if active_count == 0:
                            chat_finish_reason = "–∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∞–∫–∫–∞—É–Ω—Ç—ã –∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤"
                            logger.info(
                                f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏ –ø–æ—Ç–æ–∫–æ–≤ - –∑–∞–≤–µ—Ä—à–∞–µ–º")
                            break
                        time.sleep(10)
                        continue

                    # üöÄ –ó–ê–ü–£–°–ö –Ω–æ–≤—ã—Ö worker –ø–æ—Ç–æ–∫–æ–≤
                    for i in range(needed):
                        worker = WorkerThread(
                            thread_id=active_count + i + 1,
                            chat_thread=self,
                            module_name=module_name
                        )
                        worker.start()

                        with self.threads_lock:
                            self.active_threads.append(worker)

                        logger.success(
                            f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] –ó–∞–ø—É—â–µ–Ω –ø–æ—Ç–æ–∫-{active_count + i + 1}")

                time.sleep(5)

            # ================================================================
            # –ù–û–†–ú–ê–õ–¨–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï –ß–ê–¢–ê
            # ================================================================

            logger.info(
                f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                f"üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —á–∞—Ç–∞. –ü—Ä–∏—á–∏–Ω–∞: {chat_finish_reason}")

            # 1Ô∏è‚É£ –ñ–î–ï–ú –ó–ê–í–ï–†–®–ï–ù–ò–Ø –í–°–ï–• WORKER –ü–û–¢–û–ö–û–í
            self._wait_for_worker_threads()

            # 2Ô∏è‚É£ –û–¢–ó–´–í–ê–ï–ú –ü–†–ê–í–ê –£ –ì–õ–ê–í–ù–û–ì–û –ê–î–ú–ò–ù–ê
            self._revoke_main_admin_rights_sync(chat_finish_reason)

        except Exception as e:
            # ================================================================
            # –ê–í–ê–†–ò–ô–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï –ß–ê–¢–ê –ü–†–ò –û–®–ò–ë–ö–ï
            # ================================================================
            chat_finish_reason = f"–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)[:100]}"
            logger.error(
                f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

            # 1Ô∏è‚É£ –ñ–î–ï–ú –ó–ê–í–ï–†–®–ï–ù–ò–Ø WORKER –ü–û–¢–û–ö–û–í (–±—ã—Å—Ç—Ä–æ)
            self._wait_for_worker_threads(timeout=30)

            # 2Ô∏è‚É£ –û–¢–ó–´–í–ê–ï–ú –ü–†–ê–í–ê –£ –ì–õ–ê–í–ù–û–ì–û –ê–î–ú–ò–ù–ê (–¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ!)
            try:
                self._revoke_main_admin_rights_sync(chat_finish_reason)
            except Exception as cleanup_error:
                logger.error(
                    f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                    f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∑—ã–≤–∞ –ø—Ä–∞–≤ –ø—Ä–∏ –∞–≤–∞—Ä–∏–π–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏: {cleanup_error}")

        finally:
            # ================================================================
            # –§–ò–ù–ê–õ–¨–ù–ê–Ø –ó–ê–©–ò–¢–ê - –ü–û–°–õ–ï–î–ù–Ø–Ø –ü–û–ü–´–¢–ö–ê –û–¢–ó–´–í–ê –ü–†–ê–í
            # ================================================================
            try:
                logger.debug(
                    f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                    f"üîí –§–ò–ù–ê–õ–¨–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∑—ã–≤–∞ –ø—Ä–∞–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞...")

                self._revoke_main_admin_rights_sync("—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞")

            except Exception as final_error:
                logger.error(
                    f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                    f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã –æ—Ç–∑—ã–≤–∞ –ø—Ä–∞–≤: {final_error}")

            logger.debug(
                f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                f"üèÅ ChatWorkerThread –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω")

    def _wait_for_worker_threads(self, timeout: int = 60):
        """üîÑ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö worker –ø–æ—Ç–æ–∫–æ–≤"""
        logger.debug(
            f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
            f"‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö worker –ø–æ—Ç–æ–∫–æ–≤...")

        with self.threads_lock:
            threads_to_wait = self.active_threads.copy()

        if threads_to_wait:
            logger.info(
                f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                f"‚è≥ –ù–∞–π–¥–µ–Ω–æ {len(threads_to_wait)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤")

            for i, worker in enumerate(threads_to_wait, 1):
                if worker.is_alive():
                    logger.info(
                        f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                        f"‚è≥ –û–∂–∏–¥–∞–µ–º worker –ø–æ—Ç–æ–∫ {i}/{len(threads_to_wait)}")

                    worker.join(timeout=600)

                    if worker.is_alive():
                        logger.warning(
                            f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                            f"‚ö†Ô∏è Worker –ø–æ—Ç–æ–∫ {i} –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –∑–∞ {timeout} —Å–µ–∫—É–Ω–¥")
                    else:
                        logger.success(
                            f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                            f"‚úÖ Worker –ø–æ—Ç–æ–∫ {i} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω")

            logger.success(
                f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                f"‚úÖ –í—Å–µ worker –ø–æ—Ç–æ–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")
        else:
            logger.info(
                f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                f"‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è")

    # –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–ú–ï–ù–ò–¢–ï –º–µ—Ç–æ–¥ _revoke_main_admin_rights_sync –≤ ChatWorkerThread:

    def _revoke_main_admin_rights_sync(self, reason: str):
        """üëëüîí –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –°–ò–ù–•–†–û–ù–ù–ê–Ø –û–ë–ï–†–¢–ö–ê - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
        try:
            logger.debug(
                f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                f"üëëüîí –û—Ç–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∞ —É –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞... (–ø—Ä–∏—á–∏–Ω–∞: {reason})")

            # üî• –ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–¥–º–∏–Ω–∞
            if self.chat_link not in self.parent.chat_admins:
                logger.warning(
                    f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                    f"‚ö†Ô∏è –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω –¥–ª—è —á–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return

            admin_data = self.parent.chat_admins[self.chat_link]

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
            if not hasattr(admin_data, 'user_id') or not hasattr(admin_data, 'chat_id'):
                logger.warning(
                    f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                    f"‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞ {admin_data.name} –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
                return

            if not admin_data.user_id or not admin_data.chat_id:
                logger.warning(
                    f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                    f"‚ö†Ô∏è ID –∏–ª–∏ chat_id –∞–¥–º–∏–Ω–∞ {admin_data.name} –ø—É—Å—Ç—ã–µ")
                return

            # üî• –ù–û–í–û–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º—É –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞!
            try:
                success = self.parent.send_bot_command(
                    action="REVOKE_ADMIN_RIGHTS",
                    chat_id=admin_data.chat_id,
                    user_id=admin_data.user_id,
                    account_name=admin_data.name,
                    timeout=15  # 15 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
                )

                if success:
                    logger.info(
                        f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                        f"‚úÖ –ü—Ä–∞–≤–∞ —É –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ {admin_data.name} —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–∑–≤–∞–Ω—ã —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –∫–æ–º–∞–Ω–¥")
                else:
                    logger.warning(
                        f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                        f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ–∑–≤–∞—Ç—å –ø—Ä–∞–≤–∞ —É –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ {admin_data.name}")

            except Exception as command_error:
                logger.error(
                    f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                    f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç—É: {command_error}")

        except Exception as e:
            logger.warning(
                f"[{self.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_id}]-[{self.chat_link}] "
                f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∑—ã–≤–∞ –ø—Ä–∞–≤ —É –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º): {e}")


class WorkerThread(threading.Thread):
    """
    üî• –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ø–æ—Ç–æ–∫ —Å —Å–∏—Å—Ç–µ–º–æ–π —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –æ—á–µ—Ä–µ–¥—è–º–∏ –∞–¥–º–∏–Ω–æ–≤
    """

    def __init__(self, thread_id: int, chat_thread: ChatWorkerThread, module_name: str):
        super().__init__(name=f"Thread-{thread_id}")
        self.thread_id = thread_id
        self.chat_thread = chat_thread
        self.module_name = module_name
        self.current_account_data = None
        self.current_account_name = "–ù–µ—Ç–ê–∫–∫–∞—É–Ω—Ç–∞"
        self.thread_account = None
        self.realtime_logger = None  # –î–û–ë–ê–í–õ–ï–ù–û: –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä–æ–¥–∏—Ç–µ–ª–µ–º

    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –ø–æ—Ç–æ–∫–∞ - —Ç–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —á–∞—Ç–∞
            if self.chat_thread.chat_link not in self.chat_thread.parent.ready_chats:
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[–ü–æ—Ç–æ–∫-{self.thread_id}] –ß–∞—Ç –Ω–µ –≥–æ—Ç–æ–≤")
                return

            # –°–æ–∑–¥–∞–µ–º event loop
            loop = asyncio.new_event_loop()
            asyncio.set_event_loop(loop)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–∏–∫—É —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–º–µ–Ω–æ–π –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            loop.run_until_complete(self._thread_logic())

        except Exception as e:
            logger.error(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[–ü–æ—Ç–æ–∫-{self.thread_id}] –û—à–∏–±–∫–∞: {e}")
        finally:
            # –î–û–ë–ê–í–õ–ï–ù–û: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞
            logger.info(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[–ü–æ—Ç–æ–∫-{self.thread_id}] ‚úÖ Worker –ø–æ—Ç–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω")
            if 'loop' in locals():
                loop.close()

    async def _thread_logic(self):
        """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ—Ç–æ–∫–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–º–µ–Ω–æ–π –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
        chat_id = self.chat_thread.chat_id

        # –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ –ü–û–¢–û–ö–ê - –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–∫–∞ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –∞–∫–∫–∞—É–Ω—Ç—ã
        while not self.chat_thread.parent.stop_flag.is_set():

            if self.chat_thread.stop_chat_flag.is_set():
                logger.debug(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-"
                    f"[{self.chat_thread.chat_link}]-[–ü–æ—Ç–æ–∫-{self.thread_id}] "
                    f"üõë –§–õ–ê–ì –û–°–¢–ê–ù–û–í–ö–ò –ß–ê–¢–ê –£–°–¢–ê–ù–û–í–õ–ï–ù - –ó–ê–í–ï–†–®–ê–ï–ú –ü–û–¢–û–ö"
                )
                break

                # üî• –ü–†–û–í–ï–†–ö–ê –ë–õ–û–ö–ò–†–û–í–ö–ò –ß–ê–¢–ê –ß–ï–†–ï–ó –ú–ï–ù–ï–î–ñ–ï–†
            if self.chat_thread.parent.chat_protection_manager.is_chat_blocked(self.chat_thread.chat_link):
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-"
                    f"[{self.chat_thread.chat_link}]-[–ü–æ—Ç–æ–∫-{self.thread_id}] "
                    f"‚ùå –ß–ê–¢ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù - –ó–ê–í–ï–†–®–ê–ï–ú –ü–û–¢–û–ö"
                )
                break

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            if self.chat_thread.parent.user_queue.empty():
                logger.info(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[–ü–æ—Ç–æ–∫-{self.thread_id}] –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –∑–∞–≤–µ—Ä—à–∞–µ–º –ø–æ—Ç–æ–∫")
                break

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã —á–∞—Ç–∞
            if not check_chat_limits(self.chat_thread.parent, self.chat_thread.chat_success):
                break

            # –ü–û–õ–£–ß–ê–ï–ú –ù–û–í–´–ô –ê–ö–ö–ê–£–ù–¢ –¥–ª—è —Ä–∞–±–æ—Ç—ã
            fresh_accounts = self.chat_thread.parent.get_fresh_accounts(self.module_name, 1)

            if not fresh_accounts:
                logger.warning(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[–ü–æ—Ç–æ–∫-{self.thread_id}] –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ - –∑–∞–≤–µ—Ä—à–∞–µ–º –ø–æ—Ç–æ–∫")
                break

            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞
            self.current_account_data = fresh_accounts[0]
            self.current_account_name = self.current_account_data.name
            self.thread_account = None

            logger.info(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[–ü–æ—Ç–æ–∫-{self.thread_id}] üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º: {self.current_account_name}")

            # –†–ê–ë–û–¢–ê–ï–ú –° –¢–ï–ö–£–©–ò–ú –ê–ö–ö–ê–£–ù–¢–û–ú –¥–æ –µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            account_finished = await self._work_with_current_account()

            if account_finished:
                logger.info(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[–ü–æ—Ç–æ–∫-{self.thread_id}] ‚úÖ –ê–∫–∫–∞—É–Ω—Ç {self.current_account_name} –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É")
                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
                continue
            else:
                # –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –ø–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ - –∑–∞–≤–µ—Ä—à–∞–µ–º –ø–æ—Ç–æ–∫
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[–ü–æ—Ç–æ–∫-{self.thread_id}] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ - –∑–∞–≤–µ—Ä—à–∞–µ–º –ø–æ—Ç–æ–∫")
                break

    def _block_chat_immediately(self, reason: str):
        """üî• –ù–û–í–´–ô –ú–ï–¢–û–î: –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —á–∞—Ç–∞ –±–µ–∑ —Å—á–µ—Ç—á–∏–∫–æ–≤"""
        try:
            chat_link = self.chat_thread.chat_link

            # –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç –≤ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
            self.chat_thread.parent.chat_protection_manager.blocked_chats.add(chat_link)

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤
            self.chat_thread.parent.record_stopped_chat(chat_link, reason)

            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø–æ—Ç–æ–∫–∏ —ç—Ç–æ–≥–æ —á–∞—Ç–∞
            self.chat_thread.stop_chat_flag.set()

            logger.error(f"üö´ [{self.chat_thread.parent.profile_name}] –ß–ê–¢ –ù–ï–ú–ï–î–õ–ï–ù–ù–û –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù: {chat_link}")
            logger.error(f"üö´ [{self.chat_thread.parent.profile_name}] –ü—Ä–∏—á–∏–Ω–∞: {reason}")

        except Exception as e:
            logger.error(f"[{self.chat_thread.parent.profile_name}] ‚ùå –û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —á–∞—Ç–∞: {e}")

    async def _work_with_current_account(self) -> bool:
        """
        üî• –û–ë–ù–û–í–õ–ï–ù–û: –†–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–µ–∫—É—â–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º –¥–æ –µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –æ—á–µ—Ä–µ–¥–∏

        Returns:
            True - –µ—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω (–¥–æ—Å—Ç–∏–≥ –ª–∏–º–∏—Ç–∞/–ø—Ä–æ–±–ª–µ–º—ã), –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π
            False - –µ—Å–ª–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –Ω—É–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ—Ç–æ–∫
        """
        chat_id = self.chat_thread.chat_id
        client_connected = False
        rights_granted = False
        account_finish_reason = "unknown"

        # –ö–†–ò–¢–ò–ß–ù–û: –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –≠–¢–û–ì–û —á–∞—Ç–∞
        self.chat_thread.chat_accounts_used.add(self.current_account_name)

        # üî• –ü–†–û–í–ï–†–ö–ê –§–õ–ê–ì–ê –û–°–¢–ê–ù–û–í–ö–ò –ß–ê–¢–ê –í –ù–ê–ß–ê–õ–ï!
        if self.chat_thread.stop_chat_flag.is_set():
            logger.error(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-"
                f"[{self.chat_thread.chat_link}]-[{self.current_account_name}] "
                f"üõë –§–õ–ê–ì –û–°–¢–ê–ù–û–í–ö–ò –ß–ê–¢–ê –£–°–¢–ê–ù–û–í–õ–ï–ù - –ù–ï –ù–ê–ß–ò–ù–ê–ï–ú –†–ê–ë–û–¢–£"
            )
            return True

        # üî• –ü–†–û–í–ï–†–ö–ê –ë–õ–û–ö–ò–†–û–í–ö–ò –ß–ê–¢–ê –í –ù–ê–ß–ê–õ–ï!
        if self.chat_thread.parent.chat_protection_manager.is_chat_blocked(self.chat_thread.chat_link):
            logger.error(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-"
                f"[{self.chat_thread.chat_link}]-[{self.current_account_name}] "
                f"‚ùå –ß–ê–¢ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù - –ù–ï –ù–ê–ß–ò–ù–ê–ï–ú –†–ê–ë–û–¢–£"
            )
            return True

        try:
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –∞–∫–∫–∞—É–Ω—Ç–∞
            session_path = self.current_account_data.account.session_path
            json_path = self.current_account_data.account.json_path

            if not Path(session_path).exists():
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –§–∞–π–ª —Å–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {session_path}")
                await self._ensure_disconnected()
                await self._handle_problem("missing_files")
                return True

            if not Path(json_path).exists():
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] JSON —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {json_path}")
                await self._ensure_disconnected()
                await self._handle_problem("missing_files")
                return True

            # 2. –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
            from src.accounts.impl.account import Account
            self.thread_account = Account(session_path=session_path, json_path=json_path)
            await self.thread_account.create_client()

            await self.thread_account.connect()

            client_connected = True

            if not await self.thread_account.client.is_user_authorized():
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
                await self._ensure_disconnected()
                await self._handle_problem("dead")
                await self._finalize_current_account(False)
                return True

            me = await self.thread_account.client.get_me()
            logger.info(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –ü–æ–¥–∫–ª—é—á–µ–Ω: {me.first_name}")

            # 3. –í—Ö–æ–¥ –≤ —á–∞—Ç
            join_result = await self._join_chat()
            if join_result == "FROZEN_ACCOUNT":
                logger.warning(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –ê–∫–∫–∞—É–Ω—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω")

                should_block_chat = self.chat_thread.parent.chat_protection_manager.check_chat_protection(
                    self.chat_thread.chat_link,
                    self.current_account_name,
                    "frozen"  # –¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã - –∑–∞–º–æ—Ä–æ–∑–∫–∞
                )

                if should_block_chat:
                    logger.debug(
                        f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-"
                        f"[{self.chat_thread.chat_link}]-[{self.current_account_name}] "
                        f"üö´ –ß–ê–¢ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù –ø–æ—Å–ª–µ –∑–∞–º–æ—Ä–æ–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞"
                    )
                    self.chat_thread.stop_chat_flag.set()

                await self._ensure_disconnected()
                await self._handle_problem("frozen")
                await self._finalize_current_account(False)
                return True
            elif join_result != "SUCCESS":
                await self._ensure_disconnected()
                await self._handle_problem("dead")
                return True

            # 4. üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ —á–µ—Ä–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –æ—á–µ—Ä–µ–¥—å —á–∞—Ç–∞
            user_entity = await self.thread_account.client.get_entity('me')
            username_thread_account = await ensure_username_for_account(account=self.thread_account,
                                                                        account_name=self.thread_account.name)
            response_queue = queue.Queue()
            command = AdminCommand(
                action="GRANT_RIGHTS",
                worker_name=self.current_account_name,
                worker_user_id=user_entity.id,
                worker_access_hash=user_entity.access_hash,
                chat_link=self.chat_thread.chat_link,
                response_queue=response_queue,
                username=username_thread_account
            )

            # üî• –ö–†–ò–¢–ò–ß–ù–û: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –æ—á–µ—Ä–µ–¥—å –≠–¢–û–ì–û —á–∞—Ç–∞!
            admin_name = self.chat_thread.parent.chat_admins[self.chat_thread.chat_link].name

            self.chat_thread.parent.send_command_to_chat(self.chat_thread.chat_link, command)

            try:
                rights_granted = response_queue.get(timeout=250)
            except queue.Empty:
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] ‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤ –æ—Ç –∞–¥–º–∏–Ω–∞ {admin_name}")
                await self._ensure_disconnected()
                return True

            if rights_granted == "TOO_MANY_ADMINS":
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üëë‚ùå –°–õ–ò–®–ö–û–ú –ú–ù–û–ì–û –ê–î–ú–ò–ù–û–í - –ë–õ–û–ö–ò–†–£–ï–ú –ß–ê–¢ –ù–ï–ú–ï–î–õ–ï–ù–ù–û!")

                # üî• –ë–õ–û–ö–ò–†–£–ï–ú –ß–ê–¢ –°–†–ê–ó–£ –ë–ï–ó –°–ß–ï–¢–ß–ò–ö–û–í!
                self._block_chat_immediately("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ —á–∞—Ç–µ")

                await self._ensure_disconnected()
                return True

            if not rights_granted:
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] ‚ùå –ü—Ä–∞–≤–∞ –Ω–µ –≤—ã–¥–∞–Ω—ã –∞–¥–º–∏–Ω–æ–º {admin_name}")
                await self._ensure_disconnected()
                return True

            logger.info(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] ‚úÖ –ü—Ä–∞–≤–∞ –ø–æ–ª—É—á–µ–Ω—ã –æ—Ç –∞–¥–º–∏–Ω–∞ {admin_name}")

            # –ù–û–í–û–ï: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
            self.realtime_logger = self.chat_thread.parent.realtime_logger

            # 5. –ì–õ–ê–í–ù–´–ô –¶–ò–ö–õ –ò–ù–í–ê–ô–¢–ò–ù–ì–ê –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
            invites_count = 0

            while not self.chat_thread.parent.stop_flag.is_set() and not self.chat_thread.stop_chat_flag.is_set():

                if self.chat_thread.parent.chat_protection_manager.is_chat_blocked(self.chat_thread.chat_link):
                    logger.error(
                        f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-"
                        f"[{self.chat_thread.chat_link}]-[{self.current_account_name}] "
                        f"‚ùå –ß–ê–¢ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù - –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º —Ä–∞–±–æ—Ç—É"
                    )
                    account_finish_reason = "chat_blocked"
                    break

                # –ü—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤
                if not check_account_limits(self.chat_thread.parent, self.current_account_name, invites_count):
                    logger.info(
                        f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∞–∫–∫–∞—É–Ω—Ç–∞")
                    break

                if not check_chat_limits(self.chat_thread.parent, self.chat_thread.chat_success):
                    logger.info(
                        f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —á–∞—Ç–∞")
                    break

                # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                try:
                    user = self.chat_thread.parent.user_queue.get_nowait()
                except queue.Empty:
                    logger.info(
                        f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                    break

                # –ò–Ω–≤–∞–π—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                try:
                    result = await self._invite_user(user)

                    # –°—á–µ—Ç—á–∏–∫–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –í–°–ï–ì–î–ê –¥–ª—è –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫—Ä–æ–º–µ USER_ALREADY
                    if result != "USER_ALREADY":
                        self.chat_thread.chat_total += 1
                        self.chat_thread.parent.chat_stats[self.chat_thread.chat_link]["total"] += 1

                    if result == "SUCCESS":
                        invites_count += 1
                        self.chat_thread.chat_success += 1
                        self.chat_thread.parent.chat_stats[self.chat_thread.chat_link]["success"] += 1

                        logger.success(
                            f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] ‚úÖ –£–°–ü–ï–®–ù–û –î–û–ë–ê–í–õ–ï–ù #{invites_count}: @{user.username}")

                        self.chat_thread.parent.chat_protection_manager.check_chat_protection(
                            self.chat_thread.chat_link,
                            self.current_account_name,
                            "success"
                        )

                        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
                        self.chat_thread.parent._check_account_error_limits(self.current_account_name, "success")
                        self.chat_thread.parent.update_account_stats(self.current_account_name, success=True)

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ —É—Å–ø–µ—Ö–æ–≤
                        if self.current_account_name in self.chat_thread.parent.finished_successfully_accounts:
                            logger.success(
                                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üéØ –î–û–°–¢–ò–ì –õ–ò–ú–ò–¢–ê –£–°–ü–ï–•–û–í - –∑–∞–≤–µ—Ä—à–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç")

                            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ
                            await self._update_account_status_in_manager("finished")
                            break

                    elif result == "FLOOD_WAIT":  # üî• –ù–û–í–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –§–õ–£–î–ê!
                        logger.error(
                            f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üö´ –ü–û–õ–£–ß–ï–ù –§–õ–£–î - –ó–ê–í–ï–†–®–ê–ï–ú –ê–ö–ö–ê–£–ù–¢")

                        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ–ª—É–¥ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
                        self.chat_thread.parent.flood_accounts.add(self.current_account_name)
                        self.chat_thread.parent._mark_account_as_processed(self.current_account_name, "—Ñ–ª—É–¥ –ª–∏–º–∏—Ç")

                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ
                        await self._update_account_status_in_manager("flood")

                        should_block_chat = self.chat_thread.parent.chat_protection_manager.check_chat_protection(
                            self.chat_thread.chat_link,
                            self.current_account_name,
                            "flood"
                        )

                        if should_block_chat:
                            logger.error(
                                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-"
                                f"[{self.chat_thread.chat_link}]-[{self.current_account_name}] "
                                f"üö´ –ß–ê–¢ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù –ø–æ—Å–ª–µ —Ñ–ª—É–¥–∞"
                            )
                            self.chat_thread.stop_chat_flag.set()

                        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º
                        await self._ensure_disconnected()
                        await self._handle_problem("flood")
                        break  # üî• –í–´–•–û–î–ò–ú –ò–ó –¶–ò–ö–õ–ê - –∞–∫–∫–∞—É–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!

                    elif result == "CRITICAL_FLOOD":  # üî• –ù–û–í–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ö–†–ò–¢–ò–ß–ï–°–ö–û–ì–û –§–õ–£–î–ê!
                        logger.error(
                            f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] "
                            f"üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –§–õ–£–î –° –¢–ê–ô–ú–ê–£–¢–û–ú - –ë–õ–û–ö–ò–†–£–ï–ú –ß–ê–¢ –ù–ï–ú–ï–î–õ–ï–ù–ù–û!")

                        # üö® –ë–õ–û–ö–ò–†–£–ï–ú –ß–ê–¢ –°–†–ê–ó–£ –ë–ï–ó –°–ß–ï–¢–ß–ò–ö–û–í!
                        self._block_chat_immediately("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π FloodWait —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è")

                        # –î–æ–±–∞–≤–ª—è–µ–º –∞–∫–∫–∞—É–Ω—Ç –≤ —Ñ–ª—É–¥ –∞–∫–∫–∞—É–Ω—Ç—ã
                        self.chat_thread.parent.flood_accounts.add(self.current_account_name)
                        self.chat_thread.parent._mark_account_as_processed(self.current_account_name,
                                                                           "–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ñ–ª—É–¥")

                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ
                        await self._update_account_status_in_manager("flood")

                        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º
                        await self._ensure_disconnected()
                        await self._handle_problem("flood")
                        break  # üî• –í–´–•–û–î–ò–ú –ò–ó –¶–ò–ö–õ–ê - –∞–∫–∫–∞—É–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!

                    elif result == "WRITEOFF":
                        logger.warning(
                            f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] ‚ùå –°–ü–ò–°–ê–ù–ò–ï (–Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω): @{user.username}")

                        should_finish = self.chat_thread.parent._check_account_error_limits(self.current_account_name,
                                                                                            "writeoff")
                        if should_finish:
                            logger.error(
                                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üî• –ü–†–ï–í–´–®–ï–ù –õ–ò–ú–ò–¢ –°–ü–ò–°–ê–ù–ò–ô - –∑–∞–≤–µ—Ä—à–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç")

                            self.chat_thread.parent.writeoff_accounts.add(self.current_account_name)
                            self.chat_thread.parent._mark_account_as_processed(self.current_account_name,
                                                                               "–ª–∏–º–∏—Ç —Å–ø–∏—Å–∞–Ω–∏–π")
                            await self._update_account_status_in_manager("writeoff")

                            should_block_chat = self.chat_thread.parent.chat_protection_manager.check_chat_protection(
                                self.chat_thread.chat_link,
                                self.current_account_name,
                                "writeoff_limit"
                            )

                            if should_block_chat:
                                logger.error(
                                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-"
                                    f"[{self.chat_thread.chat_link}]-[{self.current_account_name}] "
                                    f"üö´ –ß–ê–¢ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù –ø–æ—Å–ª–µ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏–π"
                                )
                                self.chat_thread.stop_chat_flag.set()

                            await self._ensure_disconnected()
                            await self._handle_problem("writeoff_limit")
                            break

                        self.chat_thread.parent.update_account_stats(self.current_account_name, error=True)

                    elif result == "SPAM_BLOCK":
                        logger.warning(
                            f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üö´ –°–ü–ê–ú-–ë–õ–û–ö: @{user.username}")

                        should_finish = self.chat_thread.parent._check_account_error_limits(self.current_account_name,
                                                                                            "spam_block")
                        if should_finish:
                            logger.error(
                                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üî• –ü–†–ï–í–´–®–ï–ù –õ–ò–ú–ò–¢ –°–ü–ê–ú-–ë–õ–û–ö–û–í - –∑–∞–≤–µ—Ä—à–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç")

                            self.chat_thread.parent.spam_block_accounts.add(self.current_account_name)
                            self.chat_thread.parent._mark_account_as_processed(self.current_account_name,
                                                                               "–ª–∏–º–∏—Ç —Å–ø–∞–º-–±–ª–æ–∫–æ–≤")
                            await self._update_account_status_in_manager("spam_block")

                            should_block_chat = self.chat_thread.parent.chat_protection_manager.check_chat_protection(
                                self.chat_thread.chat_link,
                                self.current_account_name,
                                "spam_limit"
                            )

                            if should_block_chat:
                                logger.error(
                                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-"
                                    f"[{self.chat_thread.chat_link}]-[{self.current_account_name}] "
                                    f"üö´ –ß–ê–¢ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù –ø–æ—Å–ª–µ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ —Å–ø–∞–º-–±–ª–æ–∫–æ–≤"
                                )
                                self.chat_thread.stop_chat_flag.set()

                            await self._ensure_disconnected()
                            await self._handle_problem("spam_limit")
                            break

                        self.chat_thread.parent.update_account_stats(self.current_account_name, spam_block=True,
                                                                     error=True)

                    elif result == "BLOCK_INVITE":
                        logger.warning(
                            f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üîê –ë–õ–û–ö –ù–ê –ò–ù–í–ê–ô–¢–´: @{user.username}")

                        should_finish = self.chat_thread.parent._check_account_error_limits(self.current_account_name,
                                                                                            "block_invite")
                        if should_finish:
                            logger.error(
                                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üî• –ü–†–ï–í–´–®–ï–ù –õ–ò–ú–ò–¢ –ë–õ–û–ö–û–í –ò–ù–í–ê–ô–¢–û–í - –∑–∞–≤–µ—Ä—à–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç")

                            self.chat_thread.parent.block_invite_accounts.add(self.current_account_name)
                            self.chat_thread.parent._mark_account_as_processed(self.current_account_name,
                                                                               "–ª–∏–º–∏—Ç –±–ª–æ–∫–æ–≤ –∏–Ω–≤–∞–π—Ç–æ–≤")
                            await self._update_account_status_in_manager("dead")

                            should_block_chat = self.chat_thread.parent.chat_protection_manager.check_chat_protection(
                                self.chat_thread.chat_link,
                                self.current_account_name,
                                "block_limit"
                            )

                            if should_block_chat:
                                logger.error(
                                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-"
                                    f"[{self.chat_thread.chat_link}]-[{self.current_account_name}] "
                                    f"üö´ –ß–ê–¢ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù –ø–æ—Å–ª–µ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ –±–ª–æ–∫–æ–≤ –∏–Ω–≤–∞–π—Ç–æ–≤"
                                )
                                self.chat_thread.stop_chat_flag.set()

                            await self._ensure_disconnected()
                            await self._handle_problem("block_limit")
                            break

                        self.chat_thread.parent.update_account_stats(self.current_account_name, error=True)

                    elif result == "PRIVACY":
                        logger.warning(
                            f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üîí –ü–†–ò–í–ê–¢–ù–´–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø: @{user.username}")

                    elif result == "NOT_FOUND":
                        logger.warning(
                            f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üîç –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ù–ï –ù–ê–ô–î–ï–ù: @{user.username}")

                    elif result == "USER_ALREADY_CHATS":
                        logger.warning(
                            f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –£–ñ–ï –°–û–°–¢–û–ò–¢ –í –ë–û–õ–¨–®–û–ú –ö–û–õ–ò–ß–ï–°–¢–í–ï –ì–†–£–ü–ü: @{user.username}")

                    elif result == "USER_ALREADY":
                        logger.info(
                            f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üë§ –£–ñ–ï –û–ë–†–ê–ë–û–¢–ê–ù: @{user.username}")

                    else:  # ERROR –∏ –ø—Ä–æ—á–∏–µ –æ—à–∏–±–∫–∏
                        logger.warning(
                            f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] ‚ùì –û–®–ò–ë–ö–ê: @{user.username} (—Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result})")

                except (AuthKeyUnregisteredError, SessionRevokedError) as e:
                    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è - –ù–ï —Ñ–ª—É–¥!
                    logger.error(
                        f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")

                    user.status = UserStatus.ERROR
                    user.last_attempt = datetime.now()
                    user.error_message = str(e)

                    # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                    if self.realtime_logger:
                        self.realtime_logger.update_user_status_immediately(user)

                    self.chat_thread.parent.processed_users[user.username] = user

                    problem_type = 'dead'  # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ = –º–µ—Ä—Ç–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
                    self.chat_thread.parent._mark_account_as_processed(self.current_account_name,
                                                                       f"–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {problem_type}")

                    await self._update_account_status_in_manager(problem_type)
                    await self._ensure_disconnected()
                    await self._handle_problem(problem_type)
                    break

                # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∏–Ω–≤–∞–π—Ç–∞–º–∏
                if self.chat_thread.parent.config.delay_between > 0:
                    await asyncio.sleep(self.chat_thread.parent.config.delay_between)

            # 6. üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Ç–∑—ã–≤ –ø—Ä–∞–≤ —á–µ—Ä–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –æ—á–µ—Ä–µ–¥—å
            if rights_granted:
                await self._revoke_rights(user_entity.id, username_thread_account)

            # 7. –ü–û–ö–ê–ó–´–í–ê–ï–ú –°–¢–ê–¢–ò–°–¢–ò–ö–£ –ü–†–ò –ó–ê–í–ï–†–®–ï–ù–ò–ò –ê–ö–ö–ê–£–ù–¢–ê
            self._show_account_finish_stats("–ó–ê–í–ï–†–®–ò–õ –†–ê–ë–û–¢–£", invites_count)

            # 8. –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
            await self._finalize_current_account(client_connected)

            # –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω - –º–æ–∂–µ–º –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
            return True

        except Exception as e:
            logger.error(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

            # –ü–æ–º–µ—á–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
            self.chat_thread.parent._mark_account_as_processed(self.current_account_name,
                                                               f"–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)[:50]}")

            await self._handle_problem("dead")
            await self._finalize_current_account(client_connected)

            # –ü—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É
            return True

    async def _invite_user(self, user: InviteUser) -> str:
        """
        –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –∏–Ω–≤–∞–π—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–∏—Å—Ç–µ–º–æ–π —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        üî• –û–ë–ù–û–í–õ–ï–ù–û: –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ FloodWait - –ù–ï –ñ–î–ï–ú 300 —Å–µ–∫—É–Ω–¥!
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: SUCCESS, WRITEOFF, SPAM_BLOCK, BLOCK_INVITE, PRIVACY, NOT_FOUND, USER_ALREADY, ERROR, FLOOD_WAIT
        """
        client = self.thread_account.client
        username = user.username.lstrip('@')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ –ª–∏ –º—ã —É–∂–µ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if username in self.chat_thread.parent.processed_users:
            existing_user = self.chat_thread.parent.processed_users[username]
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω –∏–ª–∏ –∏–º–µ–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            if existing_user.status in [UserStatus.INVITED, UserStatus.ALREADY_IN, UserStatus.NOT_FOUND]:
                return "USER_ALREADY"

        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                full_user = await client(GetFullUserRequest(username))
                old_common_chats = full_user.full_user.common_chats_count
            except (ValueError, TypeError, UsernameInvalidError, UsernameNotOccupiedError):
                user.status = UserStatus.NOT_FOUND
                user.last_attempt = datetime.now()
                user.error_message = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
                user.chat_link = self.chat_thread.chat_link

                # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                if self.realtime_logger:
                    self.realtime_logger.update_user_status_immediately(user)

                self.chat_thread.parent.processed_users[username] = user
                return "NOT_FOUND"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ
            if old_common_chats > 0:
                try:
                    user_entity = await client.get_input_entity(username)
                    common_chats_result = await client(GetCommonChatsRequest(
                        user_id=user_entity,
                        max_id=0,
                        limit=100
                    ))

                    current_chat_entity = await client.get_input_entity(self.chat_thread.chat_link)
                    current_chat_id = None

                    try:
                        chat_full = await client.get_entity(self.chat_thread.chat_link)
                        current_chat_id = chat_full.id
                    except Exception as e:
                        pass

                    if current_chat_id:
                        for chat in common_chats_result.chats:
                            if hasattr(chat, 'id') and chat.id == current_chat_id:
                                user.status = UserStatus.ALREADY_IN
                                user.last_attempt = datetime.now()
                                user.error_message = "–£–∂–µ –≤ —á–∞—Ç–µ"
                                user.chat_link = self.chat_thread.chat_link

                                # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                                if self.realtime_logger:
                                    self.realtime_logger.update_user_status_immediately(user)

                                self.chat_thread.parent.processed_users[username] = user
                                return "USER_ALREADY"

                except Exception as e:
                    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–Ω–≤–∞–π—Ç
                    pass

            # –ò–Ω–≤–∞–π—Ç —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞
            input_channel = await client.get_input_entity(self.chat_thread.chat_link)
            input_user = await client.get_input_entity(username)

            rights = ChatAdminRights(
                invite_users=True,
                anonymous=True,
            )

            await client(EditAdminRequest(
                channel=input_channel,
                user_id=input_user,
                admin_rights=rights,
                rank="–∞–¥–º–∏–Ω"
            ))

            await asyncio.sleep(15)

            no_rights = ChatAdminRights(
                invite_users=False,
                anonymous=False,
            )

            # –ó–∞–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∞ —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
            await client(EditAdminRequest(
                channel=input_channel,
                user_id=input_user,
                admin_rights=no_rights,
                rank=""
            ))

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
            await asyncio.sleep(15)

            try:
                full_user2 = await client(GetFullUserRequest(username))
                new_common_chats = full_user2.full_user.common_chats_count

                if new_common_chats <= old_common_chats:
                    user.status = UserStatus.ERROR
                    user.last_attempt = datetime.now()
                    user.error_message = "–°–ø–∏—Å–∞–Ω–∏–µ"

                    # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                    if self.realtime_logger:
                        self.realtime_logger.update_user_status_immediately(user)

                    self.chat_thread.parent.processed_users[username] = user
                    return "WRITEOFF"
            except:
                pass

            # ‚úÖ –£–°–ü–ï–• - –°–ê–ú–û–ï –í–ê–ñ–ù–û–ï –ú–ï–°–¢–û!
            user.status = UserStatus.INVITED
            user.last_attempt = datetime.now()
            user.error_message = "–£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω"
            user.chat_link = self.chat_thread.chat_link

            # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ –ª–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—Ö
            if self.realtime_logger:
                self.realtime_logger.update_user_status_immediately(user)
                self.realtime_logger.log_successful_invite(
                    username=username,
                    chat_link=self.chat_thread.chat_link,
                    account_name=self.current_account_name
                )

            self.chat_thread.parent.processed_users[username] = user
            self.thread_account.increment_green_people()
            return "SUCCESS"


        except (PeerFloodError, FloodWaitError) as e:

            # üî• –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê - –ü–†–û–í–ï–†–Ø–ï–ú –ï–°–¢–¨ –õ–ò –£–ü–û–ú–ò–ù–ê–ù–ò–ï –í–†–ï–ú–ï–ù–ò –û–ñ–ò–î–ê–ù–ò–Ø!
            error_msg = str(e).lower()
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ "wait of X seconds" - –õ–Æ–ë–û–ï —á–∏—Å–ª–æ!
            import re
            wait_match = re.search(r'wait of (\d+) seconds', error_msg)
            # üö® –ï–°–õ–ò –ï–°–¢–¨ –£–ü–û–ú–ò–ù–ê–ù–ò–ï –í–†–ï–ú–ï–ù–ò - –≠–¢–û –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –§–õ–£–î!
            if wait_match:

                wait_seconds = int(wait_match.group(1))
                user.status = UserStatus.FLOOD_WAIT
                user.last_attempt = datetime.now()
                user.error_message = f"–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô FloodWait: {wait_seconds} —Å–µ–∫—É–Ω–¥"
                user.chat_link = self.chat_thread.chat_link
                # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                if self.realtime_logger:
                    self.realtime_logger.update_user_status_immediately(user)
                self.chat_thread.parent.processed_users[username] = user
                # üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –§–õ–£–î - –ë–õ–û–ö–ò–†–£–ï–ú –ß–ê–¢ –°–†–ê–ó–£!
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] "
                    f"üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –§–õ–£–î {wait_seconds} —Å–µ–∫—É–Ω–¥ - –ë–õ–û–ö–ò–†–£–ï–ú –ß–ê–¢ –ù–ï–ú–ï–î–õ–ï–ù–ù–û!")

                return "CRITICAL_FLOOD"  # üî• –ù–û–í–´–ô —Ç–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞!
            else:

                # üî• –û–ë–´–ß–ù–´–ô –§–õ–£–î –ë–ï–ó –í–†–ï–ú–ï–ù–ò - —Ç–æ–ª—å–∫–æ –∑–∞–≤–µ—Ä—à–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
                user.status = UserStatus.FLOOD_WAIT
                user.last_attempt = datetime.now()
                user.error_message = f"–û–±—ã—á–Ω—ã–π FloodWait: {str(e)}"
                user.chat_link = self.chat_thread.chat_link
                # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                if self.realtime_logger:
                    self.realtime_logger.update_user_status_immediately(user)
                self.chat_thread.parent.processed_users[username] = user
                # –í–ê–ñ–ù–û: –õ–æ–≥–∏—Ä—É–µ–º –Ω–æ –ù–ï –ñ–î–ï–ú!
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] "
                    f"üö´ –ü–û–õ–£–ß–ï–ù –û–ë–´–ß–ù–´–ô –§–õ–£–î - –ó–ê–í–ï–†–®–ê–ï–ú –ê–ö–ö–ê–£–ù–¢: {str(e)}")

                return "FLOOD_WAIT"

        except UserPrivacyRestrictedError:
            user.status = UserStatus.PRIVACY
            user.last_attempt = datetime.now()
            user.error_message = "–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è"
            user.chat_link = self.chat_thread.chat_link

            # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            if self.realtime_logger:
                self.realtime_logger.update_user_status_immediately(user)

            self.chat_thread.parent.processed_users[username] = user
            return "PRIVACY"

        except (UserDeactivatedBanError, UserDeactivatedError):
            user.status = UserStatus.NOT_FOUND
            user.last_attempt = datetime.now()
            user.error_message = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
            user.chat_link = self.chat_thread.chat_link

            # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            if self.realtime_logger:
                self.realtime_logger.update_user_status_immediately(user)

            self.chat_thread.parent.processed_users[username] = user
            return "NOT_FOUND"

        except Exception as e:
            error_msg = str(e)

            if "You're spamreported, you can't create channels or chats" in error_msg:
                user.status = UserStatus.SPAM_BLOCK
                user.last_attempt = datetime.now()
                user.error_message = "–°–ø–∞–º–±–ª–æ–∫"
                user.chat_link = self.chat_thread.chat_link

                # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                if self.realtime_logger:
                    self.realtime_logger.update_user_status_immediately(user)

                self.chat_thread.parent.processed_users[username] = user
                return "SPAM_BLOCK"

            elif "One of the users you tried to add is already in too many channels/supergroups" in error_msg:
                user.status = UserStatus.USER_ALREADY_CHATS
                user.last_attempt = datetime.now()
                user.error_message = "–Æ–∑–µ—Ä_—É–∂–µ_–≤_–±–æ–ª—å—à–æ–º_–∫–æ–ª–∏—á–µ—Å—Ç–≤–µ_–≥—Ä—É–ø–ø"
                user.chat_link = self.chat_thread.chat_link

                # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                if self.realtime_logger:
                    self.realtime_logger.update_user_status_immediately(user)

                self.chat_thread.parent.processed_users[username] = user
                return "USER_ALREADY_CHATS"

            elif "The provided user is not a mutual contact" in error_msg:
                user.status = UserStatus.PRIVACY
                user.last_attempt = datetime.now()
                user.error_message = "–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è"
                user.chat_link = self.chat_thread.chat_link

                # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                if self.realtime_logger:
                    self.realtime_logger.update_user_status_immediately(user)

                self.chat_thread.parent.processed_users[username] = user
                return "PRIVACY"

            else:
                user.status = UserStatus.ERROR
                user.last_attempt = datetime.now()
                user.error_message = f"–û—à–∏–±–∫–∞: {str(e)[:50]}"
                user.chat_link = self.chat_thread.chat_link

                # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–ú–ï–î–õ–ï–ù–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                if self.realtime_logger:
                    self.realtime_logger.update_user_status_immediately(user)

                self.chat_thread.parent.processed_users[username] = user
                print(e)
                return "BLOCK_INVITE"

    def _count_accounts_used_in_chat(self) -> int:
        """–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∞–∫–∫–∞—É–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –ò–ú–ï–ù–ù–û –í –≠–¢–û–ú –ß–ê–¢–ï"""
        return len(self.chat_thread.chat_accounts_used)

    async def _finalize_current_account(self, client_connected: bool):
        """üî• –û–ë–ù–û–í–õ–ï–ù–û: –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –° –ü–†–û–í–ï–†–ö–û–ô –û–¢–ö–õ–Æ–ß–ï–ù–ò–Ø"""
        try:
            # –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û–ï –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ
            await self._ensure_disconnected()

            # –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ
            try:
                self.chat_thread.parent.account_manager.release_account(self.current_account_name, self.module_name)
            except Exception as e:
                logger.error(
                    f"[{self.chat_thread.parent.profile_name}]-[{self.current_account_name}] –û—à–∏–±–∫–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è: {e}")

            # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ - –î–û–ë–ê–í–õ–Ø–ï–ú –ü–û–î–î–ï–†–ñ–ö–£ –§–õ–£–î –ê–ö–ö–ê–£–ù–¢–û–í
            if (self.current_account_name in self.chat_thread.parent.writeoff_accounts or
                    self.current_account_name in self.chat_thread.parent.spam_block_accounts or
                    self.current_account_name in self.chat_thread.parent.block_invite_accounts or
                    self.current_account_name in self.chat_thread.parent.finished_successfully_accounts or
                    self.current_account_name in self.chat_thread.parent.frozen_accounts or
                    self.current_account_name in self.chat_thread.parent.blocked_accounts or
                    self.current_account_name in self.chat_thread.parent.flood_accounts):  # üî• –ù–û–í–û–ï –£–°–õ–û–í–ò–ï!

                try:
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–∞–ø–∫–∏ - –î–û–ë–ê–í–õ–Ø–ï–ú –§–õ–£–î!
                    if self.current_account_name in self.chat_thread.parent.writeoff_accounts:
                        problem_type = 'writeoff'
                    elif self.current_account_name in self.chat_thread.parent.spam_block_accounts:
                        problem_type = 'spam_block'
                    elif self.current_account_name in self.chat_thread.parent.block_invite_accounts:
                        problem_type = 'block_invite'
                    elif self.current_account_name in self.chat_thread.parent.finished_successfully_accounts:
                        problem_type = 'finished'
                    elif self.current_account_name in self.chat_thread.parent.frozen_accounts:
                        problem_type = 'frozen'
                    elif self.current_account_name in self.chat_thread.parent.flood_accounts:  # üî• –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê!
                        problem_type = 'flood'
                    else:
                        problem_type = 'dead'

                    success = self.chat_thread.parent.account_mover.move_account(self.current_account_name,
                                                                                 problem_type)

                    if success:
                        logger.debug(
                            f"[{self.chat_thread.parent.profile_name}]-[{self.current_account_name}] üìÅ –§–∞–π–ª—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ –ø–∞–ø–∫—É: {problem_type}")
                    else:
                        logger.warning(
                            f"[{self.chat_thread.parent.profile_name}]-[{self.current_account_name}] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª—ã")

                except Exception as e:
                    logger.error(
                        f"[{self.chat_thread.parent.profile_name}]-[{self.current_account_name}] –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤: {e}")

        except Exception as e:
            logger.error(
                f"[{self.chat_thread.parent.profile_name}]-[{self.current_account_name}] –û—à–∏–±–∫–∞ —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")

    async def _update_account_status_in_manager(self, new_status: str):
        """üî• –û–ë–ù–û–í–õ–ï–ù–û: –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∏ –ø—É—Ç—å –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º account_data –∏–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            if hasattr(self.chat_thread.parent.account_manager, 'traffic_accounts'):
                if self.current_account_name in self.chat_thread.parent.account_manager.traffic_accounts:
                    account_data = self.chat_thread.parent.account_manager.traffic_accounts[self.current_account_name]

                    old_status = account_data.status
                    account_data.status = new_status

                    # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ
                    account_data.is_busy = False
                    account_data.busy_by = None

                    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –ø–æ—Å–ª–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
                    from paths import WORK_TRAFFER_FOLDER
                    folder_mapping = {
                        'writeoff': WORK_TRAFFER_FOLDER / "–°–ø–∏—Å–∞–Ω–Ω—ã–µ",
                        'spam_block': WORK_TRAFFER_FOLDER / "–°–ø–∞–º_–±–ª–æ–∫",
                        'block_invite': WORK_TRAFFER_FOLDER / "–ë–ª–æ–∫_–∏–Ω–≤–∞–π—Ç–æ–≤",
                        'frozen': WORK_TRAFFER_FOLDER / "–ó–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–µ",
                        'dead': WORK_TRAFFER_FOLDER / "–ú–µ—Ä—Ç–≤—ã–µ",
                        'finished': WORK_TRAFFER_FOLDER / "–£—Å–ø–µ—à–Ω–æ_–æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ",
                        'flood': WORK_TRAFFER_FOLDER / "–§–ª—É–¥"  # üî• –ù–û–í–û–ï MAPPING –¥–ª—è —Ñ–ª—É–¥–∞
                    }

                    if new_status in folder_mapping:
                        new_folder = folder_mapping[new_status]
                        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç–∏ –≤ account_data
                        account_data.account.session_path = new_folder / f"{self.current_account_name}.session"
                        account_data.account.json_path = new_folder / f"{self.current_account_name}.json"

        except Exception as e:
            logger.error(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ: {e}")

    def _show_account_finish_stats(self, reason: str, account_invites: int = 0):
        """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¢–û–õ–¨–ö–û –ü–û –≠–¢–û–ú–£ –ß–ê–¢–£"""
        try:
            chat_link = self.chat_thread.chat_link

            # –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –ò–ú–ï–ù–ù–û –ü–û –≠–¢–û–ú–£ –ß–ê–¢–£
            chat_success = self.chat_thread.chat_success
            chat_total = self.chat_thread.chat_total
            accounts_used = len(self.chat_thread.chat_accounts_used)

            users_remaining = self.chat_thread.parent.user_queue.qsize()
            total_users = getattr(self.chat_thread.parent, 'total_users_count', users_remaining + chat_total)

            logger.success(
                f"üíº –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ß–ê–¢–ê {chat_link}: ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {chat_success}, üìù –ü–æ–ø—ã—Ç–æ–∫: {chat_total}, üë• –ê–∫–∫–∞—É–Ω—Ç–æ–≤: {accounts_used}, üìä –û—Å—Ç–∞–ª–æ—Å—å: {users_remaining}/{total_users}")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —á–∞—Ç–∞: {e}")

    async def _join_chat(self):
        """–í—Ö–æ–¥ –≤ —á–∞—Ç"""
        try:
            result = await self.thread_account.join(self.chat_thread.chat_link)

            if result == "ALREADY_PARTICIPANT":
                logger.success(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –£–∂–µ –≤ —á–∞—Ç–µ")
                return "SUCCESS"
            elif result == "FROZEN_ACCOUNT":
                return "FROZEN_ACCOUNT"
            elif result == "CHAT_NOT_FOUND":
                return "CHAT_NOT_FOUND"
            elif isinstance(result, str) and result.startswith("ERROR:"):
                return "ERROR"
            else:
                logger.info(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –í—Å—Ç—É–ø–∏–ª –≤ —á–∞—Ç")
                return "SUCCESS"

        except Exception as e:
            logger.error(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ —á–∞—Ç: {e}")
            return "ERROR"

    async def _revoke_rights(self, thread_user_id: int, username: str):
        """üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Ç–∑—ã–≤ –ø—Ä–∞–≤ —á–µ—Ä–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –æ—á–µ—Ä–µ–¥—å —á–∞—Ç–∞"""
        try:
            response_queue = queue.Queue()
            command = AdminCommand(
                action="REVOKE_RIGHTS",
                worker_name=self.current_account_name,
                worker_user_id=thread_user_id,
                worker_access_hash=0,
                chat_link=self.chat_thread.chat_link,
                response_queue=response_queue,
                username=username
            )

            # üî• –ö–†–ò–¢–ò–ß–ù–û: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –æ—á–µ—Ä–µ–¥—å –≠–¢–û–ì–û —á–∞—Ç–∞!
            admin_name = self.chat_thread.parent.chat_admins[self.chat_thread.chat_link].name

            self.chat_thread.parent.send_command_to_chat(self.chat_thread.chat_link, command)

            try:
                response_queue.get(timeout=600)
                logger.info(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] ‚úÖ –ü—Ä–∞–≤–∞ –æ—Ç–æ–∑–≤–∞–Ω—ã –∞–¥–º–∏–Ω–æ–º {admin_name}")
            except queue.Empty:
                logger.warning(
                    f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] ‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç –æ—Ç–∑—ã–≤–∞ –ø—Ä–∞–≤ —É –∞–¥–º–∏–Ω–∞ {admin_name}")

        except Exception as e:
            logger.error(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∑—ã–≤–∞ –ø—Ä–∞–≤: {e}")

    async def _ensure_disconnected(self):
        """–ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç Telethon —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π"""
        try:
            if self.thread_account and self.thread_account.client:
                if hasattr(self.thread_account.client, 'is_connected') and self.thread_account.client.is_connected():
                    await self.thread_account.disconnect()
                else:
                    logger.debug(f"[{self.current_account_name}] –ê–∫–∫–∞—É–Ω—Ç —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω")
            else:
                logger.debug(f"[{self.current_account_name}] –ö–ª–∏–µ–Ω—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        except Exception as e:
            logger.warning(f"[{self.current_account_name}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º): {e}")
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è - –≥–ª–∞–≤–Ω–æ–µ —á—Ç–æ –º—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å

    async def _disconnect(self):
        """–ú–Ø–ì–ö–û–ï –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–∞"""
        await self._ensure_disconnected()

    async def _handle_problem(self, problem_type: str):
        """üî• –û–ë–ù–û–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã –° –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ú –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï–ú"""
        try:
            # –°–ù–ê–ß–ê–õ–ê –æ—Ç–∫–ª—é—á–∞–µ–º
            await self._ensure_disconnected()

            # –ü–æ—Ç–æ–º –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π
            self.chat_thread.parent._mark_account_as_processed(self.current_account_name, problem_type)

            if problem_type in ['frozen', 'spam_limit']:
                self.chat_thread.parent.frozen_accounts.add(self.current_account_name)
            elif problem_type == 'flood':  # üî• –ù–û–í–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –§–õ–£–î–ê!
                self.chat_thread.parent.flood_accounts.add(self.current_account_name)
            else:
                self.chat_thread.parent.blocked_accounts.add(self.current_account_name)

        except Exception as e:
            logger.error(
                f"[{self.chat_thread.parent.profile_name}]-[–ü–æ—Ç–æ–∫-{self.chat_thread.chat_id}]-[{self.chat_thread.chat_link}]-[{self.current_account_name}] –û—à–∏–±–∫–∞ –ø–æ–º–µ—Ç–∫–∏: {e}")