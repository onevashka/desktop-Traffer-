# src/modules/impl/inviter/base_inviter_simple.py
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö —Ä–µ–∂–∏–º–æ–≤ –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
"""

import threading
import queue
from abc import ABC, abstractmethod
from pathlib import Path
from typing import Dict, List
from datetime import datetime
from loguru import logger

from src.entities.modules.inviter import InviterConfig
from .data_loader import InviterDataLoader
from .account_pool import AccountPool


class BaseInviterProcess(threading.Thread, ABC):
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞"""

    def __init__(self, profile_name: str, profile_data: Dict, accounts_list: List):
        super().__init__(name=f"Inviter-{profile_name}")

        # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        self.profile_name = profile_name
        self.profile_data = profile_data
        self.profile_folder = Path(profile_data['folder_path'])

        # –ó–∞–≥—Ä—É–∑—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö
        self.data_loader = InviterDataLoader(self.profile_folder)

        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        config_dict = profile_data.get('config', {})
        self.config = self.data_loader.load_config(config_dict)

        # –ü—É–ª –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        self.account_pool = AccountPool(accounts_list)

        # –§–ª–∞–≥–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.stop_flag = threading.Event()
        self.pause_flag = threading.Event()
        self.is_running = False

        # –û—á–µ—Ä–µ–¥–∏ –¥–∞–Ω–Ω—ã—Ö
        self.chat_queue = queue.Queue()
        self.user_queue = queue.Queue()

        # –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        self.processed_users = {}

        # –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
        self.started_at = None
        self.finished_at = None

        logger.info(f"üì® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω {self.config.invite_type} –ø—Ä–æ—Ü–µ—Å—Å: {profile_name}")

    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –ø–æ—Ç–æ–∫–∞"""
        try:
            logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞: {self.profile_name}")
            self.is_running = True
            self.started_at = datetime.now()

            # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            if not self._load_data():
                logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
                return

            # 2. –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ä–∞–±–æ—Ç—É (—Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö)
            self._run_inviting()

        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        finally:
            self.finished_at = datetime.now()
            self._cleanup()
            self.is_running = False
            logger.info(f"‚èπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {self.profile_name}")

    def _load_data(self) -> bool:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ"""
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —á–∞—Ç—ã
            chats, chat_count = self.data_loader.load_chats()
            if not chats:
                return False

            for chat in chats:
                self.chat_queue.put(chat)

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            self.user_queue, self.processed_users, clean_count, dirty_count = \
                self.data_loader.load_users()

            if clean_count == 0:
                logger.error("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∞")
                return False

            logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {chat_count} —á–∞—Ç–æ–≤, {clean_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            return True

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False

    @abstractmethod
    def _run_inviting(self):
        """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞ (—Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö)"""
        pass

    def _cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏"""
        logger.info("üßπ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞...")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.data_loader.save_users_progress(
            self.processed_users,
            self.user_queue
        )

        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if self.started_at and self.finished_at:
            duration = (self.finished_at - self.started_at).total_seconds() / 60
            logger.info(f"‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {duration:.1f} –º–∏–Ω—É—Ç")

    def stop(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å"""
        logger.info(f"‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞: {self.profile_name}")
        self.stop_flag.set()

    def pause(self):
        """–°—Ç–∞–≤–∏—Ç –Ω–∞ –ø–∞—É–∑—É"""
        self.pause_flag.set()

    def resume(self):
        """–í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–∞–±–æ—Ç—É"""
        self.pause_flag.clear()