# src/entities/moduls/inviter.py - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
"""
–ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–¥—É–ª—è –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∞–¥–º–∏–Ω-–∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
"""

from dataclasses import dataclass
from datetime import datetime
from enum import Enum
from typing import Optional
from paths import Path
import queue


class UserStatus(Enum):
    """–°—Ç–∞—Ç—É—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∞"""
    CLEAN = "clean"  # –ß–∏—Å—Ç—ã–π, –≥–æ—Ç–æ–≤ –∫ –∏–Ω–≤–∞–π—Ç—É
    INVITED = "invited"  # –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω
    ERROR = "error"  # –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–≤–∞–π—Ç–µ
    PRIVACY = "privacy"  # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
    ALREADY_IN = "already_in"  # –£–∂–µ –≤ —á–∞—Ç–µ
    SPAM_BLOCK = "spam_block"  # –°–ø–∞–º–±–ª–æ–∫
    NOT_FOUND = "not_found"  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    FLOOD_WAIT = "flood_wait"  # –û–∂–∏–¥–∞–Ω–∏–µ —Ñ–ª—É–¥–∞
    USER_ALREADY_CHATS = "user_already_chats"


@dataclass
class InviteUser:
    """–ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–Ω–≤–∞–π—Ç–∞"""
    username: str  # Username –±–µ–∑ @
    status: UserStatus = UserStatus.CLEAN
    last_attempt: Optional[datetime] = None
    error_message: Optional[str] = None

    def to_file_format(self) -> str:
        """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª"""
        if self.status == UserStatus.CLEAN:
            return f"@{self.username}"

        status_map = {
            UserStatus.INVITED: "‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω",
            UserStatus.ERROR: f"‚ùå –û—à–∏–±–∫–∞",
            UserStatus.PRIVACY: "üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å",
            UserStatus.ALREADY_IN: "üë• –£–∂–µ –≤ —á–∞—Ç–µ",
            UserStatus.SPAM_BLOCK: "üö´ –°–ø–∞–º–±–ª–æ–∫",
            UserStatus.NOT_FOUND: "‚ùì –ù–µ –Ω–∞–π–¥–µ–Ω",
            UserStatus.FLOOD_WAIT: "‚è≥ –§–ª—É–¥"
        }

        status_text = status_map.get(self.status, str(self.status.value))
        if self.error_message and self.status == UserStatus.ERROR:
            status_text = f"{status_text}: {self.error_message}"

        return f"@{self.username}: {status_text}"


@dataclass
class AccountStats:
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞"""
    name: str
    invites: int = 0
    errors: int = 0
    spam_blocks: int = 0
    consecutive_spam: int = 0
    status: str = "ready"


@dataclass
class ChatStats:
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞"""
    name: str
    processed: int = 0
    success: int = 0
    errors: int = 0
    consecutive_errors: int = 0


@dataclass
class InviterConfig:
    """
    –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω–≤–∞–π—Ç–µ—Ä–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∞–¥–º–∏–Ω-–∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
    """
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω-–∏–Ω–≤–∞–π—Ç–µ—Ä–∞"""
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    invite_type: str = "admin"
    threads_per_chat: int = 1

    # –õ–∏–º–∏—Ç—ã —É—Å–ø–µ—à–Ω—ã—Ö –∏–Ω–≤–∞–π—Ç–æ–≤
    success_per_chat: int = 2
    success_per_account: int = 1

    # –ó–∞–¥–µ—Ä–∂–∫–∏
    delay_after_start: int = 5
    delay_between: int = 5

    # –õ–∏–º–∏—Ç—ã —Å–ø–∞–º–∞ –∏ –æ—à–∏–±–æ–∫
    acc_spam_limit: int = 33
    acc_writeoff_limit: int = 24
    acc_block_invite_limit: int = 55

    # –õ–∏–º–∏—Ç—ã –ø–æ —á–∞—Ç–∞–º
    chat_spam_accounts: int = 35
    chat_writeoff_accounts: int = 24
    chat_unknown_error_accounts: int = 15
    chat_freeze_accounts: int = 41

    # –û–±—â–∏–µ –ª–∏–º–∏—Ç—ã
    chat_limit: int = 50
    account_limit: int = 100
    invite_delay: int = 30
    spam_errors: int = 3
    writeoff_limit: int = 2

    # –ê–¥–º–∏–Ω-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    delay_between_workers: int = 10
    sequential_workers: bool = True
    admin_rights_timeout: int = 30
    # ========== –ù–û–í–´–ï –ü–û–õ–Ø –î–õ–Ø –ê–î–ú–ò–ù-–ò–ù–í–ê–ô–¢–ò–ù–ì–ê ==========
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
    bot_token: str = ""  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∞–º–∏

    # –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω
    main_admin_account: str = ""  # –ò–º—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞

    @classmethod
    def from_dict(cls, data: dict) -> 'InviterConfig':
        """–°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥ –∏–∑ —Å–ª–æ–≤–∞—Ä—è —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ–ª–µ–π"""
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø–æ–ª—è
        known_fields = {field.name for field in cls.__dataclass_fields__.values()}
        filtered_data = {k: v for k, v in data.items() if k in known_fields}
        return cls(**filtered_data)

    def to_dict(self) -> dict:
        """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä—å"""
        return {
            'invite_type': self.invite_type,
            'threads_per_chat': self.threads_per_chat,
            'success_per_chat': self.success_per_chat,
            'success_per_account': self.success_per_account,
            'delay_after_start': self.delay_after_start,
            'delay_between': self.delay_between,
            'acc_spam_limit': self.acc_spam_limit,
            'acc_error_limit': self.acc_error_limit,
            'chat_error_limit': self.chat_error_limit,
            'bot_token': self.bot_token,
            'main_admin_account': self.main_admin_account,
            'delay_between_workers': self.delay_between_workers,
            'sequential_workers': self.sequential_workers,
            'admin_rights_timeout': self.admin_rights_timeout
        }

    def is_admin_inviter(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω-–∏–Ω–≤–∞–π—Ç–µ—Ä–æ–º"""
        return self.invite_type == "admin"

    def validate_admin_config(self) -> tuple[bool, list[str]]:
        """
        –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω-–∏–Ω–≤–∞–π—Ç–µ—Ä–∞

        Returns:
            tuple[bool, list[str]]: (–≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å, —Å–ø–∏—Å–æ–∫_–æ—à–∏–±–æ–∫)
        """
        if not self.is_admin_inviter():
            return True, []

        errors = []

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
        if not self.bot_token.strip():
            errors.append("–ù–µ —É–∫–∞–∑–∞–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
        elif ':' not in self.bot_token:
            errors.append("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
        if not self.main_admin_account.strip():
            errors.append("–ù–µ —É–∫–∞–∑–∞–Ω –≥–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω –∞–∫–∫–∞—É–Ω—Ç")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã
        if self.success_per_chat < 0:
            errors.append("–õ–∏–º–∏—Ç –∏–Ω–≤–∞–π—Ç–æ–≤ –Ω–∞ —á–∞—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")

        if self.success_per_account < 0:
            errors.append("–õ–∏–º–∏—Ç –∏–Ω–≤–∞–π—Ç–æ–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")

        if self.threads_per_chat < 1:
            errors.append("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 1")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–µ—Ä–∂–∫–∏
        if self.delay_between < 0:
            errors.append("–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∏–Ω–≤–∞–π—Ç–∞–º–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π")

        if self.admin_rights_timeout < 10:
            errors.append("–¢–∞–π–º–∞—É—Ç –ø—Ä–∞–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥")

        return len(errors) == 0, errors


@dataclass
class AdminCommand:
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞"""
    action: str  # "GRANT_RIGHTS" –∏–ª–∏ "REVOKE_RIGHTS"
    worker_name: str
    worker_user_id: int
    worker_access_hash: int
    chat_link: str
    response_queue: queue.Queue  # –î–ª—è –æ—Ç–≤–µ—Ç–∞ –≤–æ—Ä–∫–µ—Ä—É
    username: str


@dataclass
class AccountErrorCounters:
    """–°—á–µ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞"""
    consecutive_spam_blocks: int = 0
    consecutive_writeoffs: int = 0
    consecutive_block_invites: int = 0

    def reset_all(self):
        """–°–±—Ä–æ—Å –≤—Å–µ—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤"""
        self.consecutive_spam_blocks = 0
        self.consecutive_writeoffs = 0
        self.consecutive_block_invites = 0

    def reset_spam_blocks(self):
        """–°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ —Å–ø–∞–º-–±–ª–æ–∫–æ–≤"""
        self.consecutive_spam_blocks = 0

    def reset_writeoffs(self):
        """–°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ —Å–ø–∏—Å–∞–Ω–∏–π"""
        self.consecutive_writeoffs = 0

    def reset_block_invites(self):
        """–°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –±–ª–æ–∫–æ–≤ –∏–Ω–≤–∞–π—Ç–æ–≤"""
        self.consecutive_block_invites = 0


@dataclass
class ChatAdmin:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–ª–∞–≤–Ω–æ–º –∞–¥–º–∏–Ω–µ —á–∞—Ç–∞"""
    name: str
    account: Optional[object] = None
    session_path: Optional[Path] = None
    json_path: Optional[Path] = None
    is_ready: bool = False