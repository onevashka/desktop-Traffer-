# src/utils/folder_utils.py
"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞–ø–∫–∞–º–∏ - –æ—Ç–∫—Ä—ã—Ç–∏–µ –≤ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ
"""

import os
import subprocess
import platform
from pathlib import Path
from loguru import logger


class FolderManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞–ø–∫–∞–º–∏"""

    @staticmethod
    def open_folder_in_explorer(folder_path: Path) -> bool:
        """
        –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–ø–∫—É –≤ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã

        Args:
            folder_path: –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ

        Returns:
            True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
        """
        try:
            # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if not folder_path.exists():
                folder_path.mkdir(parents=True, exist_ok=True)
                logger.info(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {folder_path}")

            # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
            abs_path = folder_path.resolve()

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
            system = platform.system().lower()

            if system == "windows":
                # Windows - –∏—Å–ø–æ–ª—å–∑—É–µ–º explorer
                subprocess.Popen(f'explorer "{abs_path}"', shell=True)
                logger.info(f"üìÇ –û—Ç–∫—Ä—ã—Ç–∞ –ø–∞–ø–∫–∞ –≤ Windows Explorer: {abs_path}")

            elif system == "darwin":  # macOS
                # macOS - –∏—Å–ø–æ–ª—å–∑—É–µ–º open
                subprocess.Popen(["open", str(abs_path)])
                logger.info(f"üìÇ –û—Ç–∫—Ä—ã—Ç–∞ –ø–∞–ø–∫–∞ –≤ macOS Finder: {abs_path}")

            elif system == "linux":
                # Linux - –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã
                file_managers = ["xdg-open", "nautilus", "dolphin", "thunar", "pcmanfm"]

                for fm in file_managers:
                    try:
                        subprocess.Popen([fm, str(abs_path)])
                        logger.info(f"üìÇ –û—Ç–∫—Ä—ã—Ç–∞ –ø–∞–ø–∫–∞ –≤ Linux ({fm}): {abs_path}")
                        break
                    except FileNotFoundError:
                        continue
                else:
                    logger.warning(f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è Linux")
                    return False

            else:
                logger.warning(f"‚ö†Ô∏è –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –û–°: {system}")
                return False

            return True

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–ø–∫–∏ {folder_path}: {e}")
            return False

    @staticmethod
    def get_add_accounts_folder(category: str, current_status: str = None) -> Path:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–∞–ø–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏

        Args:
            category: "traffic" –∏–ª–∏ "sales"
            current_status: —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

        Returns:
            Path –∫ –ø–∞–ø–∫–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        """
        from paths import WORK_ACCOUNTS_TRAFFER_FOLDER, WORK_ACCOUNTS_SALE_FOLDER

        if category == "traffic":
            # –î–ª—è —Ç—Ä–∞—Ñ–∏–∫–∞ - –ø–∞–ø–∫–∞ "–î–ª—è —Ä–∞–±–æ—Ç—ã"
            folder = WORK_ACCOUNTS_TRAFFER_FOLDER
            logger.debug(f"üìÅ –ü–∞–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞: {folder}")

        elif category == "sales":
            # –î–ª—è –ø—Ä–æ–¥–∞–∂ - –ø–∞–ø–∫–∞ "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
            folder = WORK_ACCOUNTS_SALE_FOLDER
            logger.debug(f"üìÅ –ü–∞–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂: {folder}")

        else:
            # Fallback - –∫–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞
            folder = Path("–ê–∫–∫–∞—É–Ω—Ç—ã")
            logger.warning(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è {category}, –∏—Å–ø–æ–ª—å–∑—É–µ–º: {folder}")

        return folder

    @staticmethod
    def open_add_accounts_folder(category: str, current_status: str = None) -> bool:
        """
        –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–ø–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤

        Args:
            category: "traffic" –∏–ª–∏ "sales"
            current_status: —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

        Returns:
            True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
        """
        folder = FolderManager.get_add_accounts_folder(category, current_status)

        logger.info(f"üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤ ({category}): {folder}")
        return FolderManager.open_folder_in_explorer(folder)

    @staticmethod
    def open_current_folder(category: str, status: str) -> bool:
        """
        –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–ø–∫—É —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞

        Args:
            category: "traffic" –∏–ª–∏ "sales"
            status: —Å—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤

        Returns:
            True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
        """
        try:
            from src.accounts.manager import _account_manager

            if not _account_manager:
                logger.error("‚ùå –ú–µ–Ω–µ–¥–∂–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                return False

            # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å—Ç–∞—Ç—É—Å–∞
            if category == "traffic":
                folder = _account_manager.traffic_folders.get(status)
            elif category == "sales":
                folder = _account_manager.sales_folders.get(status)
            else:
                logger.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category}")
                return False

            if not folder:
                logger.error(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è {category}/{status}")
                return False

            logger.info(f"üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–ø–∫—É —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ ({category}/{status}): {folder}")
            return FolderManager.open_folder_in_explorer(folder)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–ø–∫–∏ {category}/{status}: {e}")
            return False

    @staticmethod
    def open_archives_folder() -> bool:
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–ø–∫—É —Å –∞—Ä—Ö–∏–≤–∞–º–∏"""
        archives_folder = Path("–ê—Ä—Ö–∏–≤—ã")
        logger.info(f"üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–ø–∫—É –∞—Ä—Ö–∏–≤–æ–≤: {archives_folder}")
        return FolderManager.open_folder_in_explorer(archives_folder)

    @staticmethod
    def open_root_accounts_folder() -> bool:
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
        root_folder = Path("–ê–∫–∫–∞—É–Ω—Ç—ã")
        logger.info(f"üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {root_folder}")
        return FolderManager.open_folder_in_explorer(root_folder)


# –£–¥–æ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞

def open_add_accounts_folder(category: str, current_status: str = None) -> bool:
    """–ë—ã—Å—Ç—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    return FolderManager.open_add_accounts_folder(category, current_status)


def open_current_folder(category: str, status: str) -> bool:
    """–ë—ã—Å—Ç—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏"""
    return FolderManager.open_current_folder(category, status)


def open_archives_folder() -> bool:
    """–ë—ã—Å—Ç—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–ø–∫–∏ –∞—Ä—Ö–∏–≤–æ–≤"""
    return FolderManager.open_archives_folder()


def open_root_accounts_folder() -> bool:
    """–ë—ã—Å—Ç—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏"""
    return FolderManager.open_root_accounts_folder()